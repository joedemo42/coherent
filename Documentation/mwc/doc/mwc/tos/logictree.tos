.ds TI "Appendix"
.ds TL "Logic Tree"
.NH "Appendix" 1
.PP
The following lists all of the entries in the Lexicon in their
logical order.
The Lexicon is tree structured, with the root entry being
the one entitled
.BR Lexicon .
.PP
The logical structure of the Lexicon closely follows that of the ANSI
Standard.
Articles on related topics are grouped together for easy access.
In instances where an article describes an entity that has more than
one use (e.g., the operator \*(Ql*\*(Qr), the article's position in
the logic tree is based on a judgement of how that entity is used
most frequently by C programmers.
.PP
Each entry marked with an asterisk \*(Ql*\*(Qr refers to a topic that is
specific to the Atari ST or to \*(PN.
.sp
.nf
Lexicon
	Definitions
		address
		alias
		alignment
		argument
		arena*
		ASCII
		behavior
		BIOS*
		bit
		bit-fields
		bit map*
		block
		buffer
		byte
		compliance
		cc0*
		cc1*
		cc2*
		cc3*
		daemon*
		decimal-point character
		directory*
		domain error
		envp*
		executable file*
		false
		field*
		file
		file descriptor*
		handle*
		interrupt*
		letter
		link
		manifest constant
		n.out*
		nested comments*
		nybble*
		object format*
		object
		parameter
		pattern*
		port*
		portability
		process*
		pun*
		quiet change
		random access*
		range error
		ranlib*
		read-only memory*
		record*
		register*
		rvalue
		spirit of C
		stack*
		Standard
		standard error
		standard input
		standard output
		stream
		string
		true
		Universal Coordinated Time
		wildcards*
	Environment
		__end*
		_stksize*
		argc
		argv
		character display semantics
		diagnostics
		environ*
		main
		XOFF*
		XON*
		environmental variable*
			HOME*
			INCDIR*
			LIBPATH*
			PATH*
			SUFF*
			TIMEZONE*
			TMPDIR*
		linker-defined symbol
			edata*
			end*
			etext*
		numerical limits
			float.h
			limits.h
		program startup
		program termination
		runtime startup*
			crts0.o*
			crtsd.o*
			crtsg.o*
		sequence points
		side effects
		signals/interrupts
		source file
		translation limits
		translation phase
		translation unit
		trigraph sequences
	Language
		constant expressions
		conversions
			explicit conversion
			function designator
			implicit conversion
			lvalue
			null pointer constant
			value preserving
			void expression
		declarations
			definition
			declarators
				array declarators
				function declarators
				pointer declarators
			initialization
			storage-class specifiers
				auto
				extern
				register
				static
				typedef
			type names
			type qualifier
				const
				volatile
			type specifier
				compatible types
				enum
		expressions
			!
			! =
			%
			% =
			&
			& &
			& =
			*
			* =
			+
			+ +
			+ =
			,
			-
			- -
			- =
			->
			.
			/
			/ =
			<
			< <
			< < =
			< =
			=
			= =
			>
			> >
			> > =
			> =
			? :
			[ ]
			^
			^ =
			|
			| |
			| =
			~
			sizeof
		external definitions
			function definition
			object definition
		function call
		function prototypes
		lexical elements
			comment
				*/
				/*
			constants
				character constant
					escape sequence
				enumeration constant
				floating constant
				integer constant
			header names
			identifiers
				digit
				external name
				internal name
				linkage
				nondigit
				name space
					label
					member
					ordinary identifier
					tag
				scope
				storage duration
				types
					char
					double
					float
					int
					long double
					long int
					pointer
					short int
					signed
					signed char
					struct
					union
					unsigned
					unsigned char
					unsigned int
					unsigned long int
					unsigned short int
					void
			keywords
			operators
			preprocessing numbers
			punctuators
				( )
				:
				;
				{ }
			string literal
				"
			token
		preprocessing
			#
			# #
			#define
			#elif
			#else
			#endif
			#error
			#if
			#ifdef
			#ifndef
			#include
			#line
			#pragma
			#undef
			_ _DATE_ _
			_ _FILE_ _
			_ _LINE_ _
			_ _STDC_ _
			_ _TIME_ _
			defined
			null directive
		statements
			break
			case
			continue
			default
			do
			else
			for
			goto
			if
			null statement
			return
			switch
			while
	Library
		libaes*
		libc*
		libm*
		libvdi*
		NULL
		offsetof()
		ptrdiff_t
		size_t
		stddef.h
		wchar_t
		access checking
			access.h*
			access()*
			path.h*
			path()*
			stat.h*
			fstat()*
			stat()*
		AES*
			aesbind.h*
			menu*
			object*
			window*
			appl_exit()*
			appl_find()*
			appl_init()*
			appl_read()*
			appl_tplay()*
			appl_trecord()*
			appl_write()*
			evnt_button()*
			evnt_dclick()*
			evnt_keybd()*
			evnt_mesag()*
			evnt_mouse()*
			evnt_multi()*
			evnt_timer()*
			form_alert()*
			form_center()*
			form_dial()*
			form_do()*
			form_error()*
			fsel_input()*
			graf_dragbox()*
			graf_growbox()*
			graf_handle()*
			graf_mbox()*
			graf_mkstate()*
			graf_mouse()*
			graf_rubbox()*
			graf_shrinkbox()*
			graf_slidebox()*
			graf_watchbox()*
			menu_bar()*
			menu_icheck()*
			menu_ienable()*
			menu_register()*
			menu_text()*
			menu_tnormal()*
			objc_add()*
			objc_change()*
			objc_delete()*
			objc_draw()*
			objc_edit()*
			objc_find()*
			objc_offset()*
			objc_order()*
			rc_copy()*
			rc_equal()*
			rc_intersect()*
			rc_union()*
			rsrc_free()*
			rsrc_gaddr()*
			rsrc_load()*
			rsrc_obfix()*
			rsrc_saddr()*
			scrp_read()*
			scrp_write()*
			shel_envrn()*
			shel_find()*
			shel_read()*
			shel_write()*
			wind_calc()*
			wind_close()*
			wind_create()*
			wind_delete()*
			wind_find()*
			wind_get()*
			wind_open()*
			wind_set()*
			wind_update()*
		BIOS calls*
			osbind.h*
			bios*
				bios.h*
				Bconin()*
				Bconout()*
				Bconstat()*
				Bcostat()*
				Drvmap()*
				Getbpb()*
				Getmpb()*
				Getshift()*
				Mediach()*
				Rwabs()*
				Setexc()*
				Tickcal()*
			gemdos*
				Cauxin()*
				Cauxis()*
				Cauxos()*
				Cauxout()*
				Cconin()*
				Cconis()*
				Cconos()*
				Cconout()*
				Cconrs()*
				Cconws()*
				Cnecin()*
				Cprnos()*
				Cprnout()*
				Crawcin()*
				Crawio()*
				Dcreate()*
				Ddelete()*
				Dfree()*
				Dgetdrv()*
				Dgetpath()*
				Dsetdrv()*
				Dsetpath()*
				Fattrib()*
				Fclose()*
				Fcreate()*
				Fdatime()*
				Fdelete()*
				Fdup()*
				Fforce()*
				Fgetdta()*
				Fopen()*
				Fread()*
				Frename()*
				Fseek()*
				Fsetdta()*
				Fsfirst()*
				Fsnext()*
				Fwrite()*
				Malloc()*
				Mfree()*
				Mshrink()*
				Pexec()*
				Pterm()*
				Pterm0()*
				Ptermres()*
				Super()*
				Sversion()*
				Tgetdate()*
				Tgettime()*
				Tsetdate()*
				Tsettime()*
			xbios*
				xbios.h*
				Bioskeys()*
				Blitmode()*
				Cursconf()*
				Dosound()*
				Flopfmt()*
				Floprd()*
				Flopver()*
				Flopwr()*
				Getrez()*
				Gettime()*
				Giaccess()*
				Ikbdws()*
				Initmous()*
				Iorec()*
				Jdisint()*
				Jenabint()*
				Kbdvbase()*
				Kbrate()*
				Keytbl()*
				Logbase()*
				Mfpint()*
				Midiws()*
				Offgibit()*
				Ongibit()*
				Physbase()*
				Protobt()*
				Prtblk()*
				Puntaes()*
				Random()*
				Rsconf()*
				Scrdmp()*
				Setcolor()*
				Setpallete()*
				Setprt()*
				Setscreen()*
				Settime()*
				Supexec()*
				Vsync()*
				Xbtimer()*
		character handling
			ctype.h
			isalnum()
			isalpha()
			iscntrl()
			isdigit()
			isgraph()
			islower()
			isprint()
			ispunct()
			isspace()
			isupper()
			isxdigit()
			tolower()
			toupper()
		date and time
			time.h
			CLK_TCK
			clock_t
			time_t
			tm
			asctime()
			clock()
			ctime()
			difftime()
			gmtime()
			localtime()
			mktime()
			strftime()
			time()
		diagnostics
			assert.h
			NDEBUG
			assert()
		errors
			errno.h
			errno
		extended character handling
			xctype.h*
			_tolower()*
			_toupper()*
			isascii()*
			toascii()*
		extended mathematics
			xmath.h
			cabs()*
			hypot()*
			j0()*
			j1()*
			jn()*
		extended miscellaneous
			_exit()*
			chdir()*
			chmod()*
			chown()*
			close()*
			creat()*
			dup()*
			dup2()*
			ecvt()*
			execve()*
			fcvt()*
			gcvt()*
			index()*
			lmalloc()*
			lrealloc()*
			isatty()*
			lseek()*
			mktemp()*
			notmem()*
			open()*
			peekb()*
			peekl()*
			peekw()*
			pnmatch()*
			pokeb()*
			pokel()*
			pokew()*
			read()*
			rindex()*
			sbrk()*
			shellsort()*
			swab()*
			tempnam()*
			unlink()*
			write()*
		extended STDIO
			xstdio.h
			fdopen()*
			fgetw()*
			fileno()*
			fputw()*
			getw()*
			putw()*
		extended time
			xtime.h*
			dayspermonth()*
			isleapyear()*
			jday_to_time()*
			jday_to_tm()*
			Kgettime()*
			Ksettime()*
			Sgettime()*
			Ssettime()*
			stime()*
			tetd_to_tm()*
			time_to_jday()*
			tm_to_jday()*
			tm_to_tetd()*
		general utilities
			stdlib.h
			div_t
			ldiv_t
			abort()
			abs()
			atexit()
			atof()
			atoi()
			atol()
			bsearch()
			calloc()
			div()
			exit()
			free()
			getenv()
			labs()
			ldiv()
			malloc()
			mblen()
			mbstowcs()
			mbtowc()
			qsort()
			rand()
			realloc()
			srand()
			strtod()
			strtol()
			strtoul()
			system()
			wcstombs()
			wctomb()
		header
			basepage.h*
			canon.h*
			gemdefs.h*
			gemout.h*
			linea.h*
			mtype.h*
			nout.h*
			obdefs.h*
		localization
			locale.h
			lconv
			localeconv()
			setlocale()
		mathematics
			math.h
			acos()
			asin()
			atan()
			atan2()
			ceil()
			cos()
			cosh()
			exp()
			fabs()
			floor()
			fmod()
			frexp()
			ldexp()
			log()
			log10()
			modf()
			pow()
			sin()
			sinh()
			sqrt()
			tan()
			tanh()
		non-local jumps
			setjmp.h
			jmp_buf
			longjmp()
			setjmp()
		signal handling
			signal.h
			sig_atomic_t
			raise()
			signal()
		STDIO
			stdio.h
			EOF
			FILE
			fpos_t
			stderr
			stdin
			stdout
			clearerr()
			fclose()
			feof()
			ferror()			
			fflush()
			fgetc()
			fgetpos()
			fgets()
			fopen()
			fprintf()
			fputc()
			fputs()
			fread()
			freopen()
			fscanf()
			fseek()
			fsetpos()
			ftell()
			fwrite()
			getc()
			getchar()
			gets()
			perror()
			printf()
			putc()
			putchar()
			puts()
			rewind()
			setbuf()
			setvbuf()
			remove()
			rename()
			scanf()
			sprintf()
			sscanf()
			tmpfile()
			tmpnam()
			ungetc()
			vfprintf()
			vprintf()
			vsprintf()
		string handling
			string.h
			memchr()
			memcpy()
			memcmp()
			memmove()
			memset()
			strcat()
			strchr()
			strcmp()
			strcoll()
			strcpy()
			strcspn()
			strerror()
			strlen()
			strncat()
			strncmp()
			strncpy()
			strpbrk()
			strrchr()
			strspn()
			strstr()
			strtok()
			strxfrm()
		variable arguments
			stdarg.h
			va_list
			va_arg()
			va_end()
			va_start()
		VDI
			vdibind.h*
			v_arc()*
			v_bar()*
			v_bit_image()*
			v_cellarray()*
			v_circle()*
			v_clear_disp_list()*
			v_clrwk()*
			v_clsvwk()*
			v_clswk()*
			v_contourfill()*
			v_curdown()*
			v_curhome()*
			v_curleft()*
			v_curright()*
			v_curtext()*
			v_curup()*
			v_dspcur()*
			v_eeol()*
			v_eeos()*
			v_ellarc()*
			v_ellipse()*
			v_ellpie()*
			v_enter_cur()*
			v_exit_cur()*
			v_fillarea()*
			v_form_adv()*
			v_get_pixel()*
			v_gtext()*
			v_hardcopy()*
			v_hide_c()*
			v_justified()*
			v_meta_extents()*
			v_opnvwk()*
			v_opnwk()*
			v_output_window()*
			v_pieslice()*
			v_pline()*
			v_pmarker()*
			v_rbox()*
			v_rfbox()*
			v_rmcur()*
			v_rvoff()*
			v_rvon()*
			v_show_c()*
			v_updwk()*
			v_write_meta()*
			vex_butv()*
			vex_curv()*
			vex_motv()*
			vex_timv()*
			vm_filename()*
			vq_cellarray()*
			vq_chcells()*
			vq_color()*
			vq_curaddress()*
			vq_extnd()*
			vq_key_s()*
			vq_mouse()*
			vq_tabstatus()*
			vqf_attributes()*
			vqin_mode()*
			vql_attributes()*
			vqm_attributes()*
			vqp_error()*
			vqp_films()*
			vqp_state()*
			vqt_attributes()*
			vqt_extent()*
			vqt_fontinfo()*
			vqt_name()*
			vqt_width()*
			vr_recfl()*
			vr_trnfm()*
			vro_cpyfm()*
			vrq_choice()*
			vrq_locator()*
			vrq_string()*
			vrq_valuator()*
			vrt_cpyfm()*
			vs_clip()*
			vs_color()*
			vs_curaddress()*
			vs_palette()*
			vsc_form()*
			vsf_color()*
			vsf_interior()*
			vsf_perimeter()*
			vsf_style()*
			vsf_udpat()*
			vsin_mode()*
			vsl_color()*
			vsl_ends()*
			vsl_type()*
			vsl_udsty()*
			vsl_width()*
			vsm_choice()*
			vsm_color()*
			vsm_height()*
			vsm_locator()*
			vsm_string()*
			vsm_type()*
			vsm_valuator()*
			vsp_message()*
			vsp_save()*
			vsp_state()*
			vst_alignment()*
			vst_color()*
			vst_effects()*
			vst_font()*
			vst_height()*
			vst_load_fonts()*
			vst_point()*
			vst_rotation()*
			vst_unload_fonts()*
			vswr_mode()*
	Atari-specific features
		archive
			galaxy.a*
			me.a*
			rdy.a*
		command*
			ar*
			as68toas*
			as*
			cat*
			cc*
			cd*
			chmod*
			cmp*
			cp*
			cpp*
			cursconf*
			date*
			db*
			df*
			diff*
			drtomw*
			drvprs*
			echo*
			egrep*
			equal*
			exit*
			file*
			gem*
			getcol*
			getpal*
			getphys*
			getrez*
			help*
			hidemouse*
			htom*
			if*
			inherit*
			is_set*
			kbrate*
			kick*
			lc*
			ld*
			ls*
			ltom*
			make*
			me*
			mf*
			mkdir*
			mousehidden*
			msh*
			mshversion*
			msleep*
			mtoh*
			mtol*
			mv*
			mwtomw*
			nm*
			not*
			od*
			pr*
			pwd*
			rdy*
			rescomp*
			resdecom*
			resource*
			rm*
			rmdir*
			rsconf*
			setcol*
			setenv*
			setpal*
			setphys*
			setprt*
			setrez*
			set*
			show*
			showmouse*
			size*
			sleep*
			snap*
			sort*
			strip*
			tail*
			time*
			tos*
			touch*
			uniq*
			unset*
			unsetenv*
			version*
			wc*
			while*
		example
			example*
			picture*
		technical information*
			\eauto*
			bombs*
			byte ordering*
			desk accessory*
			error codes*
			keyboard*
			Line A*
			memory allocation*
			metafile*
			screen control*
			system addresses*
.fi
