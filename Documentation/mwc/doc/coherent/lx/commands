.TH commands "" "" Overview
.PC
.PP
The following lists the commands included with \*(PN.
The command name is given on the left
and a description on the right.
.SH "CD-ROM Commands"
The following commands let you manipulate a CD-ROM device.
.LB
\fBcdplayer\fR	Play audio CDs
\fBcdv\fR	Interface to CD-ROM devices
\fBcdview\fR	Read a file from a CD-ROM
.SH Communications
The following commands let you exchange information
with other users and other systems.
.LB
\fBckermit\fR	Interactive inter-system communication and file transfer
\fBcu\fR	\*(UN-compatible interactive communications program
\fBmail\fR	Send/read electronic mail
\fBmesg\fR	Permit/deny messages from other users
\fBmsg\fR	Send a brief message to other users
\fBmsgs\fR	Read messages intended for all \*(CO users
\fBuucico\fR	Connect to a remote system
\fBuucp\fR	Copy a file to or from a remote system
\fBwall\fR	Send a message to all logged in users
\fBwrite\fR	Converse with another user
.SH "De-fragmentation Commands"
The following commands give you information about the degree of
fragmentation shown by a file system's free list.
They can also rebuild a file system, to de-fragment it and so
greatly the speed with which you can read and write it.
.LB
\fBdpac\fR	De-fragment a COHERENT file system
\fBfmap\fR	Measure fragmentation of the free list
\fBqpac\fR	Map the file system
\fBspac\fR	Sort a file system
\fBupac\fR	De-fragment a file system without sorting
.SH "Directory and File Handling"
The following commands let you create, remove, and otherwise manipulate
files and directories.
.LB
\fBcat\fR	Concatenate a file to the standard output
\fBcd\fR	Change directory
\fBchgrp\fR	Change the group owner of a file
\fBchmod\fR	Change the modes of a file
\fBchmog\fR	Change mode, ownership, and group of a file
\fBchown\fR	Change ownership of a file
\fBcmp\fR	Compare bytes of two files
\fBcompress\fR	Compress a file
.\"\fBcopy\fR	Copy groups of files or directories
\fBcp\fR	Copy a file
\fBcpdir\fR	Copy directory hierarchy
\fBdd\fR	Convert the contents of a file
\fBdos\fR	Manipulate files on \*(MD file systems
\fBdoscat\fR	Concatenate a file on an \*(MD file system
\fBdoscp\fR	Copy files to/from an \*(MD file system
\fBdoscpdir\fR	Copy directories to/from an \*(MD file system
\fBdosdir\fR	List the contents of an \*(MD directory
\fBdosdel\fR	Delete a file from an \*(MD file system
\fBdosformat\fR	Build an \*(MD file system on a floppy disk
\fBdoslabel\fR	Label an \*(MD floppy disk
\fBdosls\fR	List files on an \*(MD file system
\fBdosmkdir\fR	Create a directory in an \*(MD file system
\fBdosrm\fR	Remove a file from an \*(MD file system
\fBdosrmdir\fR	Remove a directory from an \*(MD file system
\fBfdisk\fR	View/change hard-disk partitioning
\fBfile\fR	Name a file's type
\fBfind\fR	Search for files satisfying a pattern
\fBgzip\fR	GNU utility to compress files
\fBgunzip\fR	GNU utility to uncompress files
\fBl\fR	List directory's contents in long format
\fBlc\fR	List directory's contents in columnar format
\fBlf\fR	List directory's contents in columnar format
\fBln\fR	Create a link to a file
\fBlr\fR	List subdirectorys' contents in columnar format
\fBls\fR	List directory's contents
\fBlx\fR	List directory's contents in columnar format
\fBmkdir\fB\fR	Create a directory
\fBmv\fR	Rename files or directories
\fBmvdir\fR	Rename a directory
\fBpwd\fR	Print the name of the current directory
\fBqfind\fR	Quickly find all files with a given name
\fBrm\fR	Remove files
\fBrmdir\fR	Remove directories
\fBtouch\fR	Update modification time of a file
\fBuncompress\fR	Uncompress a file
\fBunpack\fR	GNU utility to uncompress files
\fBunzip\fR	Unzip a zipped archive
\fBwhereis\fR	Locate source, binary, and manual files
\fBwhich\fR	Locate executable files
\fBzcat\fR	Concatenate a compressed file
\fBzcmp\fR	Compare compressed files
\fBzforce\fR	Force the suffix \fB.gz\fR onto every \fBgzip\fR file
\fBznew\fR	Recompress \fB.Z\fR files to \fB.gz\fR files
.SH Editors
\*(CO includes a number of text editors, to suit a variety of
tastes.
.LB
\fBed\fR	Interactive line editor
\fBelvis\fR	Berkeley-style screen editor
\fBemacs\fR	\*(CO screen editor
\fBex\fR	Berkeley-style line editor
\fBme\fR	\*(CO screen editor
\fBsed\fR	Stream editor
\fBvi\fR	Berkeley-style screen editor
.SH Games
The following commands are just for fun.
.LB
\fBalmanac\fR	Print an almanac entry for this date
\fBbanner\fR	Print large sized letters
\fBcal\fR	Print a calendar
\fBchase\fR	Highly amusing video game
\fBfortune\fR	Print randomly selected, hopefully humorous, text
\fBguess\fR	Extraordinarily amusing guessing game
\fBlines\fR	Highly amusing board game
\fBmoo\fR	Greatly amusing numeric guessing game
\fBrubik\fR	Play Rubik's cube
\fBttt\fR	Three-dimensional tic-tac-toe
.SH "Kernel Tools"
The following commands let you configure the \*(CO kernel, and build a new
bootable kernel:
.LB
\fBasypatch\fR	Patch a kernel file for an asynchronous configuration
\fBcohtune\fR	Set a variable within a device driver
\fBidbld\fR	Reconfigure the COHERENT kernel
\fBidenable\fR	Enable or disable a device driver
\fBidmkcoh\fR	Build a new kernel
\fBidtune\fR	Set a tunable system value
\fBpatch\fR	Patch a variable or flag within the kernel
.SH "Languages and Programming Tools"
The \*(CO system comes with a number of languages, and
tools for debugging and maintaining your programs.
.LB
\fBas\fR	Mark Williams assembler
\fBasfix\fR	Convert file to 80386 \fBas\fR form
\fBawk\fR	Report generation, pattern scanning, and processing language
\fBcc\fR	C-language compiler
\fBcdmp\fR	Dump COFF files into a readable form
\fBconv\fR	Numeric base converter
\fBcpp\fR	C preprocessor
\fBdb\fR	Assembly-level symbolic debugger
\fBld\fR	Link relocatable object files
\fBlex\fR	Lexical analyzer generator
\fBm4\fR	Macro processor
\fBmake\fR	Program building discipline
\fBmakedepend\fR	Generate list of dependencies for a \fBmakefile\fR
\fBnm\fR	Print a program's symbol table
\fBod\fR	Print an octal dump of a file
\fBprof\fR	Print execution profile of a C program
\fBref\fR	Display a C function header
\fBsrcpath\fR	Find source files
\fBsize\fR	Print size of an object file
\fBstrip\fR	Strip symbol tables from executable file
\fByacc\fR	Parser generator
.SH "Libraries and Archives"
The following commands help you create and read libraries and archives.
These can be used as libraries (such as the libraries
used when linking a C program), or to back up files.
.LB
\fBar\fR	The object librarian/archiver
\fBcpio\fR	Archiving/backup utility
\fBdump\fR	File-system backup utility
\fBdumpdate\fR	Print dump dates
\fBdumpdir\fR	Print the directory of a dump
\fBgnucpio\fR	Archiving/backup utility
\fBgtar\fR	Archiving/backup utility
.\"\fBpax\fR	Portable archive interchange
\fBranlib\fR	Create index for object library
\fBrestor\fR	Restore file system
\fBtar\fR	Archiving/backup utility
.\"\fBustar\fR	Archiving/backup utility
.SH "Mail"
\*(CO comes with with a full-featured,
\*(UN-style mail facility based on the program
.BR smail .
This is described in the overview article \fBmail\fR.
The following commands perform mail-related work.
Some are also listed in other sections of this article.
Please note that the descriptions of
.B smail
and
.B rmail
are only for those users who wish to manipulate \*(UU mailing on a low level;
for most users, the descriptions under the command
.B mail
are more than sufficient.
.LB
\fBcheckerr\fR	Check the mail system for errors
\fBcvmail\fR	Convert stored mail to System V format
\fBgetmap\fR	De-archive Usenet map articles
\fBlmail\fR	Deliver local mail
\fBmail\fR	Send/read electronic mail
\fBmailq\fR	Display information about spooled mail
\fBmkdbm\fR	Build a data base for \fBsmail\fR
\fBmkfnames\fR	Generate data base of user names
\fBmkhpath\fR	Build a \fBpathalias\fR data base from a \fBhosts\fR table
\fBmkline\fR	Fold mail data into one-line records
\fBmkpath\fR	Create a pathalias output file
\fBmksort\fR	Sort the standard input, allowing arbitrarily long lines
\fBnewaliases\fR	Build the \fBaliases\fR data base from ASCII source
\fBnptx\fR	Generate permutations of users' full names
\fBpathalias\fR	Generate a set of paths among computers"
\fBpathmerge\fR	Merge sorted paths files
\fBrmail\fR	Receive mail
\fBrsmtp\fR	Run batched SMTP mail
\fBrunq\fR	Periodically process the mail queue
\fBsavelog\fR	Save a mail log
\fBsmail\fR	Send mail
\fBsmtpd\fR	SMTP daemon
.PP
For information on the configuration files used by the
.B smail
system, see the overview article
.BR mail ,
or the article
.BR "Administering COHERENT" .
.SH "Printing"
The following commands help you print text.
For commands that drive communications devices, e.g., modems, see the
section on \fICommunications\fR, above.
.LB
\fBcancel\fR	Cancel a print job
\fBchreq\fR	Change priory, lifetime, or printer for a job
\fBepson\fR	Prepare a file for an Epson printer
\fBfnkey\fR	Set/print function keys for the console
\fBhp\fR	Prepare files for HP LaserJet-compatible printer
\fBhpr\fR	Send to LaserJet printer spooler
\fBhpskip\fR	Abort/restart current listing on LaserJet
\fBlp\fR	Spool a job for printing
\fBlpadmin\fR	Administer the \fBlp\fR print-spooler system
\fBlpsched\fR	Print jobs spooled with command \fBlp\fR
\fBlpshut\fR	Turn off the printer daemon
\fBlpr\fR	Send to line printer spooler
\fBlpskip\fR	Terminate/restart current line printer listing
\fBlpstat\fR	Give status of printer or job
\fBpclfont\fR	Prepare a PCL font for downloading via MLP
\fBreprint\fR	Reprint a spooled print job
\fBroute\fR	Show or reset a user's default printer
\fBstty\fR	Set/print terminal modes
.SH "Shell Commands"
\*(CO comes with two command interpreters, or \fIshells\fR:
.BR ksh ,
the Korn shell,
and
.BR sh ,
the Bourne shell.
The following commands are used either by the Korn shell, by the
Bourne shell, or by both.
Please note that commands used only by the Korn shell are marked by a
dagger `\(dg', whereas commands used only by the Bourne shell are marked
by an asterisk `*'.
.LB
\fBalias\fR\(dg	Set an alias
\fBbasename\fR	Strip path information from a file name
.\" \fBbg\fR\(dg	Resume running in the background a stopped job
\fBbind\fR\(dg	Bind key sequence to editing command
\fBbreak\fR	Exit from shell construct
\fBbuiltin\fR\(dg	Execute a command as a built-in command
\fBcase\fR	Execute commands conditionally according to pattern
\fBcd\fR	Change directory
\fBcontinue\fR	Terminate current iteration of shell construct
\fBdirname\fR	Extract a directory name
\fBdirs\fR*	Print contents of directory stack
\fBecho\fR	Repeat an argument
\fBeval\fR	Evaluate arguments
\fBexec\fR	Execute command directly
\fBexit\fR	Exit from a shell
\fBexport\fR	Add a shell variable to the environment
\fBexpr\fR	Compute a command line expression
\fBfalse\fR	Unconditional failure
\fBfc\fR\(dg	Edit and re-execute one or more previous commands
.\" \fBfg\fR\(dg	Resume running in the foreground a stopped job
\fBfor\fR	Execute commands for tokens in list
\fBfrom\fR	Generate list of numbers, for use in loop
\fBgetopts\fR	Parse command-line options
\fBhash\fR\(dg	Add a command to the shell's hash table
\fBid\fR	Print user and group IDs and names
\fBif\fR	Execute a command conditionally
\fBjobs\fR\(dg	Print information about jobs
\fBlet\fR	Evaluate an expression
\fBnohup\fR	Run a command while ignoring hangup signals
\fBpopd\fR*	Pop an item from the directory stack
\fBprep\fR	Produce a word list
\fBprint\fR\(dg	Echo text onto the standard output
\fBpushd\fR*	Push an item onto the directory stack
\fBread\fR	Assign values to shell variables
\fBreadonly\fR	Mark a shell variable as read only
\fBset\fR	Set shell option flags and positional parameters
\fBshift\fR	Shift positional parameters
\fBsleep\fR	Stop executing for a specified time
\fBtee\fR	Copy input to multiple output streams
\fBtest\fR	Evaluate conditional expression
\fBtimes\fR	Print total user and system times
\fBtrap\fR	Execute command on receipt of signal
\fBtrue\fR	Unconditional success
\fBtypeset\fR\(dg	Set/list variables and their attributes
\fBumask\fR	Set the file-creation mask
\fBunalias\fR\(dg	Remove an alias
\fBunset\fR	Unset an environmental variable or shell function
\fBuntil\fR	Execute commands repeatedly
\fBwait\fR	Await completion of background process
\fBwhence\fR\(dg	List a command's type
\fBwhile\fR	Execute commands repeatedly
\fBxargs\fR	Execute a command with many arguments
.SH "String Processing"
Some of the most useful commands are those that process strings.
\*(CO has many commands that search for strings, manipulate
strings, sort strings, and otherwise perform useful manipulations
on strings.
.LB
\fBc\fR	Print multi-column output
\fBcgrep\fR	Pattern search for C programs
\fBcomm\fR	Print common lines
\fBcut\fR	Select portions of each line of a file
\fBdetab\fR	Replace tab characters with spaces
\fBdiff\fR	Summarize differences between two files
\fBdiff3\fR	Summarize differences among three files
\fBegrep\fR	Extended pattern search
\fBgrep\fR	Pattern search
\fBhead\fR	Print the beginning of a file
\fBjoin\fR	Join two data bases
\fBlook\fR	Find matching lines in a sorted file
\fBmore\fR	Display text one screenful at a time
\fBpaste\fR	Merge lines of files
\fBrev\fR	Print text backwards
\fBscat\fR	Print text files one screenful at a time
\fBsort\fR	Sort lines of text
\fBsplit\fR	Split a text file into smaller files
\fBstrings\fR	Print all character strings from a file
\fBtail\fR	Print the end of a file
\fBtr\fR	Translate characters
\fBtsort\fR	Topological sort
\fBuniq\fR	Remove/count repeated lines in a sorted file
\fBview\fR	Berkeley-style text viewer
\fBwc\fR	Count words, lines, and characters in text files
\fBzdiff\fR	Compare two compressed files
\fBzgrep\fR	Search compressed files for a regular expression
\fBzmore\fR	Display compressed text one page at a time
.SH "System Accounting"
The following commands help you to keep track of how your \*(CO
system is working.
.LB
\fBac\fR	Summarize login accounting information
\fBaccton\fR	Enable/disable process accounting
\fBdf\fR	Measure free space on disk
\fBdu\fR	Summarize disk usage
\fBhmon\fR	Monitor the COHERENT System
\fBps\fR	Print process status
\fBsa\fR	Print a summary of process accounting
\fBquot\fR	Summarize file-system usage
\fBtime\fR	Time the execution of a command
\fBtimes\fR	Print total user and system times
\fBuulog\fR	Examine \*(UU operations
.SH "System Maintenance"
These commands help you to maintain your \*(CO system.
.LB
\fBasymkdev\fR	Create nodes for asynchronous devices
\fBat\fR	Execute commands at given time
\fBbad\fR	Maintain list of bad blocks
\fBbadscan\fR	Examine a device for bad blocks
\fBbuild\fR	Install \*(CO onto a hard disk
\fBcheck\fR	Check file system
\fBclri\fR	Clear i-node
\fBcrontab\fR	Copy a command file into the crontab directory
\fBdate\fR	Print/set the date and time
\fBdcheck\fR	Check directory consistency
\fBfdformat\fR	Low-level format a floppy disk
\fBfsck\fR	Check and repair file systems interactively
\fBicheck\fR	i-node consistency check
\fBmkfs\fR	Make a new file system
\fBmknod\fR	Make a special file or named pipe
\fBmount\fR	Mount a file system
\fBncheck\fR	Print file names corresponding to i-node
\fBnewgrp\fR	Change to a new group
\fBnewusr\fR	Add new user to \*(CO system
\fBreboot\fR	Reboot the \*(CO system
\fBshutdown\fR	Shut down the \*(CO system
\fBsync\fR	Flush system buffers
\fBttytype\fR	Set default terminal types
\fBumount\fR	Unmount a file system
.\"\fBunmkfs\fR	Create a prototype file system
\fBuuchk\fR	Sanity-check the \*(UU system
.SH terminfo
\*(CO supports an implementation of
.BR terminfo ,
the terminal-description utility used under \*(UN System V.
(It also supports
.BR termcap ,
should you prefer to use that venerable, but still useful, system.)
The following commands help support
.BR terminfo :
.LB
\fBcaptoinfo\fR	Convert termcap data to \fBterminfo\fR form
\fBinfocmp\fR	De-compile a \fBterminfo\fR binary file
\fBtic\fR	Compile a \fBterminfo\fR description
.SH "Text Processors"
These commands help you to create orderly, attractive printed text.
For information on how to print the output of these commands, see
the commands listed under \fIDevice Handling\fR, above.
.LB
\fBcol\fR	Remove reverse and half line motions
\fBderoff\fR	Remove text formatting control information
\fBnroff\fR	Text-formatting language
\fBfmt\fR	Adjust the length of lines in a file of text
\fBfwtable\fR	Build a font-width table from PCL or PostScript font
\fBlcasep\fR	Convert text to lower case
\fBpr\fR	Paginate and print files
\fBprps\fR	Paginate and print files on PostScript printers
\fBPSfont\fR	Cook an Adobe font into PostScript format
\fBspell\fR	Find spelling errors
\fBtroff\fR	Extended text-formatting language
\fBtypo\fR	Detect possible typographical and spelling errors
.SH UUCP
The \*(UU commands lets you form a network with other \*(CO or \*(UN
systems.
Members of the network can grant each other permission to exchange mail
and execute commands on each others' systems remotely and automatically,
without having to be directed by a human being.
The overview article \fBUUCP\fR describes the \*(CO \*(UU facility in
some detail.
The following commands perform \*(UU-related work;
note that some of the commands listed here also are also listed
in other sections of this article.
.LB
\fBmwcbbs\fR	Download files from the Mark Williams bulletin board
\fBuuchk\fR	Sanity-check the \*(UU system
\fBuucico\fR	Connect to a remote system
\fBuuconv\fR	Convert UUCP configuration files into Taylor format
\fBuucp\fR	Copy a file to or from a remote system
\fBuudecode\fR	Decode a transmitted \*(UU file
\fBuuencode\fR	Encode a \*(UU file for tranmission
\fBuuinstall\fR	Configure \*(UU control files
\fBuumkdir\fR	Create \*(UU directories
\fBuulog\fR	Examine \*(UU operations
\fBuumvlog\fR	Archive \*(UU log files
\fBuuname\fR	Print names of recognized systems
\fBuupick\fR	Pick up a file uploaded from a remote system
\fBuurmlock\fR	Remove \*(UU lock files
\fBuusched\fR	Call all systems that have jobs waiting for them
\fBuuto\fR	Send a file to a remote system
\fBuutouch\fR	Force polling of a remote site
\fBuux\fR	Execute a command on a remote system
\fBuuxqt\fR	Execute file as requested by remote system
.SH Miscellaneous
The following commands do not fit neatly into any of the above
categories.
These include some of the more interesting and useful \*(CO
commands, and are worth your attention.
.LB
\fBapropos\fR	Find manual pages on a given topic
\fBATclock\fR	Read/set the AT realtime clock
\fBbc\fR	Interactive calculator with arbitrary precision
\fBcalendar\fR	Electronic reminder service
\fBchroot\fR	Change root directory
\fBclear\fR	Clear your terminal's screen
\fBcoh_intro\fR	Tour the \*(CO file system
\fBcrypt\fR	Encrypt/decrypt text
\fBdc\fR	Desk calculator
\fBdisable\fR	Disable a port
\fBelvprsv\fR	Preserve the modified version of a file after a crash
\fBelvrec\fR	Recover the modified version of a file after a crash
\fBenable\fR	Enable a port
\fBenv\fR	Execute a command in an environment
\fBfactor\fR	Factor a number
\fBfindmouse\fR	Examine a port to see if a mouse is plugged into it
\fBftbad\fR	Manipulate bad-block list on a floppy-tape cartridge
\fBhelp\fR	Print concise description of command
\fBideinfo\fR	Display information about an IDE disk drive
\fBinstall\fR	Install a software update onto \*(CO
\fBipcrm\fR	Remove an interprocess-communication memory item
\fBipcs\fR	Display a snapshot of interprocess communications
\fBkill\fR	Signal a process
\fBksh\fR	Invoke the Korn shell
\fBlogin\fR	Log in or change user name
\fBmakeboot\fR	Make a bootable floppy disk
\fBman\fR	Display Lexicon entries
\fBmklost+found\fR	Make an enlarged \fBlost+found\fR directory
\fBpasswd\fR	Set/change login password
\fBphone\fR	Print numbers and addresses from phone directory
\fBscript\fR	Capture a terminal session into a file
\fBsh\fR	Invoke the Bourne shell
\fBsu\fR	Substitute user id, become superuser
\fBsum\fR	Print checksum of a file
\fBtape\fR	Manipulate a tape device
\fBtty\fR	Print the user's terminal name
\fBttystat\fR	Get terminal status
\fBuname\fR	Print information about the system
\fBunits\fR	Convert units of measure
\fBvsh\fR	Invoke the \*(CO visual shell
\fBwho\fR	Print who is logged in
\fByes\fR	Print infinitely many responses
.PP
For more information on any
of these commands,
see its entry within the Lexicon.
.SH "See Also"
.Xr "Administering COHERENT," administe
.Xr "Programming COHERENT," programmi
.Xr "Using COHERENT" using_coh
