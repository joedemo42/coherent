.TH sighold() "" "" "System Call (libc)"
.PC "Place a signal on hold"
.B "#include <signal.h>
\fBint sighold (\fIsigtype\^\fB)\fR
\fBint \fIsigtype\^\fB;\fR
.PP
.B sighold()
is a member of the
.B sigset()
family of signal-handling system calls.
It is equivalent to the system call
.DM
	sigset(sigtype, SIG_HOLD);
.DE
.PP
This, in effect, places the signal
.I sigtype
``on hold'' until the system call
.B sigrelse()
is invoked for it.
Only one ``copy'' of
.I sigtype
can be held at a time.
.PP
Thus, you can use
.B sighold()
and
.B sigrelse()
to defer processing of the signal
.IR sigtype .
This permits you to protect a portion of your application from this signal
until it is ready to process it.
.PP
See the Lexicon entry for
.B signal()
for a list of recognized signals.
Note that signal
.B SIGKILL
cannot be held.
.PP
.B sighold()
returns zero if all went well.
If something went wrong, it returns \-1 and sets
.B errno
to an appropriate value.
.SH "See Also"
.Xr "libc," libc
.Xr "sigignore()," sigignore
.Xr "signal()," signal
.Xr "sigpause()," sigpause
.Xr "sigrelse()," sigrelse
.Xr "sigset()" sigset
.SH Notes
For more information on the
.B sigset()
family of signal-handling system calls, see the Lexicon entry for
.BR sigset() .
