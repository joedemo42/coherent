.TH execle() "" "" "General Function (libc)" "(libc)"
.PC "Execute a load module"
.B "#include <unistd.h>"
\fBexecle(\fIfile, arg0, arg1, ..., argn, \fBNULL, \fIenv\fR\^)
\fBchar *\fIfile, *arg0, *arg1, ..., \fB*\fIargn\^\fB, char *\fIenv\^\fB[];\fR
.PP
The function
.B execle()
calls the \*(CO system call
.B execve()
to execute a program.
It first initializes the new stack of the process to contain
a list of strings that are command arguments.
It specifies arguments individually, as a NULL-terminated list of
.I arg
parameters.
The argument
.I envp
points to an array of pointers to strings that define
.IR file 's
environment.
For more information on program execution and environments, see
.BR execution .
.SH "See Also"
.Xr "environ," environ
.Xr "execution," execution
.Xr "execve()," execve
.Xr "libc," libc
.Xr "unistd.h" unistd.h
.br
\*(PX Standard, \(sc3.1.2
.SH Diagnostics
.B execle()
does not return if successful.
It returns \-1 for errors, such as
.I file
being nonexistent,
not accessible with execute permission, having a bad format,
or being too large to fit into memory.
