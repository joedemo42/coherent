.TH "data formats" "" "" "Definition"
.PC
.PP
Mark Williams Company has written C compilers for
a number of different computers.
Each has a unique
architecture and defines data formats in its own way.
.PP
The following table gives
the sizes, in \fBchar\fRs, of the data types as they
are defined by various microprocessors.
.DS
.ta 0.8iC 1.4iC 2.0iC 2.6iC 3.2iC 3.8iC 4.4iC 5.0iC
.sp \n(pDu
		\fIi8086	i8086
Type	i80386	SMALL	LARGE	Z8001	Z8002	68000	PDP11	VAX\fR
\fBchar\fR	1	1	1	1	1	1	1	1
\fBdouble\fR	8	8	8	8	8	8	8	8
\fBfloat\fR	4	4	4	4	4	4	4	4
\fBint\fR	4	2	2	2	2	2	2	4
\fBlong\fR	4	4	4	4	4	4	4	4
pointer	4	2	4	4	2	4	2	4
\fBshort\fR	2	2	2	2	2	2	2	2
.DE
.PP
\*(CO places some alignment restrictions on data, which conform
to all restrictions set by the microprocessor.
Byte ordering is set by the microprocessor; see the Lexicon entry on
.B "byte ordering"
for more information.
.PP
.II word^definition
.II iBCS2
Please note that Intel processor documentation and the Intel Binary
Compatibility Standard (iBCS2) use the term
.I word
differently.
The following table defines how they differ:
.DS
.ta 2.0iC 3.0iC 4.0iC 5.0iC
\fIBytes	1	2	4	8\fR
\fIBits	8	16	32	64\fR
\fIIntel\fB	byte	word	dword	qword\fR
\fIiBCS2\fB	byte	halfword	word	doubleword\fR
.DE
.SH "See Also"
.Xr "byte ordering," byte_orde
.Xr "C language," c_languag
.Xr "data types," data_type
.Xr "double," double
.Xr "float," float
.Xr "float.h," float.h
.Xr "Programming COHERENT" programmi
.SH Notes
\*(CO 286 supports Intel SMALL model only.
\*(CO 386 supports the i80386 data format.
