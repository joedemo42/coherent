.TH srand48() "" "" "Random-Number Function (libc)"
.PC "Seed the 48-bit pseudo-random number routines"
\fBvoid srand48(\fIseedval\^\fB)\fR
\fBlong seedval;\fR
.PP
Computation of 48-bit pseudo-random numbers uses two 48-bit integers
and one 16-bit integer.
One of the 48-bit values holds the ``seed'' value from which the
48-bit pseudo-random value is computed.
This seed can be set explicitly, or is the previously computed
pseudo-random number.
The other 48-bit integer holds the multiplier from which the pseudo-random
number is computed; and the 16-bit integer gives holds the addend.
.PP
Function
.B srand48()
builds the 48-bit ``seed'' value from a long integer.
The 32 bits of the long integer comprise the high 32 bits of the seed;
the low 16 bits are filled with the value 0x33E.
.PP
Functions
.B lcong48()
and
.B seed48()
can also be used to seed the routines that generate 48-bit
pseudo-random numbers.
.B srand48()
returns nothing.
.SH "See Also"
.Xr "drand48()," drand48
.Xr "erand48()," erand48
.Xr "jrand48()," jrand48
.Xr "libc," libc
.Xr "lcong48()," lcong48
.Xr "lrand48()," lrand48
.Xr "mrand48()," mrand48
.Xr "nrand48()," nrand48
.Xr "seed48()" seed48
