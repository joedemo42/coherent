.TH execlpe() "" "" "General Function (libc)"
.PC "Execute a load module"
\fBexeclpe(\fIfile, arg0, arg1, ..., argn, \fBNULL, \fIenv\^\fB)\fR
\fBchar *\fIfile, *arg0, *arg1, ..., \fB*\fIargn\^\fB;\fR
\fBchar *\fIenv\^\fB[];\fR
.PP
The function
.B execlpe()
calls the \*(CO system call
.B execve()
to execute a program.
It initializes the new stack of the process to contain
a list of strings that are command arguments.
It specifies arguments individually, as a NULL-terminated list of
.I arg
parameters.
.PP
The argument
.I env
points to an array of pointers to strings that define
.IR file 's
environment.
.PP
Unlike the related function
.BR execl() ,
.B execlpe()
searches for
.I file
in all directories named in the environmental variable
.BR PATH \(em
that is, the current
.BR PATH ,
not the one contained within the environmented pointed to by
.IR env .
.PP
For more information on program execution, see
.BR execution .
.SH "See Also"
.Xr "environ," environ
.Xr "execution," execution
.Xr "execl()," execl
.Xr "execvep()," execvep
.Xr "libc" libc
.SH Diagnostics
.B execlpe()
does not return if successful.
It returns \-1 for errors, such as
.I file
not existing in the directories named in
.BR PATH ,
not accessible with execute permission, having a bad format,
or too large to fit in memory.
.PP
.B execlpe()
is not part of the SVID specification.
Therefore, it may not be present on non-\*(CO operating systems.
