.TH olvwm "" "" "X Utility"
.PC "OPEN LOOK virtual window manager"
\fBolvwm [ \fIoptions \fB]\fR
.PP
.B olvwm
is a virtual window manager for the X Window System
that implements parts of the \*(OL graphical user interface.
.B olvwm
differs from
.B olwm
in that
.B olvwm
manages a virtual desktop that is larger than the actual screen.
However,
.B olvwm
is equivalent in all other respects to,
and supports all the features of
.BR olwm .
This manual page discusses only the changes between
.B olvwm
and
.BR olwm ,
most of which deal specifically with the virtual desktop.
For details on how
.B olwm
operates, including its host of options, see its manual page.
.SH "Invoking olvwm"
To invoke
.BR olvwm ,
you must edit the
.B xinitrc
file that you use to bring up X:
either
.B $HOME/.xinitrc
or
.BR /usr/X11/lib/xinit/system.xinitrc ,
depending upon how your system is configured.
Add the command
.DM
	olvwm
.DE
.PP
to the end of that file.
Place a `#' in front of the entry for
.B twm
(and any other window manager named in that file), to comment them out
of the file.
.\" ========================================================================
.SH "Command-line Options"
There are no options unique to
.BR olvwm .
For a list of options that it recognizes, see the manual page for
.BR olwm .
.\" ========================================================================
.SH Terminology
This article uses the following terms:
.IP \fBScreen\fR
This refers to a specific monitor; essentially, there is
one screen for every monitor that your computer runs.
Each monitor has a view into a particular desktop.
In X terminology, this is the screen component of a particular display.
.IP \fBDesktop\fR
This refers to the entire area in which windows can reside on a given screen.
In non-virtual window managers, a desktop and a screen are the same size.
In a virtual window manager, though, a desktop is larger than the screen.
.IP \fBVDM\fR
This stands for
.IR "Virtual Desktop Manager" ,
which is the window that represents visually the entire desktop.
It provides a scaled-down version of the entire desktop.
.IP "\fBLogical Screen\fR"
If the desktop is running in default mode, it will display a grid, each
cell of which maps to the size of the monitor.
Each cell is called a
.IR "logical screen" .
.IP "\fBCurrent View\fR"
This is the part of the desktop that is currently displayed on the screen.
It will usually (but need not always) correspond to a logical screen.
.IP "\fBVirtual Window\fR"
This is a small rectangle displayed in the VDM.
Every window on the desktop has a corresponding virtual window in the VDM.
.\" ========================================================================
.SH "Virtual Desktop Manager"
When you start
.BR olvwm ,
the screen appears something like the following:
.PH 1 1 \*(XD/olvwm.eps
The actual appearance of the screen will depend, of course, on the
contents of your
.B xinitrc
file.
.PP
The objects on the screen \(em that is, the window title, the menus,
the resizing and iconifying objects, and so on \(em are almost exactly
the same as those that
.BR olwm
displays.
The only exception is that
.B olvwm
also displays a window for its virtual desktop manager (VDM).
.PP
This window, which appears at the top right of the figure shown
above, marks all windows that are active on the desktop.
Each window on the virtual desktop has an analogue in the
VDM window, whether or not it appears on the screen.
Where space permits, the VDM labels each window-symbol.
.PP
Although the above figure does not show it,
the VDM by default is divided into a grid.
Each cell of the grid represents an area equal to the size of your
system's virtual screen, as set by the instruction
.B Virtual
in the file
.BR /usr/X11/lib/Xconfig .
.PP
The lines on the VDM are just to help you orient yourself on the
virtual desktop.
A window can straddle a boundary,
the current view of the desktop can straddle these boundaries,
and you can move a window at will between these boundaries.
However, by default, most actions in the VDM keep the current view
along these boundary lines.
.\" ========================================================================
.SH "Events in the VDM"
The processing of events within the VDM depends upon whether the mouse points
to the background area of the VDM, or to a particular window-symbol
within the VDM.
.SH "Events on Window-Symbols"
.B olvwm
treats events that occur in a window-symbol just as if they
occurred on the corresponding application's frame.
Thus, pressing the
.B MENU
(right-mouse) button over a virtual window pops up the frame menu and
lets windows be opened, closed, resized, etc.
Likewise, clicking the
.B SELECT
(left-mouse) button on a window-symbol that real
(and virtual) window; pressing the
.B ADJUST
(center-mouse) button adds (or subtracts) that window from the selection list.
Pressing the
.B FRONT
key raises or lowers the real window (and its window-symbol analogue);
and pressing the
.B OPEN
key on a window-symbol
opens or closes the corresponding real window.
.PP
.BR SELECT ing
and dragging a window-symbol moves both the window-symbol within
the VDM window, and its analogous real window within the virtual desktop.
Note that if you drag a window-symbol outside of the VDM window,
.B olvwm
drags its corresponding real window onto the screen.
Conversely, when dragging a window on the screen,
if the mouse moves into the VDM window,
.B olvwm
moves that window to the location marked within the VDM.
If part of the VDM is obscured,
you cannot move a window into that part of the virtual display.
.PP
Note that events are delivered only to the real application's frame.
Thus, when you are manipulating a virtual window, typing characters or the
.BR COPY ,
.BR CUT ,
or
.B PASTE
keys has no effect.
However,
you can drop something onto a virtual window as if it were dropped
onto the corresponding application.
For example, this lets you drag a file from the mailtool that is
on the screen to a file manager that is on another part of the desktop.
.SH "Events on the VDM Background"
Events on the VDM background all change the current view \(em that is,
the part of the virtual desktop that is displayed on your screen.
Shifting the view of the virtual desktop
brings onto the screen all windows within the new view of the virtual desktop,
and move windows that were on the screen to an area
outside of the viewing area.
.\"Keyboard events are described given the default Sun-4 keyboard mappings,
.\"but you can use xmodmap to set up your particular keyboard.
.PP
The following details the effects of some categories of events:
.IP "\fBKeyboard Events\fR
You can use
the arrow keys (and other keys) to shift the logical screen in
the direction specified.
See the section on additional key bindings, below.
Keyboard events are also active if they occur on the root window
in addition to the VDM background.
.IP \fBSELECT\fR
Pressing the
.B SELECT
(left-mouse) button
on the VDM background lets you drag the current view within the VDM.
If the resource
.B VirtualGrid
is set to
.B Visible
or
.BR Invisible ,
.B olvwm
constrains movement of the visible region to logical screen boundaries,
unless you press the
.B <ctrl>
key before you press the left-mouse button and hold the key down while you
drag the mouse.
If
.B VirtualGrid
is set to
.BR None ,
.B olvwm
constrains movement of the visible region, again unless you press the
.B <ctrl>
before and during the mouse action.
.IP "\fBDouble Click\fR
If double-click the
.B SELECT
(left-mouse) button on an area in the VDM background,
.B olvwm
moves the current view to the logical screen that
corresponds to the point where you double-clicked the mouse button.
.IP \fBMenu\fR
Clicking the
.B MENU
(right-mouse) button brings up a pinnable menu that allows movement
in the direction indicated, based on full screen sizes.
.\" ========================================================================
.SH "Resizing the Virtual Desktop"
You can use the resize corners on the VDM to resize the virtual desktop.
.B olvwm
always adds or removes space from the bottom and right of the desktop,
regardless of which rese corner you use.
.PP
If you shrink the virtual desktop,
.B olvwm
does
.I not
move windows that are not encompassed within the newly resized virtual desktop.
These windows are not lost, however, and you can regain them by
enlarging the desktop again to encompass them.
.\" ========================================================================
.SH "Sticky Windows"
Windows that are ``sticky'' never change position on the screen when you
change your view of the desktop.
For example, the window for the VDM is sticky; therefore, it
never moves from its current position on the screen,
even if you change your view of the desktop.
To set a particular window as sticky, simply select the command
.B Stick
from its frame menu.
You can also unstick the window via its menu.
.PP
Please note that only
base frames \(em those that can be iconified, as opposed to those that have
a pushpin \(em can become sticky.
Other frames inherit the stickiness of their base frames.
Thus, for most applications, either all windows are sticky or none are.
The exception to this is any application that creates two or more base frames:
all base frames are then created as unsticky.
For more details on this topic, see the discussion of the resource
.BR VirtualSticky ,
below.
.\" ========================================================================
.SH "Changes to the Window Menu"
The window menu of each window has all the tools defined in
.BR olwm .
In addition, the menu of base windows contains the command
.BR Stick/Unstick ,
which affects the stickiness of the window.
Windows that are sticky always appear in the same place
on the screen regardless of which part of the virtual desktop you are viewing.
Windows that are not sticky
(by default, all windows except the VDM)
move when you change your view of the virtual desktop.
.\" ========================================================================
.SH "Changes To Root Menu"
The command field of menu item in
.BR olvwm 's
root menu can contain any of the keywords that
.B olwm
recognizes.
In addition, it can contain any of the following keywords:
.IP \fBCOLUMNS\fR
This gives the number of columns you want the menu to have.
The menu's name must appear before this keyword,
but the keyword itself must appear before the end of the menu.
.IP \fBSTICK_UNSTICK_SELN\fR
This keyword specifies that the stickiness state
of the selected windows should be toggled.
.IP \fBWINMENU\fR
This brings up a pull-right menu that names every window on the
virtual desktop.
If a window is iconified,
.B olvwm
prefixes its name with a graphic symbol.
If you select one of these windows,
.B olvwm
shifts the view into the desktop so that that window becomes visible;
If the selected window is iconified,
.B olvwm
opens it and raises it to the foreground of the window.
You can alter behavior can be altered;
for details, see the article on
.BR olvwmrc .
.IP
To set the number of columns in this menu,
use a number after the keyword
.BR WINMENU .
.IP \fBDIRMENU\fR
This keywords evokes a pull-right menu that names every file given in the
named directory.
This lets you use a local program's directory for a tool repository:
whenever you add a tool to that directory, users can see the new choices.
.IP "\fBX11 Bitmaps\fR"
You can specify a bitmap by enclosing
between angle brackets `<>' the name of the file that holds it.
The file's name must be in X11-bitmap form.
You can mix bitmap and string entries within a menu,
although the menu probably will appear better if you do not.
.PP
The following gives the example
.B olwm
root-menu specification, but rewritten to take advantage of some of the
extensions described above.
The
.B programs
menu has two columns.
The
.B Find
sub-menu, which has three columns, gives a way to find particular windows.
Directory menu
.B /usr/local
gives the tools that are available locally.
Finally, it displays the option
.B cmdtool
as an icon:
.DM
	"My Custom Menu" TITLE
.sp \n(pDu
	Programs                 MENU
	Programs		COLUMNS 2
        	<usr/openwin/include/X11/bitmaps/terminal>  DEFAULT cmdtool
	        "Text Editor"           textedit
	        Mail                    mailtool
	        "File Manager"          filemgr
.DE
.DM
	        Other                   MENU
	                "Other Tools"           TITLE
	                "Shell Tool"            shelltool
	                "Icon Editor"           iconedit
	                Clock                   clock
	                "Perf Meter"            DEFAULT perfmeter
	        Other                   END
.DE
.DM
		"Local Tools"		DIRMENU	/usr/local
	Programs                END PIN
.DE
.DM
	"Repaint Screen"        REFRESH
.sp \n(pDu
	"Properties ..."        PROPERTIES
.DE
.DM
	"Find"		WINMENU	3
.sp \n(pDu
	Exit            EXIT
.DE
.\" ========================================================================
.SH "Resources to Control the Virtual Desktop"
.B olvwm
uses all of the resources used by
.BR olwm ,
as described its in the manual entry.
In addition,
.B olvwm
reads resources of instance
.BR olvwm .
You can thus name the following resources as
\fBolvwm.\fIresource\fR, \fBolwm.\fIresource\fR, or
\fBOpenWindows.\fIresource\fR, depending on your preference.
.PP
Resources marked with an `*' can be specified on a screen-by-screen basis
(e.g.,
.B olvwm.screen0.resource
and
.BR olvwm.screen1.resource ),
following the pattern in
.BR olwm .
.PP
The following describes all of the additional resources that
.B olvwm
reads.
Each entry begins with the resource's name, its type, and its default
setting (if any):
.IP "\fBVirtualDesktop \fR(string) \fI3x2\fR*"
The size of the virtual desktop.
You can specify this in terms of screen sizes;
for example, the default setting of 3\(mu2 means three screens across
and two high (total, six).
You may also specify this in terms of absolute pixel sizes, e.g.,
3800\(mu1800, as long as the size you specify
exceeds the size of your framebuffer.
.IP "\fBPannerScale \fR(int) \fI15\fR*"
The scale in which
.B olvwm
draws the virtual desktop manager.
.IP "\fBVirtualGeometry \fR(string) \fI+0+0\fR*"
The geometry string of the desktop manager in standard X11
format (that is, \fIwxh\^\fB+\fIx\^\fB+\fIy\^\fR).
If you do not set the width and height,
.B olvwm
ignores them, but you can use the
.I x
and
.I y
fields to specify the initial location of the desktop manager.
.IP "\fBVirtualIconGeometry \fR(string) \fI+0+0\fR*"
The geometry string of the desktop manager icon, in standard X11
format (\fIwxh\^\fB+\fIx\^\fB+\fIy\^\fR).
.B olvwm
ignores the width and height, but you can use the
.I x
and
.I y
fields to specify the initial location of the desktop manager icon.
.IP "\fBVirtualIconic \fR(Boolean) \fIFalse\fR"
If
.BR true ,
when
.B olvwm
first comes up, it draws the VDM as an icon.
.IP "\fBAllowMoveIntoDesktop \fR(Boolean) \fITrue\fR"
If
.BR true ,
you can move windows from the screen to the VDM, and vice versa.
If
.BR false ,
you cannot.
.IP "\fBArrowInRoot \fR(Boolean) \fITrue\fR"
If
.BR true ,
key events in the root window affect the VDM and
thus move the view into the desktop (if the appropriate key is pressed).
If
.BR false ,
key events affect the VDM only when it has the input focus.
.IP "\fBVirtualFont \fR(string) \fI5x8\fR*"
The font that
.B olvwm
uses for titles on the VDM's window-symbols.
.IP "\fBVirtualFontColor \fR(color specification) \fIBlack\fR*"
The color of the title within the virtual windows of the VDM.
.IP "\fBVirtualBackgroundColor \fR(color specification)*"
The color of the background of the virtual desktop manager.
Its default value is the background color of your desktop.
.IP "\fBVirtualForegroundColor \fR(color specification)*"
The color of the VDM's window-symbols.
The default value is the frame color of your desktop.
.IP "\fBVirtualBackgroundMap \fR(Pixmap filename)*"
The file that contains a pixmap to use as the VDM's background.
.B olvwm
draws this pixmap with the
.B VirtualBackgroundColor
as its background color and the
.BR VirtualPixmapColor
as its foreground color.
By default, this resource is not used.
.IP "\fBVirtualPixmapColor \fR(color specification) \fIwhite\fR*"
The color in which
.B olvwm
draws the foreground of any pixmap used as the background of the VDM.
.IP "\fBVirtualSticky \fR(list of strings) \fINull\fR"
The windows that should be sticky by default.
Like the
.B olwm
resource
.BR MinimalDecor ,
this names windows that should be sticky when they are created.
As described above,
.B olvwm
matches the strings in that this resource names
against the first word of the window's
.B WM_NAME
variable (that is, the string in its title bar) or by its
.B WM_CLASS
variable.
.IP "\fBRelativePosition \fR(Boolean) \fITrue\fR"
If
.BR true ,
.B olvwm
assumes that user-specified window co-ordinates are relative
to the current view into the desktop.
Otherwise, it assumes that they are absolute with respect to the desktop.
Setting this resource to
.B true
forbids you to bring up windows outside your current view,
unless you specify very large or negative numbers;
setting it to
.B false
breaks some programs that save window states in an odd manner.
When you start up an application, you can defeat this variable by
specifying the screen on which it is to start.
For more details, see the Lexicon entry for
.BR olvwmrc .
.IP "\fBVirtualGrid \fR(Visible, Invisible, or None) \fIVisible\fR*"
This resource controls two aspects of the VDM.
If you set it to
.B visible
or
.BR invisible ,
.B olvwm
turns on the VDM's grid.
If it is set to
.BR None ,
.B olvwm
turns the grid off.
If it is set to
.BR visible ,
.B olvwm
also draws the grid on the VDM.
.IP
If the grid is on, you can resize the VDM only in
increments equivalent to the size of a logical screen.
If it is off, you can resized the grid to an arbitrary size.
.IP
If the grid is on,
.B olvwm
constrains the movement of the visible region of the screen
(as performed by pressing the
.B SELECT
button within the VDM and dragging the mouse)
to a logical screen (unless you also hold down the
.B <ctrl>
key).
If the grid is off,
.B olvwm
does not constrain movement of the visible region
(again, unless you hold down the
.BR <ctrl>
key as you drag the mouse).
.IP "\fBVirtualGridColor \fR(color specification)\fR"
.B olvwm
draws draws the VDM's grid in the color this resource specifies.
Its default value is the same as that of
.BR VirtualFontColor .
.IP "\fBVirtualRaiseVDM \fR(Boolean) \fIFalse\fR"
If
.BR true ,
the VDM is never obscured by other windows.
.IP "\fBVirtualMoveGroups \fR(Boolean) \fITrue\fR"
If
.BR true ,
then whenever you move a window to a different logical screen,
.B olvwm
also moves all followers of that window a similar amount.
This affects the window's icon and its pop-up windows;
thus, icons and pop-up windows always appear on the same logical screen
as their corresponding base frame.
If this is not
.BR true ,
.B olvwm
moves only the selected windows;
related windows could appear on different logical screens.
The trigger for changing between logical screens is the window's
upper-left corner; for details, see the discussion of the resource
.BR VirtualGroupThreshold ,
below.
.IP "\fBVirtualGroupThreshold \fR(Integer) \fI0\fR"
The amount by which the upper-left
corner of a window must be moved off the screen before
.B olvwm
considers the window to have switched logical screens.
Setting this to a positive value lets you move left edge of a window
off the monitor without shifting that window's icon or pop-up windows.
.IP "\fBUseImages \fR(UseNone, UseVDM, or UseAll) \fIUseVDM\fR"
If set to
.BR UseNone ,
window-frame menus and the VDM-motion menu are text-based.
If set to
.BR UseVDM ,
the window-frame menus are text-based but the VDM-motion menu
is a graphic menu.
If set to
.BR UseAll ,
the window-frame menus are text- and image-based,
and the VDM-motion menu is image-based.
.IP "\fBPointerWorkspace \fR(Boolean) \fIFalse\fR"
If
.BR true ,
.B olvwm
does not change the mouse cursor when it is over a window frame.
This is useful with the command
.B "xsetroot \-cursor"
if you want the specified cursor to be active over frames.
.IP "\fBSaveWorkspaceCmd \fR(String)\fR"
If set to a string,
.B olvwm
executes that string when you select the command
.B SAVE_WORKSPACE
from the main menu.
Otherwise, it runs its default command.
The default value is:
.DM
	owplaces -silent -multi -script -tw -output $HOME/.openwin-init
.DE
.\" ========================================================================
.SH "Additional Miscellaneous Resources"
These resources are not related specifically to the VDM,
but they do define new features within
.BR olvwm .
.IP "\fBInputFocusColor \fR(color specification)\fR*"
Draw the frame of the window that has the input focus
in the color specified, instead of in the normal frame color.
The appearance of the title bar (with lines or
indentation, depending on your mode of input focus) remains unchanged.
.IP "\fBRaiseOnMove \fR(Boolean) \fIFalse\fR"
If
.BR true ,
then whenever you move a window,
.B olvwm
raises it to the foreground \(em i.e., it displays the window above
every other window that overlaps it.
.IP "\fBAutoShowRootMenu \fR(Boolean) \fIFalse\fR"
If
.BR true ,
at start-up the root menu comes up pinned.
.IP "\fBAutoRootMenuX (int) \fI0\fR"
If the resource
.B AutoShowRootMenu
is
.BR true ,
this resource gives the X coordinate where the menu comes up.
.IP "\fBAutoRootMenuY \fR(int) \fI0\fR"
If the resource
.B AutoShowRootMenu
is
.BR true ,
this resource gives the Y coordinate where the menu comes up.
.IP "\fBFullSizeZoomX \fR(Boolean) \fIFalse\fR"
If
.BR True ,
then selecting
.B "Full Size"
from the window menu zooms the window horizontally as well as vertically.
.IP "\fBNoDecor \fR(list of strings)\fR"
This resource names all windows to be left undecorated.
There is a slight difference between this attribute and setting the
.B override_redirect
flag on a window:
the latter tells
.B olvwm
to ignore a window; whereas this resource does not adorn a
window or give it a menu but still lets you manipulate it via the
.B WINMENU
and Hot-Key actions.
.IP "\fBResizeMoveGeometry \fR(X geometry string or the word center)\fR"
The location of the geometry box.
It is an X geometry string (i.e., \fIwxh\^\fB+\fIx\^\fB+\fIy\^\fB),
although
.B olvwm
ignores the width and height fields if they are not specified.
If you want the box to be centered regardless of your monitor resolution,
use the string
.BR +0+0 .
This resource only has an effect if either of the resources
.B ShowMoveGeometry
or
.B ShowResizeGeometry
is set to
.BR true .
.\" ========================================================================
.SH "Additional Key Bindings"
Like
.BR olwm ,
.B olvwm
uses key bindings to invoke specific actions.
.B olvwm
recognizes all actions that
.B olwm
recognizes, as well as an additional set of actions that control the view
of the desktop.
.PP
In the following list, the key given in parentheses is the default binding
for the given action.
You can change any of the keybindings given below.
For details on how to do so, see the entry for
.BR olwm .
.PP
If an item is marked with a `\*(dg', it also exists in
.BR olwm ;
it is included here to describe what action it has when it occurs
on the root window or within the VDM.
All other bindings are specific to
.BR olvwm .
If an item is marked with an `*', it involves a keyboard grab.
Items that involve keyboard grabs are always active;
otherwise, an item occurs only if the root window or the VDM
has the input focus.
.IP "\fBUp \fI(up-arrow)\fR\(dg"
Move the view up one screen.
.IP "\fBJumpUp \fI(up-arrow+Ctrl)\fR\(dg"
Move the view up ten screens.
.IP "\fBHalfUp \fI(up-arrow+Shift)\fR"
Move the view up one-half screen.
.IP "\fBVirtualUp \fI(up-arrow+Meta)\fR*"
Move the view up one screen.
.IP "\fBVirtualJumpUp \fI(up-arrow+Ctrl+Meta)\fR*"
Move the view up ten screens.
.IP "\fBVirtualHalfUp \fI(up-arrow+Shift+Meta)\fR*"
Move the view up one-half screen.
.IP "\fBDown \fI(down-arrow)\fR\(dg"
Move the view down one screen.
.IP "\fBJumpDown \fI(down-arrow+Ctrl)\fR\(dg"
Move the view down ten screens.
.IP "\fBHalfDown \fI(down-arrow+Shift)\fR"
Move the view down one-half screen.
.IP "\fBVirtualDown \fI(down-arrow+Meta)\fR*"
Move the view down one screen.
.IP "\fBVirtualJumpDown \fI(down-arrow+Ctrl+Meta)\fR*"
Move the view down ten screens.
.IP "\fBVirtualHalfDown \fI(down-arrow+Shift+Meta)\fR*"
Move the view down one-half screen.
.IP "\fBLeft \fI(left-arrow)\fR+"
Move the view left one screen.
.IP "\fBJumpLeft \fI(left-arrow+Ctrl)\fR+"
Move the view left ten screens.
.IP "\fBHalfLeft \fI(left-arrow+Shift)\fR"
Move the view left one-half screen.
.IP "\fBVirtualLeft \fI(left-arrow+Meta)\fR*"
Move the view left one screen.
.IP "\fBVirtualJumpLeft \fI(left-arrow+Ctrl+Meta)\fR*"
Move the view left ten screens.
.IP "\fBVirtualHalfLeft \fI(left-arrow+Shift+Meta)\fR*"
Move the view left one-half screen.
.IP "\fBRight \fI(right-arrow)\fR+"
Move the view right one screen.
.IP "\fBJumpRight \fI(right-arrow+ctrl)\fR+"
Move the view right ten screens.
.IP "\fBHalfRight \fI(right-arrow+Shift)\fR"
Move the view right one-half screen.
.IP "\fBVirtualRight \fI(right-arrow+Meta)\fR*"
Move the view right one screen.
.IP "\fBVirtualJumpRight \fI(right-arrow+ctrl+Meta)\fR*"
Move the view right ten screens.
.IP "\fBVirtualHalfRight \fI(right-arrow+Shift+Meta)\fR*"
Move the view right one-half screen.
.IP "\fBGoHome \fI(R11)\fR"
Move the view to the upper left corner.
.IP "\fBVirtualHome \fI(R11+Meta)\fR*"
Move the view to the upper left corner.
.IP "\fBRowStart \fI(Home, R7)\fR+"
Move the view NorthWest one screen.
.IP "\fBJumpUpLeft \fI(R7+Ctrl)\fR+"
Move the view NorthWest ten screens.
.IP "\fBHalfUpLeft \fI(R7+Shift)\fR"
Move the view NorthWest one-half screen.
.IP "\fBVirtualUpLeft \fI(R7+Meta)\fR*"
Move the view NorthWest one screen.
.IP "\fBVirtualJumpUpLeft \fI(R7+Ctrl+Meta)\fR*"
Move the view NorthWest ten screens.
.IP "\fBVirtualHalfUpLeft \fI(R7+Shift+Meta)\fR*"
Move the view NorthWest one-half screen.
.IP "\fBRowEnd \fI(End, R13)\fR+"
Move the view SouthWest one screen.
.IP "\fBJumpDownLeft \fI(R13+Ctrl)\fR+"
Move the view SouthWest ten screens.
.IP "\fBHalfDownLeft \fI(R13+Shift)\fR"
Move the view SouthWest one-half screen.
.IP "\fBVirtualDownLeft \fI(R13+Meta)\fR*"
Move the view SouthWest one screen.
.IP "\fBVirtualJumpDownLeft \fI(R13+Ctrl+Meta)\fR*"
Move the view SouthWest ten screens.
.IP "\fBVirtualHalfDownLeft \fI(R13+Shift+Meta)\fR*"
Move the view SouthWest one-half screen.
.IP "\fBUpRight \fI(R9)\fR"
Move the view NorthEast one screen.
.IP "\fBJumpUpRight \fI(R9+Ctrl)\fR"
Move the view NorthEast ten screens.
.IP "\fBHalfUpRight \fI(R9+Shift)\fR"
Move the view NorthEast one-half screen.
.IP "\fBVirtualUpRight \fI(R9+Meta)\fR*"
Move the view NorthEast one screen.
.IP "\fBVirtualJumpUpRight \fI(R9+Ctrl+Meta)\fR*"
Move the view NorthEast ten screens.
.IP "\fBVirtualHalfUpRight \fI(R9+Shift+Meta)\fR*"
Move the view NorthEast one-half screen.
.IP "\fBDownRight \fI(R15, PgDn)\fR"
Move the view SouthEast one screen.
.IP "\fBJumpDownRight \fI(R15+Ctrl)\fR"
Move the view SouthEast ten screens.
.IP "\fBHalfDownRight \fI(R15+Shift)\fR"
Move the view SouthEast one-half screen.
.IP "\fBVirtualDownRight \fI(R15+Meta)\fR*"
Move the view SouthEast one screen.
.IP "\fBVirtualJumpDownRight \fI(R15+Ctrl+Meta)\fR*"
Move the view SouthEast ten screens.
.IP "\fBVirtualHalfDownRight \fI(R15+Shift+Meta)\fR*"
Move the view SouthEast one-half screen.
.IP "\fBScreen1 \fI(F1)\fR"
Move to the first logical screen in the desktop.
.IP "\fBVirtualScreen1 \fI(F1+Meta)\fR*"
Move to the first logical screen in the desktop.
.IP "\fBScreen2 \fI(F2)\fR"
Move to the second logical screen in the desktop.
.IP "\fBVirtualScreen2 \fI(F2+Meta)\fR*"
Move to the second logical screen in the desktop.
.IP "\fBScreen3 \fI(F3)\fR"
Move to the third logical screen in the desktop.
.IP "\fBVirtualScreen3 \fI(F3+Meta)\fR*"
Move to the third logical screen in the desktop.
.IP "\fBScreen4 \fI(F4)\fR"
Move to the fourth logical screen in the desktop.
.IP "\fBVirtualScreen4 \fI(F4+Meta)\fR*"
Move to the fourth logical screen in the desktop.
.IP "\fBScreen5 \fI(F5)\fR"
Move to the fifth logical screen in the desktop.
.IP "\fBVirtualScreen5 \fI(F5+Meta)\fR*"
Move to the fifth logical screen in the desktop.
.IP "\fBScreen6 \fI(F6)\fR"
Move to the sixth logical screen in the desktop.
.IP "\fBVirtualScreen6 \fI(F6+Meta)\fR*"
Move to the sixth logical screen in the desktop.
.IP "\fBScreen7 \fI(F7)\fR"
Move to the seventh logical screen in the desktop.
.IP "\fBVirtualScreen7 \fI(F7+Meta)\fR*"
Move to the seventh logical screen in the desktop.
.IP "\fBScreen8 \fI(F8)\fR"
Move to the eighth logical screen in the desktop.
.IP "\fBVirtualScreen8 \fI(F8+Meta)\fR*"
Move to the eighth logical screen in the desktop.
.IP "\fBScreen9 \fI(F9)\fR"
Move to the ninth logical screen in the desktop.
.IP "\fBVirtualScreen9 \fI(F9+Meta)\fR*"
Move to the ninth logical screen in the desktop.
.IP "\fBScreen10 \fI(F10)\fR"
Move to the tenth logical screen in the desktop.
.IP "\fBVirtualScreen10 \fI(F10+Meta)\fR*"
Move to the tenth logical screen in the desktop.
.\" ========================================================================
.SH "Advanced Usage"
When you invoke
.BR olvwm ,
it reads the resource file
.B $HOME/.olvwmrc
for special customizations.
This file is described in its own manual entry; but to summarize briefly,
it lets you create the following customizations:
.IP "Hot Keys"
You can specify that when you press a certain key (or, more likely, a key plus
one or more modifiers),
.B olvwm
performs a given action.
You can use hot keys to a particular application;
open, raise, or close applications;
execute an application;
or quit an application.
.IP "Screen Bindings"
You can specify that certain applications always start on a particular
logical screen.
.IP "Menu Options"
You can alter the behavior of
.B WINMENU
selections on a particular window.
.SH "See Also"
.B
fwm,
fvwm,
olwm,
olvwmrc,
twm,
X applications
.R
.\" ========================================================================
.SH Notes
For information about copyrights on \*(OL,
.BR olwm ,
and related products derived from \*(OL, see the file
.B LEGAL_NOTICE
that is included with the source code to
.B olvwm
and
.BR olwm .
.PP
Most of the code in this application comes from release 3.0 of
.BR olwm ,
authored at Sun Microsystems and distributed in the
.B contrib
section of MIT's X11R5.
.II "Oaks, Scott"
The virtual desktop section was written by Scott Oaks,
who is responsible for its maintenance.
Please direct any comments to scott.oaks@sun.com.
This code is not supported by Sun Microsystems in any way.
.II "Marks, Stuart"
Notwithstanding this caveat, the staff at Sun Microsystems, and especially
Stuart Marks, deserve credit as original authors of
.B olwm
for most of the work contained in this application.
.II "Berlin, Rich"
.II "Chase, David"
.II "Plotkin, David"
.II "West, Ken"
.II "Kegley, Russel"
.II "Musciano, Chuck"
.II "Dupuy, Alexander"
.II "Boyd, David"
.II "Gibson, Duane"
.II "Fifer, Eric"
.II "Stolcke, Andreas"
.II "Eggert, Paul"
Additional fixes and enhancements have been provided by Rich Berlin,
David Chase and David Plotkin at Sun, Ken West at Protocol Systems,
Russel Kegley at General Dynamics, Chuck Musciano at Harris Systems,
Alexander Dupuy at Columbia, David Boyd at Sterling Software, Duane
Gibson at Unify, Eric Fifer at Salomon, Andreas Stolcke, and Paul Eggert.
In addition, several people from the net are not mentioned here but
contributed duplicate fixes.
.PP
.II "Munk, Udo"
.B olvwm
was ported to \*(CO by Udo Munk.
