.TH qix "" "" "X Application"
.PC "Bounce colored lines around a window"
.fi
\fBqix
[\-additive]
[\-background \fIcolor\fB]
[\-color-shift \fIdegrees\fB]
[\-count \fIinteger\fB]
[\-delay \fIseconds\fB]
[\-display \fIhost:display.screen\fB]
[\-foreground \fIcolor\fB]
[\-hollow]
[\-linear]
[\-mono]
[\-no\-xor]
[\-non\-transparent]
[\-random]
[\-root]
[\-segments \fIinteger\fB]
[\-size \fIpixels\fB]
[\-solid]
[\-spread \fIpixels\fB]
[\-subtractive]
[\-transparent]
[\-window]
[\-xor]\fR
.PP
.B qix
bounces a series of line segments around its window.
It recogizes the following options:
.IP \fB\-additive\fR
If option
.B \-transparent
is specified, then this option mixes the colors
using an additive color model, as if the segments were projected light.
This is the opposite of option
.BR \-subtractive ,
and is the default.
.IP "\fB\-color\-shift \fIdegrees\fR"
If you run
.B qix
on a color server, it cycles the color of each segment through the spectrum.
This option tells
.B qix
to shift the color by
.I degrees
around the HSV wheel.
The default is three.
.IP "\fB\-count \fIinteger\fR"
Draw
.I integer
line segments.
The default is one.
.IP "\fB\-delay \fImicroseconds\fR"
Wait
.I microseconds
between steps of the animation.
The default is 25,000, or about 0.025 seconds.
.IP \fB\-hollow\fR
Move one-pixel-wide line segments around the screen.
It is the opposite
.BR \-solid ,
and is the default.
.IP \fB\-linear\fR
The opposite of
.BR \-random :
move each segment in a straight line until it reaches a wall,
then bounce it off.
.IP \fB\-mono\fR
Map the application to black and white, even if run on a color server.
.IP \fB\-non\-transparent\fR
Turn off option
.BR \-transparent .
.IP \fB\-random\fR
Move each segment around the screen semi-randomly.
This is the default.
.IP \fB\-root\fR
Draw the application on the root window.
.IP "\fB\-segments \fIinteger\fR"
Draw
.I integer
line segments.
The default is 50.
.IP "\fB\-size \fIinteger\fR"
Set the end points of a segment no more than
.I integer
pixels apart.
The default is zero, which means no limit.
.IP \fB\-solid\fR
Fill the area between two line segments with the appropriate color.
If not set,
.B qix
simply moves one-pixel-wide line segments around the screen.
This option looks good in color.
.IP "\fB\-spread \fIinteger\fR"
Set a segment's end points no less than
.I integer
pixels apart.
The default is eight.
.IP \fB\-subtractive\fR
If option
.B \-transparent
is specified, this option tells
.B qix
to mix colors using using a subtractive color model, as if the
segments were translucent filters.
.IP \fB\-transparent\fR
If this is specified, and
.B \-count
is greater than one,
.B qix
draws each segment in one color;
when segments overlap, it mixes their colors.
This only works on
.B PseudoColor
displays.
It looks best when invoked with option
.BR \-solid .
Also see options
.B additive
and
.BR subtractive .
.IP \fB\-window\fR
Draw the application on a newly-created window.
This is the default.
.IP \fB\-xor\fR
Tell
.B qix
to use XOR
to draw and erase its line segments, instead of
drawing them in a color erasing them into the background color.
This implies
.BR \-mono ,
in that only two colors can be used.
.SH "Environmental Variables"
.B qix
reads the following environmental variables:
.IP \fBDISPLAY\fR
The default host and display number.
.IP \fBXENVIRONMENT\fR
The name of a resource file that overrides the global resources
stored in the property
.BR RESOURCE_MANAGER .
.SH "See Also"
.B
X,
xscreensaver
.R
.SH Notes
.II "Zawinski, Jamie"
.B qix
was written by Jamie Zawinski (jwz@lucid.com).
.PP
Copyright \(co 1992 by Jamie Zawinski.
Permission to use, copy, modify,
distribute, and sell this software and its documentation for any purpose is
hereby granted without fee, provided that the above copyright notice appear
in all copies and that both that copyright notice and this permission notice
appear in supporting documentation.
No representations are made about the
suitability of this software for any purpose.
It is provided ``as is'' without express or implied warranty.
