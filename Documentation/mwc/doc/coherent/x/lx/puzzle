.TH puzzle "" "" "X Client"
.PC "The X scrambled-number game"
\fBpuzzle [\-\fIoption ...\^\fB]\fR
.PP
.HS
.SH Options:
.IC "\fB\-bd \fIcolor\fR"
Set the color of the border to \fIcolor\fR
.IC "\fB\-bg \fIcolor\fR"
Set the color of the background to \fIcolor\fR
.IC "\fB\-bw \fIpixels\fR"
Set the width of the border to \fIpixels\fR
.IC "\fB\-display \fIhost\^\fB[:\fIserver\^\fB][.\fIscreen\^\fB]\fR"
Display the client's window on screen number \fIscreen\fR
of \fIserver\fR on host system \fIhost\fR
.IC "\fB\-fg \fIcolor\fR"
Set the color of the foreground to \fIcolor\fR
.IC "\fB\-fn \fIfont\fR"
Use \fIfont\fR in the display
.IC "\fB\-geometry \fIgeometry\fR"
Set the geometry of the program's window to \fIgeometry\fR
.IC "\fB\-picture \fIfile\R"
Build the puzzle from the image in
.IR file ,
instead of numbered tiles
.IC \fB\-rv\fR
Simulate reverse video by exchanging the foreground and background colors
.IC "\fB\-xrm \fIresourcestring\fR"
Use \fIresourcestring\fR to define a resource
.HE
The X client
.B puzzle
implements one of those maddening scrambled-number puzzles.
The puzzle is divided into 16 squares:
one is blank, and the other 15 are numbered, one through 15.
The point of the game is to unscramble the numbered squares, so they are
in numeric order, from top to bottom and left to right, as follows:
.PH 1 1 \*(XD/puzzle.eps
.PP
Clicking the small, square button at the top left of the puzzle scrambles the
squares into random order.
To move a numbered square, click on it; the square slides into the empty square.
When you give up trying to solve the puzzle,
click the small, square button at the top right of the puzzle;
.B puzzle
then unscrambles the puzzle automatically \(em
just to prove how much smarter it is than the average user.
.PP
.B puzzle
recognizes the following command-line options:
.IP "\fB\-bd \fIcolor\fR" 0.75i
Set the color of the border to
.IR color .
.IP "\fB\-bg \fIcolor\fR"
Set the color of the background to
.IR color .
.IP "\fB\-bw \fIpixels\fR"
Set the width of the border to
.IR pixels .
.IP "\fB\-display \fIhost\^\fB[:\fIserver\^\fB][.\fIscreen\^\fB]\fR"
Display the client's window on screen number
.I screen
of
.I server
on host system
.IR host .
.IP "\fB\-fg \fIcolor\fR"
Set the color of the foreground to
.IR color .
.IP "\fB\-fn \fIfont\fR"
Use
.I font
in the display.
.IP "\fB\-geometry \fIgeometry\fR"
Set the geometry of the program's window to
.IR geometry .
The term ``geometry'' means the dimensions of the window and its location
on the screen.
.I geometry
has the form \fIwidth\(muheight\(+-xoffset\(+-yoffset\fR.
.IP "\fB\-picture \fIfile\fR"
Build the puzzle from the image in
.IR file ,
instead of numbered tiles.
.I file
must be the special
.B puzzle
picture format.
.II xgrabsc
The X client
.B xgrabsc
(which is not included in this package) can ``grab'' images of windows and
store them in the
.B puzzle
format, for use with
.BR puzzle .
Note that there is a strict limit on the size of image that
.B puzzle
can use.
.IP \fB\-rv\fR
Simulate reverse video by exchanging the foreground and background colors.
.IP "\fB\-xrm \fIresourcestring\fR"
Use
.I resourcestring
to define a resource.
.SH "See Also"
.B
maze,
X clients,
xgas,
xtetris
.R
