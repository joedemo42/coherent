% lib/outlinefont.ps 6/18/91
% See "PostScript Language Tutorial and Cookbook" (Blue Book),
% program 16, pp. 203ff.
% Slightly modified by steve for sanity.

/makeoutlinedict 5 dict def			% local dictionary
makeoutlinedict begin /id 0 def end		% define static unique id

% newname oldname width MakeOutlineFont -
% Make an outline font.
% newname should be a literal giving the new font name,
% oldname should be a literal giving a known PS font name.
% width is a relative outline width which scales with the font;
% it is the pointsize at which the outline of the new font is 1 point wide.
/MakeOutlineFont
{
	makeoutlinedict begin			% load local dictionary
	/width 1000 3 -1 roll div def		% save stroke width
	/oldfont exch findfont def		% find old font
	/newname exch def			% save new name
	/newfont oldfont maxlength 2 add dict def	% make new font dict
	oldfont
	{					% key value pair on stack
		exch dup /FID ne		
		{ exch newfont 3 1 roll put }	% copy key value pair to newfont
		{ pop pop }			% skipping /FID
		ifelse
	} forall
	newfont /FontName newname put		% store new name
	newfont /PaintType 2 put		% store type==outline
	newfont /StrokeWidth width put		% store stroke width
	/id id 1 add def			% bump static id
	newfont /UniqueID
		oldfont dup /UniqueID known
		{ /UniqueID get id add }	% UniqueID known, bump by id
		{ pop id }			% No UniqueID, use id
		ifelse put			% store unique id
	newname newfont definefont pop		% and define the font
	end					% pop dictionary
} def

% Examples.
% /Helvetica-Outline1 /Helvetica-Bold 54 MakeOutlineFont
% /Helvetica-Outline1 findfont 36 scalefont setfont
% 72 704 moveto (outline1@36) show
% /Helvetica-Outline1 findfont 54 scalefont setfont
% 72 632 moveto (outline1@54) show
% /Helvetica-Outline2 /Helvetica-Bold 36 MakeOutlineFont
% /Helvetica-Outline2 findfont 36 scalefont setfont
% 72 444 moveto (outline2@36) show
% /Helvetica-Outline2 findfont 54 scalefont setfont
% 72 372 moveto (outline2@54) show
% showpage

% end of outlinefont.ps
