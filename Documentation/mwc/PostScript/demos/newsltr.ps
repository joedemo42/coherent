%!PS-Adobe-2.0
%%Title: PageMaker - BALLOON.PM3
%%For: Windows
% PageMaker - BALLOON.PM3
statusdict begin statusdict /jobname (PageMaker - BALLOON.PM3; user: Windows) put end
/WinDict 282 dict def WinDict begin
/SS { /Temp save def } bind def
/SaveState /SS load def
/RS { Temp restore } bind def
/RestoreState /RS load def
/#C{userdict begin /#copies exch def end}def
/SJT{statusdict begin setjobtimeout end}def
currentscreen
/proc exch def
/angle exch def
/frequency exch def
/mxDefault matrix defaultmatrix def
/mx1 matrix def
/mx2 matrix def
/mx3 matrix def
/x0 0 def
/y0 0 def
/x1 0 def
/y1 0 def
/hypot { dup mul exch dup mul add sqrt } def
/iRes 300 def
/iDevRes 72 0 mx1 defaultmatrix dtransform hypot def
/PenWidth iRes iDevRes div def 
/iPenGray 0 def 
/inch { 72 mul } def
/fLandscape false def 
/cxPaper 8.5 inch def 
/cyPaper 11 inch def 
/cxMargin .25 inch def 
/cyMargin .125 inch def
/DefaultSetScreen /setscreen load def
/SetCTM
{
 mx1 defaultmatrix setmatrix
 fLandscape { 0 cyPaper translate -90 rotate } if
 SetMap
 
 /ScreenAdjust 1 0 dtransform exch atan def
 /setscreen {exch ScreenAdjust add exch DefaultSetScreen} def
} def
/SetMap
 {
 fLandscape
 {cyMargin cxPaper cxMargin sub}
 {cxMargin cyPaper cyMargin sub}
 ifelse
 translate
 72 iRes div dup neg
 scale
 } def
/SetMetrics
 {
 /fLandscape exch 0 ne def
 /iRes exch def
 fLandscape
 {
 /cxPaper exch iRes div inch def 
 /cyPaper exch iRes div inch def 
 /cxMargin exch iRes div inch def 
 /cyMargin exch iRes div inch def 
 }{
 /cyPaper exch iRes div inch def 
 /cxPaper exch iRes div inch def 
 /cyMargin exch iRes div inch def
 /cxMargin exch iRes div inch def 
 }
 ifelse
 SetCTM
 } def
/ClipBox
 {
 2 {.5 add 4 1 roll} repeat
 2 {.5 sub 4 1 roll} repeat
 /y1 exch def /x1 exch def
 /y0 exch def /x0 exch def
 newpath
 x0 y0 moveto
 x1 y0 lineto
 x1 y1 lineto
 x0 y1 lineto
 closepath
 clip
 } def
/mxCharToUser matrix def
/mxAlpha matrix def
/str 1 string def
/BreakChar 32 def
/fBreakExtra false def
/ratGdiDev { iDevRes iRes div } def
/Align { ratGdiDev mul round ratGdiDev div } def
/AlignXY { iRes iDevRes ne {Align exch Align exch } if } def
/Underline
 {
 currentpoint currentlinewidth newpath
 cyUnderline setlinewidth
 x0 dxUnderline add y0 dyUnderline neg add AlignXY moveto
 dx dy rlineto stroke
 setlinewidth moveto
 } bind def
/Strikeout
 {
 currentpoint currentlinewidth newpath
 cyUnderline setlinewidth
 x0 dxStrikeout add y0 dyStrikeout neg add AlignXY moveto
 dx dy rlineto stroke
 setlinewidth moveto
 } bind def
/SetUnderline 
 {
 dup /FontInfo get /UnderlineThickness known not
 { pop /Courier findfont } if
 /FontInfo get dup /UnderlinePosition get
 Sy mul 1000 div
 0 exch mxAlpha transform
 /dyUnderline exch def
 /dxUnderline exch def
 /UnderlineThickness get Sy mul 1000 div /cyUnderline exch def
 } def
/SetStrikeout
 {
 0 Sy 0.3 mul mxAlpha transform
 /dyStrikeout exch def
 /dxStrikeout exch def
 } def
/SJ
{
 1 index 0 eq
 { pop pop /fBreakExtra false def }
 { div dup
 /dxBreak exch 1 mul def 
 /dyBreak exch 0 mul def 
 /fBreakExtra true def
 } ifelse
} def
/SetJustify /SJ load def
/SB
{
 grayCur setgray
 /str exch def
 /cbStr str length fBreakExtra not { dup 1 gt { 1 sub } if } if def 
 /dxGdi exch def
 alpha 0 ne
 { 
 dxGdi 0 mxAlpha transform 
 /dxGdi exch def /dyGdi exch def
 mxCharToUser transform AlignXY 
 /y0 exch def /x0 exch def
 str stringwidth
 neg dyGdi add cbStr div /dyExtra exch def
 neg dxGdi add cbStr div /dxExtra exch def
 }
 { 
 /y0 exch def
 
 /x0 exch def
 iRes iDevRes ne 
 { x0 y0 AlignXY /y0 exch def /x0 exch def } if
 str stringwidth pop
 neg dxGdi add cbStr div /dxExtra exch def /dyExtra 0 def
 } ifelse
 x0 y0 moveto
 fBreakExtra
 { dxBreak dyBreak BreakChar dxExtra dyExtra str awidthshow }
 { dxExtra dyExtra str ashow }
 ifelse
 fStrikeout fUnderline or
 {
 currentpoint
 exch dxExtra sub exch dyExtra sub
 y0 sub /dy exch def
 x0 sub /dx exch def
 fUnderline {Underline} if
 fStrikeout {Strikeout} if
 } if
 /fBreakExtra false def
} bind def
/StrBlt /SB load def
/ANSIVec[
16#0 /grave
16#1 /acute
16#2 /circumflex
16#3 /tilde
16#4 /macron
16#5 /breve
16#6 /dotaccent
16#7 /dieresis
16#8 /ring
16#9 /cedilla
16#A /hungarumlaut
16#B /ogonek
16#C /caron
16#D /dotlessi
16#27 /quotesingle
16#60 /grave
16#7C /bar 
16#91 /quoteleft
16#92 /quoteright
16#93 /quotedblleft
16#94 /quotedblright
16#95 /bullet
16#96 /endash
16#97 /emdash
16#A0 /space
16#A4 /currency
16#A6 /brokenbar 
16#A7 /section
16#A8 /dieresis
16#A9 /copyright 
16#AA /ordfeminine
16#AB /guillemotleft
16#AC /logicalnot 
16#AD /hyphen
16#AE /registered 
16#AF /macron
16#B0 /degree 
16#B1 /plusminus 
16#B2 /twosuperior
16#B3 /threesuperior 
16#B4 /acute
16#B5 /mu 
16#B6 /paragraph
16#B7 /periodcentered
16#B8 /cedilla
16#B9 /onesuperior 
16#BA /ordmasculine
16#BB /guillemotright
16#BC /onequarter 
16#BD /onehalf 
16#BE /threequarters 
16#BF /questiondown
16#C0 /Agrave
16#C1 /Aacute
16#C2 /Acircumflex
16#C3 /Atilde
16#C4 /Adieresis
16#C5 /Aring
16#C6 /AE
16#C7 /Ccedilla
16#C8 /Egrave
16#C9 /Eacute
16#CA /Ecircumflex
16#CB /Edieresis
16#CC /Igrave
16#CD /Iacute
16#CE /Icircumflex
16#CF /Idieresis
16#D0 /Eth 
16#D1 /Ntilde
16#D2 /Ograve
16#D3 /Oacute
16#D4 /Ocircumflex
16#D5 /Otilde
16#D6 /Odieresis
16#D7 /multiply 
16#D8 /Oslash
16#D9 /Ugrave
16#DA /Uacute
16#DB /Ucircumflex
16#DC /Udieresis
16#DD /Yacute 
16#DE /Thorn 
16#DF /germandbls
16#E0 /agrave
16#E1 /aacute
16#E2 /acircumflex
16#E3 /atilde
16#E4 /adieresis
16#E5 /aring
16#E6 /ae
16#E7 /ccedilla
16#E8 /egrave
16#E9 /eacute
16#EA /ecircumflex
16#EB /edieresis
16#EC /igrave
16#ED /iacute
16#EE /icircumflex
16#EF /idieresis
16#F0 /eth 
16#F1 /ntilde
16#F2 /ograve
16#F3 /oacute
16#F4 /ocircumflex
16#F5 /otilde
16#F6 /odieresis
16#F7 /divide 
16#F8 /oslash
16#F9 /ugrave
16#FA /uacute
16#FB /ucircumflex
16#FC /udieresis
16#FD /yacute 
16#FE /thorn 
16#FF /ydieresis
] def
/reencdict 12 dict def
/IsChar {basefontdict /CharStrings get exch known} bind def
/MapCh {
 dup IsChar not 
 {pop /bullet} if 
 newfont /Encoding get 3 1 roll put 
 }bind def
/MapDegree{16#b0 /degree IsChar {/degree}{/ring} ifelse MapCh} bind def
/MapBB {16#a6 /brokenbar IsChar {/brokenbar}{/bar}ifelse MapCh} bind def
/ANSIFont
 {
 reencdict begin
 /newfontname exch def 
 /basefontname exch def
 FontDirectory newfontname known not
 {
 /basefontdict basefontname findfont def
 /newfont basefontdict maxlength dict def
 basefontdict
 { exch dup /FID ne
 { dup /Encoding eq
 { exch dup length array copy newfont 3 1 roll put }
 { exch newfont 3 1 roll put }
 ifelse
 }
 {pop pop}
 ifelse
 }forall
 newfont /FontName newfontname put
 127 1 159 {newfont /Encoding get exch /bullet put} for
 ANSIVec aload pop
 ANSIVec length 2 idiv
 {MapCh}repeat 
 MapDegree MapBB
 newfontname newfont definefont pop
 } if
 newfontname
 end
 } bind def
/font
 {
 9 1 roll
 0 ne {0} {1} ifelse 
 /grayCur exch def
 0 ne /fStrikeout exch def
 0 ne /fUnderline exch def
 /Sy exch def
 /Sx exch def
 /beta exch 10.0 div def
 /alpha exch 10.0 div def
 /BreakChar exch def
 alpha mxAlpha rotate pop
 findfont dup
 Sx Sy neg mx1 scale
 alpha mx2 rotate
 mx3 concatmatrix
 makefont setfont

 dup /FontBBox get
 dup 3 get dup 3 2 roll 1 get sub div
 Sy mul /dyFromTop exch def
 0 dyFromTop mx1 translate alpha mx2 rotate mxCharToUser concatmatrix pop
 0 0 mxCharToUser transform mxCharToUser translate pop
 SetUnderline
 SetStrikeout
 } def
/E { showpage SetCTM PenWidth setlinewidth } def
/eject /E load def
/m matrix def 
/cellsize 0 def 
/bitison
 {
 /iy exch def
 /ix exch def
 pat iy 7 and get
 1 7 ix 7 and sub bitshift
 and 
 0 eq 
 } bind def
/spotfunction
 {
 exch
 1 add 4 mul cvi 
 exch
 1 add 4 mul cvi 
 bitison 
 { /onbits onbits 1 add def 1 }
 { /offbits offbits 1 add def 0 }
 ifelse
 } bind def
/PatGray { offbits offbits onbits add div setgray } def
/SolidGray { iBrushGray setgray } def
/PenGray { iPenGray setgray } def
/SetPattern
 {
 /pat exch def
 /cellsize iRes 300 16 div div def
 /rm 90 matrix rotate def
 /sm cellsize dup matrix scale def
 sm rm matrix concatmatrix
 matrix currentmatrix
 m concatmatrix pop
 1 0 m dtransform /dy exch def /dx exch def
 /onbits 0 def
 /offbits 0 def
 iDevRes dx dy hypot div 
 dx dy atan /spotfunction load setscreen
 {} settransfer
 0 setgray
 /fGrayScreen false def
 } bind def
/min { 1 index 1 index gt { exch } if pop } def
/NonZero { dup 0 eq { pop 1 } if } def
/sto { exch def } def
/iBrush 1 def 
/iPen 0 def 
/fGrayScreen true def 
/iBrushGray 0 def 
/picstr 1 string def
/cx 0 def
/cy 0 def
/FillPoly
 {
 iBrush 0 eq { SolidGray fill 0 setgray } if 
 iBrush 1 eq {} if 
 iBrush 2 eq {} if
 iBrush 3 eq { PatGray fill 0 setgray } if 
 } def
/EOFillPoly
 {
 iBrush 0 eq { SolidGray eofill 0 setgray } if 
 iBrush 1 eq {} if 
 iBrush 2 eq {} if 
 iBrush 3 eq { PatGray eofill 0 setgray } if 
 } def
/GDIStroke
 {
 iPen 0 ge iPen 5 lt and
 { PenGray stroke 0 setgray }
 { newpath } 
 ifelse
 } def
/GetAngle
 {
 Ty sub
 Sy div
 exch
 Tx sub
 Sx div
 atan
 } def
/SetBrush
 {
 /iBrush exch def
 iBrush 0 eq
 {
 /iBrushGray exch 1000 div def
 fGrayScreen not 
 {
 frequency angle WinDict /proc get DefaultSetScreen
 } if
 /fGrayScreen true def
 0 setgray
 } if
 } def
/GapWidth { iRes 0.0825 mul PenWidth mul cvi } def
/DotWidth { iRes 0.020 mul PenWidth mul cvi } def
/DashWidth { iRes 0.125 mul PenWidth mul cvi } def
/SetPen
 {
 /iPenGray exch 1000 div def
 /PenWidth exch def
 /iPen exch def
 iPen 0 ge
 {
 iPen 0 eq 
 { [] 0 setdash } if
 iPen 1 eq 
 { [DashWidth GapWidth] 0 setdash } if
 iPen 2 eq 
 { [DotWidth GapWidth] 0 setdash } if
 iPen 3 eq 
 { [DashWidth GapWidth DotWidth GapWidth] 0 setdash } if
 iPen 4 eq 
 { [DashWidth GapWidth DotWidth GapWidth DotWidth GapWidth] 0 setdash} if
 } if
 PenWidth setlinewidth
 } bind def
/EBox {
 /y1 sto /x1 sto
 /y0 sto /x0 sto
 /Sx x1 x0 sub 2 div abs NonZero def
 /Sy y1 y0 sub 2 div abs NonZero def
 Sx Sy min /r sto
 x0 x1 add 2 div /Tx sto
 y0 y1 add 2 div /Ty sto
 Tx Ty translate
 Sx r div Sy r div scale
 0 0 r
 }def
/ABox
 {
 /y3 sto /x3 sto
 /y2 sto /x2 sto
 EBox
 
 x0 x1 eq y0 y1 eq or
 {
 y0 y1 eq
 { x2 x3 le { 90 180 } { 0 90 } ifelse }
 { y2 y3 le { 0 90 } { 270 360 } ifelse }
 ifelse
 }
 {x3 y3 GetAngle x2 y2 GetAngle}
 ifelse
 }def
/GDIEllipse
 {
 gsave EBox
 newpath 0 360 arc closepath SetCTM
 gsave FillPoly grestore GDIStroke
 grestore
 } def
/GDIArc {gsave ABox newpath arc SetCTM GDIStroke grestore} def
/GDIPie
 {
 gsave ABox newpath 0 0 moveto arc closepath SetCTM
 gsave FillPoly grestore GDIStroke grestore
 } def
/Box
 {
 save 5 1 roll
 dtransform exch 1 sub exch 1 sub idtransform
 /y2 sto /x2 sto
 newpath AlignXY moveto
 x2 0 rlineto
 0 y2 rlineto
 x2 neg 0 rlineto
 closepath FillPoly restore
 } bind def
/GDIRect
 {
 SaveState
 /y1 sto /x1 sto
 /y0 sto /x0 sto
 newpath
 x0 y0 moveto
 x0 y1 lineto
 x1 y1 lineto
 x1 y0 lineto
 closepath
 gsave FillPoly grestore GDIStroke
 RestoreState
 0 setgray 
 } bind def
/min {2 copy gt {exch} if pop} bind def
/max {2 copy lt {exch} if pop} bind def
/GDIRoundRect {
 SaveState
 /y2 sto /x2 sto
 /yscale y2 x2 div 1 max def
 /xscale x2 y2 div 1 max def
 /y1 exch yscale div def
 /x1 exch xscale div def
 /y0 exch yscale div def
 /x0 exch xscale div def
 /r2 x2 y2 min def
 xscale yscale scale
 newpath
 x0 r2 add y0 moveto
 x1 y0 x1 y1 r2 arcto 4 { pop } repeat
 x1 y1 x0 y1 r2 arcto 4 { pop } repeat
 x0 y1 x0 y0 r2 arcto 4 { pop } repeat
 x0 y0 x1 y0 r2 arcto 4 { pop } repeat
 closepath
 gsave FillPoly grestore
 SetCTM GDIStroke
 RestoreState
 0 setgray
} bind def
/StartFill
 {
 newpath
 moveto
 } def
/PolyPoints
 {
 { lineto } repeat
 } def
/EndFill
 {
 closepath
 gsave
 0 ne {EOFillPoly} {FillPoly} ifelse
 grestore
 GDIStroke
 } def
/PL
 {
 newpath
 3 1 roll
 .5 add exch .5 add exch moveto
 1 sub
 {.5 add exch .5 add exch lineto } repeat
 GDIStroke
 clear
} bind def
/GDIPolyLine /PL load def
/GDILine
 {
 SaveState
 newpath
 4 2 roll
 moveto
 lineto
 GDIStroke
 RestoreState
 } def
/SL
 {
 SaveState
 gsave
 0 eq
 {PenGray}
 {
 iBrush 0 eq {SolidGray} if 
 iBrush 1 eq {0 setgray} if 
 iBrush 2 eq iBrush 3 eq or {PatGray} if 
 1 setlinewidth
 [] 0 setdash
 } ifelse
 exch /y0 exch def
 {
 y0 moveto
 y0 lineto
 stroke
 } repeat
 PenWidth setlinewidth
 0 setgray
 grestore
 RestoreState
} bind def
/_S /SL load def
/cbRun 0 def
/cbPat 0 def
/cRep 0 def
/rgbRun 1024 string def
/rgbByte 1 string def
/GetByte { currentfile rgbByte readhexstring pop 0 get } bind def
/GetWord { GetByte 256 mul GetByte add } bind def
/GetString { currentfile exch readhexstring pop pop } bind def
/RepString
 {
 /cbRun cbPat cRep mul cvi store
 rgbRun 0 cbPat getinterval GetString
 cbPat
 {
 dup 2 mul exch rgbRun exch
 rgbRun 0 2 index getinterval
 putinterval
 dup 16 ge {exit} if
 } loop
 /cbPat exch def
 0 cbPat cbRun 1 sub
 { rgbRun exch rgbRun 0 cbPat getinterval putinterval } for
 rgbRun 0 cbRun getinterval
 } bind def
/GetRun
 {
 /cRep GetWord def
 /cbPat GetByte def
 cbPat 0 eq { rgbRun 0 cRep getinterval GetString } { RepString } ifelse
 } bind def
/Scan
 {
 /cx exch cvi def
 /y0 exch cvi def
 /x0 exch cvi def
 gsave
 x0 y0 translate
 save
 cx 1 scale
 cx 1 false [cx 0 0 1 0 0] { GetRun } imagemask
 restore
 grestore
 } bind def
/BB
{
 SaveState
 /cy exch cvi def
 /cx exch cvi def
 /y0 exch cvi def
 /x0 exch cvi def
 /picstr cx 7 add 8 idiv string def 
 gsave
 0 setgray 
 x0 y0 translate
 cx cy false [1 0 0 1 0 0] {currentfile picstr readhexstring pop} imagemask
 grestore
 RestoreState
} bind def
/BitBlt /BB load def
/Bb
{
 SaveState
 /cy exch cvi def
 /cx exch cvi def
 /y0 exch cvi def
 /x0 exch cvi def
 /picstr cx 7 add 8 idiv string def 
 x0 y0 translate
 cx cy false [1 0 0 1 0 0] {currentfile picstr readstring pop} imagemask
 RestoreState
} bind def
/CPYBB
{
 SaveState
 /cy exch cvi def
 /cx exch cvi def
 /y0 exch cvi def
 /x0 exch cvi def
 /picstr cx 7 add 8 idiv string def 
 gsave
 0 setgray 
 x0 y0 translate
 cx cy 1 [1 0 0 1 0 0] {currentfile picstr readhexstring pop} image
 grestore
 RestoreState
} bind def
/CPYBb
{
 SaveState
 /cy exch cvi def
 /cx exch cvi def
 /y0 exch cvi def
 /x0 exch cvi def
 /picstr cx 7 add 8 idiv string def 
 x0 y0 translate
 cx cy 1 [1 0 0 1 0 0] {currentfile picstr readstring pop} image
 RestoreState
} bind def
/OB
 {
 /cy exch def
 /cx exch def
 /y0 exch def
 /x0 exch def
 gsave
 1 setgray
 newpath
 x0 y0 moveto
 x0 cx add y0 lineto
 x0 cx add y0 cy add lineto
 x0 y0 cy add lineto
 closepath
 fill
 grestore
 } bind def
/OpaqueBox /OB load def
letter
{
mark
1.0 1.0 .98 .9 .82 .68 .56 .48 .28 .1 .06 .0
counttomark dup 3 add -1 roll exch
2 sub mul dup floor cvi
dup 3 1 roll sub
exch dup
3 add index exch 2 add index dup
4 1 roll
sub mul add
counttomark 1 add 1 roll
cleartomark
}
settransfer
75 42 2550 3300 300 0 SetMetrics

SS
statusdict begin /manualfeed false store end
0 SJT
1 #C
1 #C
0 0 SetBrush
1 setlinecap
1 setlinejoin
5 1 1000 SetPen
150 183 StartFill
150 183 150 199 2249 199 2249 183 4 PolyPoints
1 EndFill
0 0 SetBrush
150 3052 StartFill
150 3052 150 3055 2249 3055 2249 3052 4 PolyPoints
1 EndFill
32 0 0 42 42 0 0 1 /Helvetica-Bold /font9 ANSIFont font
1188 3102 23 (1) SB
0 0 SetBrush
1200 249 StartFill
1200 249 1200 3032 1200 3032 3 PolyPoints
1 EndFill
32 0 0 42 42 0 0 1 /Times-Roman /font4 ANSIFont font
150 278 918 (voluptat. Ut wisi enim ad minim veniam, quis nostrud) SB
150 328 964 (exerci tation ullamcorper suscipit lobortis nisl ut aliquip.) SB
225 378 917 (Duis autem vel eum iriure dolor in hendrerit in vulpu-) SB
150 428 910 (tate velit esse molestie consequat, vel illum dolore eu) SB
150 478 1007 (feugiat nulla facilisis at vero eros et accumsan et iusto odio) SB
150 528 1007 (dignissum qui blandit praesent luptatum zzril delenit augue) SB
150 578 983 (duis dolore te feugiat nulla facilisi. Lorem ipsum dolor sit) SB
150 628 753 (amet, consectetuer adipiscing elit, sed daim.) SB
225 678 891 (Lorem ipsum dolor sit amet, consectetuer adipiscing) SB
150 728 984 (elit, sed daim nonummy nibh euismod tincidunt ut laoreet) SB
150 778 897 (dolore magna aliquam erat voluptat. Ut wisi enim ad) SB
150 828 915 (minim veniam, quis nostrud exerci tation ullamcorper) SB
150 878 525 (suscipit lobortis nisl ut aliquip.) SB
225 928 917 (Duis autem vel eum iriure dolor in hendrerit in vulpu-) SB
150 978 910 (tate velit esse molestie consequat, vel illum dolore eu) SB
150 1028 1007 (feugiat nulla facilisis at vero eros et accumsan et iusto odio) SB
150 1078 1007 (dignissum qui blandit praesent luptatum zzril delenit augue) SB
150 1128 983 (duis dolore te feugiat nulla facilisi. Lorem ipsum dolor sit) SB
150 1178 753 (amet, consectetuer adipiscing elit, sed daim.) SB
32 0 0 100 100 0 0 1 /Helvetica-Bold /font9 ANSIFont font
150 1323 933 (Pacific Page makes) SB
150 1443 507 (Headlines!) SB
0 0 SetBrush
150 1512 StartFill
150 1512 150 1519 1162 1519 1162 1512 4 PolyPoints
1 EndFill
32 0 0 42 42 0 0 1 /Times-Roman /font4 ANSIFont font
150 1591 998 (Adipiscing elit sed diam nonummy nibh eusimod tincidunt) SB
150 1641 921 (ut laoreet dolore magna aliquam erat volutpat. Ut wisi) SB
150 1691 916 (enim ad minim veniam, quis nostrud exercit tation ul-) SB
150 1741 977 (lamcorper suscipit lobortis nisl ut aliquip ex ea commodo) SB
150 1791 987 (consequat. Duis autem vel eum iriure dolor in hendrerit in) SB
150 1841 1006 (vulputate velit esse molestie consequat, vel illum dolore eu) SB
150 1891 1007 (feugiat nulla facilisis at vero eros et accumsan et iusto odio) SB
150 1941 1007 (dignissum qui blandit praesent luptatum zzril delenit augue) SB
150 1991 983 (duis dolore te feugiat nulla facilisi. Lorem ipsum dolor sit) SB
150 2041 1010 (amet, consectetuer adipiscing elit, sed daim nonummy nibh) SB
150 2091 942 (euismod tincidunt ut laoreet dolore magna aliquam erat) SB
150 2141 918 (voluptat. Ut wisi enim ad minim veniam, quis nostrud) SB
150 2191 964 (exerci tation ullamcorper suscipit lobortis nisl ut aliquip.) SB
1313 278 917 (Duis autem vel eum iriure dolor in hendrerit in vulpu-) SB
1238 328 910 (tate velit esse molestie consequat, vel illum dolore eu) SB
1238 378 1007 (feugiat nulla facilisis at vero eros et accumsan et iusto odio) SB
1238 428 1007 (dignissum qui blandit praesent luptatum zzril delenit augue) SB
1238 478 983 (duis dolore te feugiat nulla facilisi. Lorem ipsum dolor sit) SB
1238 528 753 (amet, consectetuer adipiscing elit, sed daim.) SB
32 0 0 50 50 0 0 1 /Helvetica-Bold /font9 ANSIFont font
1238 623 538 (Balloons Fly High . . . .) SB
32 0 0 42 42 0 0 1 /Times-Roman /font4 ANSIFont font
1313 676 891 (Lorem ipsum dolor sit amet, consectetuer adipiscing) SB
1238 726 984 (elit, sed daim nonummy nibh euismod tincidunt ut laoreet) SB
1238 776 897 (dolore magna aliquam erat voluptat. Ut wisi enim ad) SB
1238 826 915 (minim veniam, quis nostrud exerci tation ullamcorper) SB
1238 876 525 (suscipit lobortis nisl ut aliquip.) SB
1313 926 917 (Duis autem vel eum iriure dolor in hendrerit in vulpu-) SB
1238 976 910 (tate velit esse molestie consequat, vel illum dolore eu) SB
1666 1026 566 (feugiat nulla facilisis at vero eros) SB
1666 1076 558 (et accumsan et iusto odio dignis-) SB
1666 1126 578 (sum qui blandit praesent luptatum) SB
1666 1176 557 (zzril delenit augue duis dolore te) SB
1666 1226 476 (feugiat nulla facilisi. Lorem) SB
1666 1276 582 (ipsum dolor sit amet, consectetuer) SB
1666 1326 425 (adipiscing elit, sed daim.) SB
1740 1376 502 (Adipiscing elit sed diam non-) SB
1665 1426 554 (ummy nibh eusimod tincidunt ut) SB
1665 1476 582 (laoreet dolore magna aliquam erat) SB
1664 1526 553 (volutpat. Ut wisi enim ad minim) SB
1664 1576 481 (veniam, quis nostrud exercit) SB
1238 1626 938 (tation ullamcorper suscipit lobortis nisl ut aliquip ex ea) SB
1238 1676 959 (commodo consequat. Duis autem vel eum iriure dolor in) SB
1238 1726 943 (hendrerit in vulputate velit esse molestie consequat, vel) SB
1238 1776 942 (illum dolore eu feugiat nulla facilisis at vero eros et ac-) SB
1238 1826 880 (cumsan et iusto odio dignissum qui blandit praesent) SB
1238 1876 944 (luptatum zzril delenit augue duis dolore te feugiat nulla) SB
1238 1926 970 (facilisi. Lorem ipsum dolor sit amet, consectetuer adipis-) SB
1238 1976 941 (cing elit, sed daim nonummy nibh euismod tincidunt ut) SB
1238 2026 973 (laoreet dolore magna aliquam erat voluptat. Ut wisi enim) SB
1238 2076 966 (ad minim veniam, quis nostrud exerci tation ullamcorper) SB
1238 2126 525 (suscipit lobortis nisl ut aliquip.) SB
1313 2176 917 (Duis autem vel eum iriure dolor in hendrerit in vulpu-) SB
1238 2226 910 (tate velit esse molestie consequat, vel illum dolore eu) SB
1238 2276 496 (feugiat nulla facilisis at vero.) SB
32 0 0 50 50 0 0 1 /Helvetica-Bold /font9 ANSIFont font
1238 2371 312 (What's next?) SB
32 0 0 42 42 0 0 1 /Times-Roman /font4 ANSIFont font
1313 2423 891 (Lorem ipsum dolor sit amet, consectetuer adipiscing) SB
1238 2473 984 (elit, sed daim nonummy nibh euismod tincidunt ut laoreet) SB
1238 2523 897 (dolore magna aliquam erat voluptat. Ut wisi enim ad) SB
1238 2573 915 (minim veniam, quis nostrud exerci tation ullamcorper) SB
1238 2623 525 (suscipit lobortis nisl ut aliquip.) SB
1313 2673 917 (Duis autem vel eum iriure dolor in hendrerit in vulpu-) SB
1238 2723 910 (tate velit esse molestie consequat, vel illum dolore eu) SB
1238 2773 1007 (feugiat nulla facilisis at vero eros et accumsan et iusto odio) SB
1238 2823 779 (dignissum qui blandit praesent luptatum zzril.) SB
32 0 0 38 38 0 0 1 /Helvetica-Bold /font9 ANSIFont font
150 2949 206 (Let's Party!) SB

 userdict /PMSAVE save put initgraphics userdict begin


 /showpage {} def 0.0025 dup scale

100 100 div dup scale  100 100 div 1440 mul 300
div 20 mul dup  290 mul exch 399 mul translate 20 20 scale 0 0
translate 3941 370 div 2737 257 div scale 

 0 0 moveto 0 257 lineto 370 257 lineto 370 0 lineto closepath clip newpath 
%!PS-Adobe-2.0 EPSF-1.2%%Creator:Adobe Illustrator(TM) 1.2d4%%For:Judy%%Title:Balloons.EPSa%%CreationDate:11/15/87 2:04 PM%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0%%PageFonts:Courier145.000000 153.000000 translate
%%BoundingBox:-145 -153 225 104%%TemplateBox:288 -360 288 -360%%EndComments%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0% Copyright (C) 1987 Adobe Systems Incorporated.% All Rights Reserved.% Adobe Illustrator is a trademark of Adobe Systems Incorporated./Adobe_Illustrator_1.2d1 dup 100 dict def load begin/Version 0 def/Revision 0 def% definition operators/bdef {bind def} bind def/ldef {load def} bdef/xdef {exch def} bdef% graphic state operators/_K {3 index add neg dup 0 lt {pop 0} if 3 1 roll} bdef/_k /setcmybcolor where{/setcmybcolor get} {{1 sub 4 1 roll _K _K _K setrgbcolor pop} bind} ifelse def/g {/_b xdef /p {_b setgray} def} bdef/G {/_B xdef /P {_B setgray} def} bdef/k {/_b xdef /_y xdef /_m xdef /_c xdef /p {_c _m _y _b _k} def} bdef/K {/_B xdef /_Y xdef /_M xdef /_C xdef /P {_C _M _Y _B _k} def} bdef/d /setdash ldef/_i currentflat def/i {dup 0 eq {pop _i} if setflat} bdef/j /setlinejoin ldef/J /setlinecap ldef/M /setmiterlimit ldef/w /setlinewidth ldef% path construction operators/_R {.25 sub round .25 add} bdef/_r {transform _R exch _R exch itransform} bdef/c {_r curveto} bdef/C /c ldef/v {currentpoint 6 2 roll _r curveto} bdef/V /v ldef/y {_r 2 copy curveto} bdef/Y /y ldef/l {_r lineto} bdef/L /l ldef/m {_r moveto} bdef% error operators/_e [] def/_E {_e length 0 ne {gsave 0 g 0 G 0 i 0 J 0 j 1 w 10 M [] 0 d/Courier 20 0 0 1 z [0.966 0.259 -0.259 0.966_e 0 get _e 2 get add 2 div _e 1 get _e 3 get add 2 div] e _f t T grestore} if} bdef/_fill {{fill} stopped{/_e [pathbbox] def /_f (ERROR: can't fill, increase flatness) def n _E} if} bdef/_stroke {{stroke} stopped{/_e [pathbbox] def /_f (ERROR: can't stroke, increase flatness) def n _E} if} bdef% path painting operators/n /newpath ldef/N /n ldef/F {p _fill} bdef/f {closepath F} bdef/S {P _stroke} bdef/s {closepath S} bdef/B {gsave F grestore S} bdef/b {closepath B} bdef% text block construction and painting operators/_s /ashow ldef/_S {(?) exch {2 copy 0 exch put pop dup false charpath currentpoint _g setmatrix_stroke _G setmatrix moveto 3 copy pop rmoveto} forall pop pop pop n} bdef/_A {_a moveto _t exch 0 exch} bdef/_L {0 _l neg translate _G currentmatrix pop} bdef/_w {dup stringwidth exch 3 -1 roll length 1 sub _t mul add exch} bdef/_z [{0 0} bind {dup _w exch neg 2 div exch neg 2 div} bind {dup _w exch neg exch neg} bind] def/z {_z exch get /_a xdef /_t xdef /_l xdef exch findfont exch scalefont setfont} bdef/_g matrix def/_G matrix def/_D {_g currentmatrix pop gsave concat _G currentmatrix pop} bdef/e {_D p /t {_A _s _L} def} bdef/r {_D P /t {_A _S _L} def} bdef/a {_D /t {dup p _A _s P _A _S _L} def} bdef/o {_D /t {pop _L} def} bdef/T {grestore} bdef% group construction operators/u {} bdef/U {} bdef% font construction operators/Z {findfont begin currentdict dup length 1 add dict begin{1 index /FID ne {def} {pop pop} ifelse} forall /FontName exch def dup length 0 ne{/Encoding Encoding 256 array copy def 0 exch {dup type /nametype eq{Encoding 2 index 2 index put pop 1 add} {exch pop} ifelse} forall} if popcurrentdict dup end end /FontName get exch definefont pop} bdefend%%EndProcSet%%EndProlog%%BeginSetupAdobe_Illustrator_1.2d1 beginn%%EndSetup0 g0.3 G0 i0 J0 j2.834 w10 M[]0 d%%Note:88.437 1.813 m88.444 -1.293 lS0.1 g0 G0.163 w167.547 -67.212 m172.995 -66.635 176.858 -60.923 176.173 -54.454 c175.49 -47.985 170.517 -43.207 165.067 -43.784 c159.619 -44.359 155.757 -50.072 156.441 -56.542 c157.125 -63.011 162.097 -67.789 167.547 -67.212 cb0 g1 J0.738 w165.972 -68.607 m166.055 -68.54 166.236 -68.507 166.44 -68.528 C166.644 -68.55 166.995 -68.542 167.062 -68.625 cS1 g1 G0 J0.083 w165.337 -66.899 m161.325 -65.933 157.889 -61.365 157.369 -56.437 c156.878 -51.805 158.985 -47.017 162.335 -45.002 C162.317 -45.004 L158.749 -46.988 156.418 -51.622 156.934 -56.495 c157.491 -61.764 161.071 -66.11 165.343 -66.899 C165.337 -66.899 Lb0 g0 G0.351 w166.4 -68.492 m165.977 -73.8 147.414 -96.085 146.522 -112.541 c146.379 -115.186 146.217 -117.697 146.033 -120.079 cS1.265 w166.4 -67.28 m166.4 -68.442 lS0.4 g0.3 G0.174 w-50.94 27.966 m-45.26 26.636 -39.375 31.024 -37.795 37.768 c-36.214 44.512 -39.539 51.058 -45.219 52.388 c-50.899 53.72 -56.783 49.331 -58.364 42.587 c-59.945 35.843 -56.62 29.296 -50.94 27.966 cb0 g1 J0.786 w-53.012 27.116 m-52.905 27.154 -52.712 27.125 -52.513 27.032 C-52.315 26.938 -52.17 26.807 -52.131 26.701 cS1 g1 G0 J0.089 w-53.051 29.056 m-56.746 31.434 -58.599 37.23 -57.395 42.366 c-56.263 47.195 -52.467 51.27 -48.393 52.121 C-48.412 52.126 L-52.694 51.381 -56.662 47.54 -57.852 42.461 c-59.139 36.969 -57.064 31.344 -53.045 29.055 C-53.051 29.056 Lb0 g0.3 G0.374 w-52.542 27.082 m-54.827 21.894 -76.536 3.671 -83.201 -12.56 c-89.866 -28.788 -86.551 -65.65 -91.841 -71.6 cS1.347 w-52.117 28.301 m-52.525 27.133 lS0.2 g0.2 G0.089 w-51.012 28.218 m-46.631 27.869 -41.645 31.355 -39.489 36.17 c-37.461 40.696 -38.01 46.239 -40.734 49.385 C-40.716 49.377 L-37.762 46.19 -36.934 40.729 -39.067 35.968 c-41.373 30.82 -46.434 27.605 -51.018 28.22 C-51.012 28.218 Lb0.1 g0 G0.436 w-28.942 92.053 m-38.581 86.343 -45.103 74.616 -45.103 60.958 c-45.103 41.718 -31.966 26.119 -15.762 26.119 c0.444 26.119 13.582 41.718 13.582 60.958 c13.582 74.562 7.015 86.346 -2.561 92.081 C-28.942 92.053 Lb0 g3.494 w-15.722 22.602 mS1 J2.184 w-17.074 22.351 m-16.852 22.574 -16.33 22.728 -15.722 22.728 C-15.114 22.728 -14.593 22.574 -14.37 22.351 cS1 g1 G0 J0.249 w-26.3 92.071 m-36.355 86.701 -43.639 74.518 -43.639 60.942 c-43.639 45.27 -34.463 31.373 -22.144 27.729 C-22.162 27.729 L-33.663 31.817 -42.344 46.32 -42.344 60.975 c-42.344 73.91 -35.569 86.537 -26.068 92.074 C-26.3 92.071 Lb0 g0 G1.248 w-15.722 22.728 m-15.309 6.987 -50.565 -64.461 -48.069 -113.133 c-47.626 -121.794 -47.541 -131.664 -47.739 -142.158 cS3.744 w-15.676 26.097 m-15.676 22.596 lS0.4 g0.3 G0.467 w69.49 -125.606 m85.653 -128.429 101.472 -115.158 104.823 -95.968 c108.174 -76.778 97.787 -58.931 81.624 -56.11 c65.46 -53.288 49.641 -66.557 46.291 -85.748 c42.94 -104.939 53.326 -122.783 69.49 -125.606 cb0 g1 J2.209 w67.321 -129.329 m67.137 -129.07 66.643 -128.823 66.037 -128.718 C65.432 -128.612 64.884 -128.676 64.623 -128.858 cS1 g1 G0 J0.251 w63.386 -122.886 m52.627 -116.805 46.495 -100.828 49.046 -86.212 c51.446 -72.468 61.449 -60.417 72.753 -57.371 C72.7 -57.362 L60.796 -60.14 50.271 -71.565 47.747 -86.018 c45.018 -101.65 51.751 -117.109 63.404 -122.89 C63.386 -122.886 Lb0 g0.3 G0.779 w66.209 -128.653 m66.1 -131.624 64.947 -136.253 63.125 -142.137 cS3.79 w67.183 -125.156 m66.226 -128.505 lS0.2 g0.1 G0.545 w-13.849 -103.342 m3.734 -98.527 13.354 -77.699 7.637 -56.822 c1.92 -35.945 -16.969 -22.926 -34.552 -27.74 c-52.135 -32.554 -61.754 -53.384 -56.037 -74.26 c-50.322 -95.136 -31.432 -108.157 -13.849 -103.342 cb0 g1 J2.455 w-14.267 -108.112 m-14.574 -107.938 -15.186 -107.924 -15.846 -108.105 C-16.506 -108.285 -17.024 -108.609 -17.201 -108.916 cS1 g1 G0 J0.271 w-22.334 -102.44 m-35.589 -101.453 -48.878 -88.717 -53.093 -73.326 c-57.056 -58.855 -52.846 -42.542 -43.244 -34.399 C-43.3 -34.413 L-53.61 -42.573 -58.613 -58.513 -54.447 -73.734 c-49.938 -90.193 -36.304 -102.151 -22.315 -102.434 C-22.334 -102.44 Lb0 g0.1 G1.169 w-15.75 -107.966 m-15.028 -113.996 -6.952 -126.375 3.559 -142.24 cS4.211 w-16.381 -103.982 m-15.756 -107.8 lS0.12 g0.12 G0.271 w-16.405 -102.749 m-3.779 -98.594 6.045 -83.027 6.422 -67.074 c6.777 -52.074 -2.495 -37.259 -13.778 -31.673 C-13.721 -31.673 L-1.747 -37.106 8.205 -51.367 7.833 -67.143 c7.428 -84.204 -2.918 -99.098 -16.424 -102.748 C-16.405 -102.749 Lb0.1 g0 G0.545 w28.513 -89.681 m48.77 -89.681 65.191 -70.184 65.191 -46.132 c65.191 -22.082 48.77 -2.584 28.513 -2.584 c8.256 -2.584 -8.166 -22.082 -8.166 -46.132 c-8.166 -70.184 8.256 -89.681 28.513 -89.681 cb0 g4.368 w28.463 -94.076 mS1 J2.729 w30.152 -94.391 m29.875 -94.114 29.223 -93.919 28.463 -93.919 C27.704 -93.919 27.053 -94.114 26.773 -94.391 cS1 g1 G0 J0.312 w20.511 -87.669 m6.135 -82.557 -4.715 -64.428 -4.715 -46.111 c-4.715 -28.888 4.891 -12.105 17.991 -6.001 C17.925 -6.001 L4.038 -11.909 -6.336 -28.039 -6.336 -46.152 c-6.336 -65.742 5.134 -83.114 20.534 -87.669 C20.511 -87.669 Lb0 g0 G1.56 w28.463 -93.919 m28.263 -101.512 34.705 -119.478 42.512 -142.175 cS4.68 w28.405 -89.708 m28.405 -94.085 lS0.4 g0.3 G0.366 w90.137 1.781 m101.898 5.291 108.054 19.456 103.886 33.419 c99.719 47.382 86.806 55.857 75.046 52.347 c63.286 48.837 57.13 34.672 61.297 20.709 c65.465 6.745 78.377 -1.729 90.137 1.781 cb0 g1 J1.653 w89.399 -1.663 m89.214 -1.513 88.809 -1.437 88.352 -1.486 C87.894 -1.534 87.514 -1.693 87.364 -1.878 cS1 g1 G0 J0.188 w85.144 1.563 m75.913 2.039 66.471 10.684 63.297 21.319 c60.313 31.317 62.982 42.726 69.53 48.54 C69.491 48.528 L62.453 42.692 59.224 31.529 62.363 21.015 c65.758 9.641 75.427 1.543 85.158 1.566 C85.144 1.563 Lb0 g0.3 G0.786 w88.444 -1.405 m90.56 -22.16 127.52 -36.08 131.36 -77.84 c133.248 -98.381 135.283 -122.312 137.826 -142.13 cS0.2 g0.2 G0.188 w90.42 2.327 m98.697 6.443 103.913 18.134 102.586 29.152 c101.339 39.512 94.347 48.913 86.025 51.637 C86.064 51.64 L94.846 49.093 102.253 40.141 103.564 29.246 c104.983 17.461 99.341 6.181 90.406 2.325 C90.42 2.327 Lb0.1 g0 G0.48 w132.638 -21.011 m150.444 -20.146 164.044 -2.305 163.016 18.834 c161.988 39.975 146.72 56.411 128.914 55.545 c111.11 54.678 97.509 36.837 98.537 15.697 c99.566 -5.441 114.834 -21.877 132.638 -21.011 cb0 g3.843 w132.904 -24.872 mS1 J2.401 w134.404 -25.075 m134.146 -24.843 133.566 -24.7 132.898 -24.732 C132.229 -24.765 131.666 -24.964 131.433 -25.22 cS1 g1 G0 J0.274 w125.521 -19.585 m112.666 -15.706 102.352 -0.236 101.57 15.864 c100.833 31.003 108.56 46.166 119.813 52.091 C119.755 52.088 L107.8 46.301 99.373 31.68 100.147 15.76 c100.985 -1.46 111.809 -16.238 125.541 -19.584 C125.521 -19.585 Lb0 g0 G1.372 w132.904 -24.734 m132.536 -38.762 157.918 -93.006 166.111 -141.565 cS4.118 w132.666 -21.035 m132.853 -24.882 lS0.2 g0.1 G0.37 w-103.41 -8.58 m-91.109 -10.117 -79.656 0.475 -77.829 15.081 c-76.004 29.686 -84.496 42.773 -96.796 44.311 c-109.098 45.85 -120.55 35.256 -122.376 20.651 c-124.203 6.045 -115.711 -7.041 -103.41 -8.58 cb0 g1 J1.67 w-107.266 -10.782 m-107.05 -10.678 -106.633 -10.696 -106.195 -10.85 C-105.755 -11.002 -105.418 -11.245 -105.312 -11.462 cS1 g1 G0 J0.19 w-108.117 -6.751 m-116.458 -2.554 -121.671 9.278 -120.28 20.401 c-118.972 30.86 -111.864 40.323 -103.445 43.035 C-103.485 43.04 L-112.367 40.507 -119.891 31.499 -121.267 20.501 c-122.755 8.604 -117.109 -2.817 -108.102 -6.752 C-108.117 -6.751 Lb0 g0.1 G0.794 w-106.241 -10.753 m-106.796 -17.739 -121.24 -37.723 -133.624 -60.547 cS2.863 w-105.642 -8.077 m-106.241 -10.64 lS0.4 g0.3 G0.251 w200.469 40.609 m208.901 43.254 213.19 53.513 210.05 63.524 c206.909 73.535 197.528 79.506 189.097 76.862 c180.665 74.217 176.376 63.956 179.517 53.946 c182.656 43.936 192.037 37.964 200.469 40.609 cb0 g1 J1.19 w200.352 38.291 m200.199 38.37 199.903 38.367 199.586 38.267 C199.27 38.168 199.024 38.002 198.945 37.849 cS1 g1 G0 J0.135 w196.877 40.402 m190.225 40.652 183.342 46.781 180.949 54.405 c178.701 61.574 180.508 69.814 185.164 74.065 C185.136 74.057 L180.127 69.785 177.916 61.717 180.28 54.177 c182.838 46.023 189.881 40.289 196.885 40.406 C196.877 40.402 Lb0 g0.3 G0.419 w199.623 38.335 m200.303 29.775 182.232 1.498 183.671 -25.04 c185.108 -51.576 187.717 -69.776 192.32 -80.922 cS2.041 w199.254 40.254 m199.623 38.416 lS0.05 g0.05 G0.312 w36.3 -87.669 m50.676 -82.557 61.526 -64.428 61.526 -46.111 c61.526 -28.888 51.92 -12.105 38.82 -6.001 C38.887 -6.001 L52.774 -11.909 63.148 -28.039 63.148 -46.152 c63.148 -65.742 51.678 -83.114 36.277 -87.669 C36.3 -87.669 Lb0.2 g0.2 G0.251 w76.793 -124.597 m88.929 -122.266 99.84 -109.081 102.085 -94.415 c104.197 -80.625 98.563 -66.011 88.822 -59.517 C88.876 -59.526 L99.271 -65.957 105.599 -80.144 103.378 -94.646 c100.977 -110.331 89.664 -122.834 76.774 -124.594 C76.793 -124.597 Lb0.05 g0.05 G0.274 w139.637 -18.898 m152.054 -13.79 160.818 2.607 160.035 18.708 c159.299 33.847 150.136 48.188 138.361 52.993 C138.419 52.996 L150.878 48.397 160.686 34.663 161.46 18.742 c162.298 1.523 152.96 -14.237 139.618 -18.899 C139.637 -18.898 Lb0.249 w-5.052 92.071 m5.003 86.701 12.287 74.518 12.287 60.942 c12.287 45.27 3.111 31.373 -9.21 27.729 C-9.19 27.729 L2.31 31.817 10.991 46.32 10.991 60.975 c10.991 73.91 4.217 86.537 -5.284 92.074 C-5.052 92.071 Lb0.083 w167.221 -67.078 m171.233 -66.112 174.669 -61.546 175.189 -56.618 c175.68 -51.985 173.574 -47.196 170.223 -45.181 C170.242 -45.183 L173.809 -47.169 176.141 -51.802 175.624 -56.675 c175.069 -61.944 171.488 -66.291 167.216 -67.078 C167.221 -67.078 Lb0.2 g0.2 G0.135 w201.11 41.158 m206.971 44.314 210.449 52.849 209.238 60.746 c208.097 68.173 202.844 74.774 196.792 76.538 C196.821 76.543 L203.199 74.915 208.74 68.646 209.939 60.836 c211.236 52.39 207.44 44.14 201.102 41.157 C201.11 41.158 Lb0.12 g0.12 G0.19 w-102.836 -7.985 m-93.693 -7.84 -84.366 0.713 -81.251 11.551 c-78.322 21.74 -80.996 33.593 -87.498 39.829 C-87.459 39.815 L-80.471 33.54 -77.246 21.919 -80.325 11.202 c-83.657 -0.389 -93.212 -8.37 -102.849 -7.98 C-102.836 -7.985 Lb0 g0 G1.92 w214.4 -142.16 m-133.601 -142.16 L-133.601 92.441 L214.4 92.441 L214.4 -142.16 Ls%%Trailer_E end  
 end clear userdict /PMSAVE get restore


 userdict /PMSAVE save put initgraphics userdict begin


 /showpage {} def 0.0025 dup scale

100 100 div dup scale  100 100 div 1440 mul 300 div 20 mul dup  1313 mul exch 1685 mul
translate 20 20 scale 0 0 translate 2171 163 div 2464 196 div scale

 0 0 moveto 0 196 lineto 163 196 lineto 163 0 lineto closepath clip newpath 
%!PS-Adobe-2.0 EPSF-1.2%%Creator:Adobe Illustrator(TM) 1.2d4%%For:Judy%%Title:Balloon.EPSa%%CreationDate:11/15/87 2:03 PM%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0%%PageFonts:Courier92.000000 80.000000 translate
%%BoundingBox:-92 -80 71 116%%TemplateBox:288 -360 288 -360%%EndComments%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0% Copyright (C) 1987 Adobe Systems Incorporated.% All Rights Reserved.% Adobe Illustrator is a trademark of Adobe Systems Incorporated./Adobe_Illustrator_1.2d1 dup 100 dict def load begin/Version 0 def/Revision 0 def% definition operators/bdef {bind def} bind def/ldef {load def} bdef/xdef {exch def} bdef% graphic state operators/_K {3 index add neg dup 0 lt {pop 0} if 3 1 roll} bdef/_k /setcmybcolor where{/setcmybcolor get} {{1 sub 4 1 roll _K _K _K setrgbcolor pop} bind} ifelse def/g {/_b xdef /p {_b setgray} def} bdef/G {/_B xdef /P {_B setgray} def} bdef/k {/_b xdef /_y xdef /_m xdef /_c xdef /p {_c _m _y _b _k} def} bdef/K {/_B xdef /_Y xdef /_M xdef /_C xdef /P {_C _M _Y _B _k} def} bdef/d /setdash ldef/_i currentflat def/i {dup 0 eq {pop _i} if setflat} bdef/j /setlinejoin ldef/J /setlinecap ldef/M /setmiterlimit ldef/w /setlinewidth ldef% path construction operators/_R {.25 sub round .25 add} bdef/_r {transform _R exch _R exch itransform} bdef/c {_r curveto} bdef/C /c ldef/v {currentpoint 6 2 roll _r curveto} bdef/V /v ldef/y {_r 2 copy curveto} bdef/Y /y ldef/l {_r lineto} bdef/L /l ldef/m {_r moveto} bdef% error operators/_e [] def/_E {_e length 0 ne {gsave 0 g 0 G 0 i 0 J 0 j 1 w 10 M [] 0 d/Courier 20 0 0 1 z [0.966 0.259 -0.259 0.966_e 0 get _e 2 get add 2 div _e 1 get _e 3 get add 2 div] e _f t T grestore} if} bdef/_fill {{fill} stopped{/_e [pathbbox] def /_f (ERROR: can't fill, increase flatness) def n _E} if} bdef/_stroke {{stroke} stopped{/_e [pathbbox] def /_f (ERROR: can't stroke, increase flatness) def n _E} if} bdef% path painting operators/n /newpath ldef/N /n ldef/F {p _fill} bdef/f {closepath F} bdef/S {P _stroke} bdef/s {closepath S} bdef/B {gsave F grestore S} bdef/b {closepath B} bdef% text block construction and painting operators/_s /ashow ldef/_S {(?) exch {2 copy 0 exch put pop dup false charpath currentpoint _g setmatrix_stroke _G setmatrix moveto 3 copy pop rmoveto} forall pop pop pop n} bdef/_A {_a moveto _t exch 0 exch} bdef/_L {0 _l neg translate _G currentmatrix pop} bdef/_w {dup stringwidth exch 3 -1 roll length 1 sub _t mul add exch} bdef/_z [{0 0} bind {dup _w exch neg 2 div exch neg 2 div} bind {dup _w exch neg exch neg} bind] def/z {_z exch get /_a xdef /_t xdef /_l xdef exch findfont exch scalefont setfont} bdef/_g matrix def/_G matrix def/_D {_g currentmatrix pop gsave concat _G currentmatrix pop} bdef/e {_D p /t {_A _s _L} def} bdef/r {_D P /t {_A _S _L} def} bdef/a {_D /t {dup p _A _s P _A _S _L} def} bdef/o {_D /t {pop _L} def} bdef/T {grestore} bdef% group construction operators/u {} bdef/U {} bdef% font construction operators/Z {findfont begin currentdict dup length 1 add dict begin{1 index /FID ne {def} {pop pop} ifelse} forall /FontName exch def dup length 0 ne{/Encoding Encoding 256 array copy def 0 exch {dup type /nametype eq{Encoding 2 index 2 index put pop 1 add} {exch pop} ifelse} forall} if popcurrentdict dup end end /FontName get exch definefont pop} bdefend%%EndProcSet%%EndProlog%%BeginSetupAdobe_Illustrator_1.2d1 beginn%%EndSetup0 g0 G0 i1 J1 j1.4 w10 M[]0 d%%Note:-26.423 -58.097 m-10.537 -41.049 LS-10.537 -41.049 m-3.632 -57.9 lS1 g1 G0 J0.675 w-1.601 -62.299 m-1.601 -57.349 L-27.475 -57.349 L-27.475 -62.299 L-1.601 -62.299 Lb0 g0 G-13.975 -59.824 mS0.2 g0 j0.699 w-71.056 66.336 m-68.282 70.323 -65.971 74.156 -62.158 74.329 C-58.864 78.663 -53.402 82.303 -49.242 81.436 C-45.082 85.424 -38.318 90.191 -32.771 86.898 C-18.904 96.43 -2.437 95.217 8.829 87.244 C11.603 88.804 21.137 87.071 24.95 82.044 C27.377 83.604 36.401 79.442 38.828 74.761 C42.072 75.623 46.307 69.709 47.815 67.072 C43.089 78.709 34.716 88.232 23.121 97.562 C22.55 97.954 L20.831 99.231 18.06 101.204 13.874 102.958 C13.878 102.959 L9.704 106.922 4.675 108.5 -2.95 104.479 C-2.724 104.36 L-8.018 108.51 -12.103 107.553 Y-16.112 108.287 -22.031 104.159 V-21.808 104.282 L-29.492 108.124 -34.528 105.996 -38.573 102.007 C-38.394 102.246 L-41.505 100.864 -44.342 99.16 -46.899 97.173 C-47.608 96.669 L-58.693 86.976 -66.739 76.949 -71.056 66.336 Cf0.8 g39.346 11.958 m39.173 14.558 35.523 17.389 31.71 17.042 C30.501 19.801 24.83 21.852 21.657 21.375 C19.676 24.099 11.158 26.451 7.79 25.189 C-1.571 31.776 -21.851 29.696 -29.304 25.189 C-33.292 26.576 -39.705 25.016 -43.345 21.203 C-46.465 22.242 -52.012 20.509 -53.225 16.695 C-59.219 16.078 -61.126 11.746 V-54.74 3.006 -45.592 -6.544 -34.296 -16.063 c-31.559 -30.286 L-25.438 -33.17 6.125 -33.257 10.573 -30.421 C13.508 -16.301 l24.489 -6.595 32.288 1.416 39.346 11.958 Cf0.5 g0.349 w-71.122 66.474 m-77.484 49.626 -75.106 31.673 -60.979 11.655 C-59.072 15.987 -53.094 16.608 Y-51.881 20.422 -46.334 22.156 -43.214 21.115 C-39.573 24.929 -33.16 26.488 -29.173 25.102 C-21.719 29.609 -1.439 31.689 7.921 25.102 C11.289 26.365 19.808 24.012 21.788 21.288 C24.962 21.765 30.634 19.715 31.842 16.956 C35.656 17.302 39.329 14.488 39.503 11.888 C53.645 32.525 55.384 49.9 47.981 67.08 C46.594 69.506 41.776 75.629 39.003 74.761 C36.576 79.442 27.552 83.604 25.126 82.044 C21.312 87.071 11.778 88.804 9.005 87.244 C-2.262 95.217 -18.729 96.43 -32.596 86.898 C-38.143 90.191 -44.906 85.424 -49.067 81.436 C-53.227 82.303 -58.69 78.663 -61.983 74.329 C-65.796 74.156 -68.349 70.461 -71.122 66.474 Cb0 g0.699 w-21.751 104.59 m-33.718 110.574 -39.327 102.223 -44.711 94.743 c-51.37 85.495 -60.865 32.92 -23.172 -16.44 c-21.518 -32.38 lS-38.504 102.534 m-73.896 86.804 -74.135 30.036 -30.352 -16.44 c-28.391 -31.505 lS-2.701 104.79 m9.09 111.008 14.935 102.77 20.532 95.4 c27.453 86.287 39.277 33.739 3.006 -16.354 c1.375 -32.38 lS14.104 103.066 m49.936 88.043 52.476 30.87 10.034 -16.461 c8.028 -31.592 lS-5.668 -32.643 m-5.668 -16.467 l21.746 50.407 15.98 91.451 -2.474 104.669 C-7.822 108.861 -11.947 107.894 Y-15.997 108.635 -21.976 104.466 V-39.484 91.31 -43.529 49.52 -14.348 -16.483 c-14.348 -32.73 LS0.349 w10.78 -30.673 m1.682 -59.912 lS-24.072 -32.317 m-22.525 -59.65 lS0.699 w-47.812 96.9 m-84.163 65.116 -87.13 27.873 -34.54 -16.44 c-31.599 -30.63 L-25.417 -33.542 6.277 -33.494 10.77 -30.63 C13.922 -16.503 l66.456 29.923 60.86 66.506 23.462 97.682 cS1 J1.4 w-5.147 -41.31 m-16.002 -41.31 lS0.2 g0 J1 j0.699 w1.774 -60.161 m1.774 -75.461 L-22.975 -75.461 l-26.35 -73.324 l-26.35 -57.236 L-3.288 -57.236 L1.774 -60.161 Lb1 g-22.863 -75.461 m-22.863 -59.486 L-26.35 -57.349 L-26.35 -73.324 L-22.863 -75.461 Lb0 j-22.894 -75.452 m1.707 -75.452 l1.707 -59.869 l-6.61 -59.869 l-6.61 -63.896 l-13.964 -63.896 l-13.964 -59.869 l-22.894 -59.869 l-22.894 -75.452 lb0 g0.349 w-20.905 -59.869 m-20.905 -75.452 lS-20.905 -59.937 m-20.905 -75.408 lS-17.124 -59.937 m-17.124 -75.408 lS-13.341 -63.896 m-13.341 -75.408 lS-9.559 -63.939 m-9.559 -75.408 lS-5.777 -59.937 m-5.777 -75.408 lS-1.996 -59.937 m-1.996 -75.408 lS-22.831 -61.007 m-13.902 -61.007 lS-6.548 -61.007 m1.769 -61.007 lS-22.831 -63.283 m-13.902 -63.283 lS-6.548 -63.283 m1.769 -63.283 lS-22.831 -65.559 m-13.902 -65.559 l-6.548 -65.559 l1.769 -65.559 lS-22.831 -67.836 m-13.902 -67.836 l-6.548 -67.836 l1.769 -67.836 lS-22.831 -70.112 m-13.902 -70.112 l-6.548 -70.112 l1.769 -70.112 lS-22.831 -72.388 m-13.902 -72.388 l-6.548 -72.388 l1.769 -72.388 lS1 g-15.205 -63.896 m-14.505 -63.896 L-14.488 -65.027 -13.885 -66.777 -13.38 -67.587 c-9.623 -73.597 -20.117 -73.89 -16.518 -67.57 c-15.135 -65.14 -15.205 -63.896 Yb0 g1 J1 j1.4 w-22.598 -59.784 m-10.537 -41.049 L1.431 -59.813 lS0.699 w-2.696 -32.643 m-6.811 -46.825 lS-18.498 -32.556 m-14.339 -46.912 lSu1 g0 j0.349 w-8.999 -45.512 m-8.999 -37.108 L-11.8 -37.108 L-11.8 -45.512 L-8.999 -45.512 Lb-10.4 -41.31 mBU0 J-5.822 -63.896 m-5.122 -63.896 L-5.105 -65.027 -4.503 -66.777 -3.997 -67.587 c-0.241 -73.597 -10.735 -73.89 -7.136 -67.57 c-5.752 -65.14 -5.822 -63.896 Yb0 g1 j0.675 w-23.032 -75.517 m-26.35 -73.211 l-26.35 -57.349 L-22.807 -59.824 lS0 j-26.295 -57.349 m-3.345 -57.349 l1.549 -60.049 lS1 J1 j1.4 w-10.537 -41.049 m1.431 -59.813 lS0 J0 j0.349 w-31.384 -30.742 m-26.238 -57.513 lS3.467 -32.248 m-2.931 -57.324 lS1.769 -73.964 m-6.548 -73.964 l-13.902 -73.964 l-22.831 -73.964 LS-26.295 -71.692 mS-22.831 -73.964 m-26.295 -71.692 lS-22.831 -72.444 m-26.295 -70.174 lS-22.831 -70.251 m-26.295 -67.98 lS-22.831 -67.944 m-26.295 -65.674 lS-22.831 -65.582 m-26.295 -63.311 lS-22.831 -63.389 m-26.295 -61.117 lS-22.831 -61.026 m-26.295 -58.755 lS1 g0.699 w-12.288 -66.349 mB0.5 g-24.1 -65.336 mB%%Trailer_E end  
 end clear userdict /PMSAVE get restore 
E
RS

SS
statusdict begin /manualfeed false store end
0 SJT
1 #C
RS
end
