%!
% Frame Maker PostScript Prolog 1.00
%

/doc_saveobject save def

/FrameDict 100 dict def

/settransfer { pop } def

FrameDict /ugh false put	% flag bug not found
	
/setmakerpattern
        {FrameDict begin fillprocs exch get exec end
        }
def


FrameDict begin
/fillprocs
	[{0.00 setgray}
	 {0.10 setgray}
	 {0.30 setgray}
         {0.50 setgray} 
	 {0.90 setgray}
	 {0.93 setgray}
         {0.97 setgray} 
         {1.00 setgray} 

         {<0F1E3C78F0E1C387> 8 1 dpi 16 div setpattern} 
         {<0F87C3E1F0783C1E> 8 1 dpi 16 div setpattern} 
         {<CCCCCCCCCCCCCCCC> 8 1 dpi 16 div setpattern} 
         {<FFFF0000FFFF0000> 8 1 dpi 16 div setpattern} 
         {<8142241818244281> 8 1 dpi 16 div setpattern} 
         {<03060C183060C081> 8 1 dpi 16 div setpattern} 
         {<8040201008040201> 8 1 dpi 16 div setpattern} 
	 {}
	]
def

/bitison
        {/$ybit exch def
         /$xbit exch def

         $bstring
         $ybit $bwidth mul
         $xbit 8 idiv
         add get
         1 7 $xbit 8 mod sub bitshift
         and 0 ne
        } def

/$invertscreen 0 def

/setpattern {
         FrameDict begin
         /$freq    exch def
         /$bwidth  exch def
         /$bpside  exch def
         /$bstring exch def
 
         /$onbits 0 def  /$offbits 0 def
	 $invertscreen 0 eq 
		{/$on 1 def /$off 0 def}
		{/$on 0 def /$off 1 def}
	 ifelse
 
         $freq 0 {/$y exch def
                 /$x exch def
                 /$xindex $x 1 add 2 div $bpside mul cvi def
                 /$yindex $y 1 add 2 div $bpside mul cvi def
                 $bstring $yindex $bwidth mul $xindex 8 idiv add get
                 1 7 $xindex 8 mod sub bitshift and 0 ne
                 {/$onbits  $onbits  1 add def $on }
                 {/$offbits $offbits 1 add def $off}
                 ifelse
                }
                setscreen
         {} settransfer
         $offbits $offbits $onbits add div setgray
         end
        } def
 
end

/invertpattern
        {{1 exch sub} currenttransfer concatprocs settransfer
        }
def

/invertscreen
	{FrameDict begin /$invertscreen 1 def end
	}
def

/revertscreen
	{FrameDict begin /$invertscreen 0 def end
	}
def

/setrect {
         FrameDict begin
         /$h exch def
         /$w exch def
         /$y exch def
         /$x exch def
 
         newpath
         $x             $y        moveto
         $w $x add      $y        lineto
         $w $x add      $h $y add lineto
         $x             $h $y add lineto
         closepath
         end
        } def
 
/concatprocs {
         FrameDict begin
         /$proc2 exch cvlit def
         /$proc1 exch cvlit def
        
         /$newproc $proc1 length $proc2 length add
            array def
         $newproc 0 $proc1 putinterval
         $newproc $proc1 length $proc2 putinterval
         $newproc cvx
         end
        } def

/dmatrix matrix def
/dpi     72 0 dmatrix defaultmatrix dtransform
         dup mul exch   dup mul add   sqrt
def

/arrowstem {
         FrameDict begin
         /$t  exch def
         /$dy exch def
         /$dx exch def
         /$y  exch def
         /$x  exch def
        
         /$dl $dx $dx mul $dy $dy mul add sqrt def
	 $dl 0 le {/$dl 1 def} if
         /$cos $dx $dl div def
         /$sin $dy $dl div def
         /$r [$cos $sin $sin neg $cos 0.0 0.0] def
        
         $x $y translate
         $r concat
         $t setlinewidth
        
         newpath
         0 0 moveto
         $dl $t 1.5 mul sub 0 rlineto
         end
        } def

/arrowhead {
         FrameDict begin
         /$t  exch def
         /$dy exch def
         /$dx exch def
         /$y  exch def
         /$x  exch def
 
         /$dl $dx $dx mul $dy $dy mul add sqrt def
	 $dl 0 le {/$dl 1 def} if
         /$cos $dx $dl div def
         /$sin $dy $dl div def
         /$r [$cos $sin $sin neg $cos 0.0 0.0] def
 
         /$t2 $t 2.5 mul 3.5 max def
 
         $x $dx add  $y $dy add translate
         $r concat
         $t 0.67 mul setlinewidth
 
         newpath
         $t 0.67 mul neg  0 translate
         0 0 moveto
         $t2 3 sqrt mul 2 div neg   $t2 2 div     moveto
         0 0 lineto
         $t2 3 sqrt mul 2 div neg   $t2 2 div neg lineto
         end
        } def

/max    {2 copy lt {exch} if pop} def
/min    {2 copy gt {exch} if pop} def
FrameDict begin	% these subroutines are strictly used internally

/gn {	% get a number in a funny encoding scheme
        0	% result on stack
        {       46 mul	% shift old digits
                cf read pop	% get next character
                32 sub	% zero is the space character
                dup 46 lt {exit} if	% quit if we're the last digit
                46 sub add	% add in this digit and loop around for next
                } loop
        add	% result on stack
        } def
          
/cfs {	% create a string of length "sl" filled with "val"s
        /str sl string def	% create string as "str"
        0 1 sl 1 sub {str exch val put} for	% fill array
        str def	% define real array name, too
        } def
          
          
/ic [	% "case" stmt list of procedures that the image commands should call
        0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
        0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
        0
        {0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
        {10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
        {19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
        {13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
        {4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
        {13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
        {7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
        {0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
        {10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
        ] def
 
/ms {	% make all the strings
        /sl exch def	% remember length of currently existing strings
        /val 255 def	% that's white
        /ws cfs	% make "ws" a string filled with white
        /im cfs	% and "im" is a complete image scanline
        /val 0 def	% that's black
        /bs cfs	% make "bs" a string filled with black
        /cs cfs	% here's where we'll put complete command lines
        } def

400 ms	% make strings that will be plenty long for most applications
 
/ip {	% image procedure; reads and executes commands to make scanlines
        is	% leave image string and...
        0	% ...image position on stack all through this procedure
	cf cs readline	pop	% get a string of commands
	currentfile cs readline	 pop	% get a string of commands
        { 
		ic exch get
		exec	% execute next command
                add	% all commands leave a length on the stack; update pos
	} forall	% step through all commands
        pop	% get rid of image position pointer
       	% image string left on stack, so it's returned to image primitive
        }  def
 
/wh {	% fill a number of bytes with "white"
	pause
        /len exch def	% number of bytes to fill
        /pos exch def	% position to put them at
        ws 0 len getinterval im pos len getinterval copy pop
        pos len	% remember where we got to
        } def
 
/bl {	% fill a number of bytes with "black"
	pause
        /len exch def	% number of bytes to fill
        /pos exch def	% position to put them at
        bs 0 len getinterval im pos len getinterval copy pop
        pos len	% remember where we got to
        } def

/s1 1 string def
 
/fl {	% fill a number of bytes with a specific hex value
	pause
        /len exch def	% number of bytes to fill
        /pos exch def	% position to put them at
        /val cf s1 readhexstring pop 0 get def
        pos 1 pos len add 1 sub {im exch val put} for
        pos len	% remember where we got to
        } def
 
/hx {	% read hex bytes directly; on entry, stack has <str> <pos> <len>
        3 copy getinterval	% stack has <str> <pos> <len> <substr>
        cf exch readhexstring pop pop	% stack back to <str> <pos> <len>
        } def
end	% back out to visible routines
 

/beginbitmap {		% enter with width, height, scale and translation on stack
       	FrameDict begin
       	translate scale /h exch def /w exch def
       	/lb w 7 add 8 idiv def		% so "lb" has width in bytes
       	sl lb lt {lb ms} if		% maybe make bigger strings
       	/is im 0 lb getinterval def	% image substring
       	ws 0 lb getinterval is copy pop	% whiten it
       	/cf currentfile def		% evaluate "currentfile" only once
       	w h 1 [w 0 0 h neg 0 h]		% top to bottom
       	{ip} image 			% zap!
       	end
	} def

/endbitmap {
        } def

/startMakerJob {
        initgraphics
        2 setlinecap
        {} settransfer
        } def
startMakerJob

1.00 1.00 scale	
0 792 translate
/#copies 1 def
%%EndProlog
%%Page: 10 10
/page_saveobject save	 def	
initclip newpath		
% Copy Master Page Begin
gsave                 
0 0  translate       
% Polyline Begin n = 2, t = 0	
gsave			
newpath		
36.00 -46.00 moveto	
576.00 -46.00 lineto
gsave 
0 setmakerpattern
0.50 setlinewidth 
stroke    
grestore  
grestore		
% Polyline End	

% Rectangle Begin 
gsave   
511 -40 65 24 setrect
gsave 
4 setmakerpattern
eofill    
grestore  
grestore
% Rectangle End 

% Rectangle Begin 
gsave   
508 -37 65 24 setrect
gsave 
7 setmakerpattern
eofill    
grestore  
gsave 
0 setmakerpattern
0.50 setlinewidth 
stroke    
grestore  
grestore
% Rectangle End 

% Textline Begin	
gsave				
517 -30 moveto			
/Times-Roman findfont 18 scalefont setfont
(Frame) show
grestore			
% Textline End	


% Rectangle Begin 
gsave   
56 -74 8 8 setrect
gsave 
3 setmakerpattern
eofill    
grestore  
gsave 
0 setmakerpattern
0.50 setlinewidth 
stroke    
grestore  
grestore
% Rectangle End 

grestore              
% Copy Master Page End
gsave 
0 0 translate 
36 -774 moveto
/Times-Italic findfont 12 scalefont setfont
(Frame Maker 1.0 Demonstration Document) show
536.34 -774 moveto
(Page 10) show
grestore 
% Textrect Begin 
gsave				
56 -174 translate		
newpath 
0 setgray			
58.25 -7 moveto	
/Times-Roman findfont 10 scalefont setfont
(Times 10) show
46.44 -23 moveto	
/Times-Bold findfont 10 scalefont setfont
(Times 10 Bold) show
47.00 -37 moveto	
/Times-Italic findfont 10 scalefont setfont
(Times 10 Italic) show
35.19 -53 moveto	
/Times-BoldItalic findfont 10 scalefont setfont
(Times 10 Bold Italic) show
54.50 -69 moveto	
/Times-Roman findfont 12 scalefont setfont
(Times 12) show
40.33 -85 moveto	
/Times-Bold findfont 12 scalefont setfont
(Times 12 Bold) show
41.00 -101 moveto	
/Times-Italic findfont 12 scalefont setfont
(Times 12 Italic) show
50.75 -118 moveto	
/Times-Roman findfont 14 scalefont setfont
(Times 14 ) show
34.22 -137 moveto	
/Times-Bold findfont 14 scalefont setfont
(Times 14 Bold) show
18.47 -155 moveto	
/Times-BoldItalic findfont 14 scalefont setfont
(Times 14 Bold Italic) show
43.25 -175 moveto	
/Times-Roman findfont 18 scalefont setfont
(Times 18) show
21.99 -198 moveto	
/Times-Bold findfont 18 scalefont setfont
(Times 18 Bold) show
23.00 -219 moveto	
/Times-Italic findfont 18 scalefont setfont
(Times 18 Italic) show
32.00 -245 moveto	
/Times-Roman findfont 24 scalefont setfont
(Times 24) show
-56 174 translate               
grestore
% Textrect End	

% Textrect Begin 
gsave				
218 -174 translate		
newpath 
0 setgray			
58.50 -7 moveto	
/Courier findfont 10 scalefont setfont
(Courier 10) show
43.50 -23 moveto	
/Courier-Bold findfont 10 scalefont setfont
(Courier 10 Bold) show
37.50 -39 moveto	
/Courier-Oblique findfont 10 scalefont setfont
(Courier 10 Italic) show
22.50 -55 moveto	
/Courier-BoldOblique findfont 10 scalefont setfont
(Courier 10 Bold Italic) show
52.50 -72 moveto	
/Courier findfont 12 scalefont setfont
(Courier 12) show
34.50 -91 moveto	
/Courier-Bold findfont 12 scalefont setfont
(Courier 12 Bold) show
27.30 -108 moveto	
/Courier-Oblique findfont 12 scalefont setfont
(Courier 12 Italic) show
9.30 -126 moveto	
/Courier-BoldOblique findfont 12 scalefont setfont
(Courier 12 Bold Italic) show
88.50 -143 moveto	
() show
64.75 -160 moveto	
/Symbol findfont 10 scalefont setfont
(Symbol 10) show
59.99 -177 moveto	
currentfont 1.20 scalefont setfont
(Symbol 12) show
55.24 -196 moveto	
currentfont 1.17 scalefont setfont
(Symbol 14 ) show
45.74 -219 moveto	
currentfont 1.29 scalefont setfont
(Symbol 18) show
31.49 -247 moveto	
currentfont 1.33 scalefont setfont
(Symbol 24) show
18.00 -263 moveto	
/Times-Bold findfont 12 scalefont setfont
() show
-218 174 translate               
grestore
% Textrect End	

% Textrect Begin 
gsave				
398 -174 translate		
newpath 
0 setgray			
49.49 -8 moveto	
/Helvetica findfont 10 scalefont setfont
(Helvetica 10) show
35.59 -25 moveto	
/Helvetica-Bold findfont 10 scalefont setfont
(Helvetica 10 Bold) show
37.82 -41 moveto	
/Helvetica-Oblique findfont 10 scalefont setfont
(Helvetica 10 Italic) show
22.81 -57 moveto	
/Helvetica-BoldOblique findfont 10 scalefont setfont
(Helvetica 10 Bold Italic) show
43.99 -74 moveto	
/Helvetica findfont 12 scalefont setfont
(Helvetica 12) show
27.31 -92 moveto	
/Helvetica-Bold findfont 12 scalefont setfont
(Helvetica 12 Bold) show
29.98 -110 moveto	
/Helvetica-Oblique findfont 12 scalefont setfont
(Helvetica 12 Italic) show
38.49 -130 moveto	
/Helvetica findfont 14 scalefont setfont
(Helvetica 14) show
19.03 -150 moveto	
/Helvetica-Bold findfont 14 scalefont setfont
(Helvetica 14 Bold) show
27.48 -173 moveto	
/Helvetica findfont 18 scalefont setfont
(Helvetica 18) show
2.47 -197 moveto	
/Helvetica-Bold findfont 18 scalefont setfont
(Helvetica 18 Bold) show
6.48 -221 moveto	
/Helvetica-Oblique findfont 18 scalefont setfont
(Helvetica 18 Italic) show
10.98 -249 moveto	
/Helvetica findfont 24 scalefont setfont
(Helvetica 24) show
-398 174 translate               
grestore
% Textrect End	

% Textrect Begin 
gsave				
36 -476 translate		
newpath 
0 setgray			
0.00 -11 moveto	
/Times-Bold findfont 14 scalefont setfont
(Let\325s change the word \322powerful\323 to a larger font:) show
18.00 -32 moveto	
/Times-Roman findfont 14 scalefont setfont
(\245) show
27.00 -32 moveto	
(Move the mouse pointer to the space left of \322powerful\323) show
18.00 -48 moveto	
(\245) show
27.00 -48 moveto	
(Press and hold down the MIDDLE mouse button.) show
18.00 -64 moveto	
(\245) show
27.00 -64 moveto	
(Highlight \322powerful\323 by sliding the mouse to the right with the button held down.) show
18.00 -80 moveto	
(\245) show
27.00 -80 moveto	
(Release the button when \322powerful\323 is highlighted.) show
18.00 -96 moveto	
(\245) show
27.00 -96 moveto	
(Use the Format Menu to select the Fonts command , ) show
18.00 -112 moveto	
() show
27.00 -112 moveto	
(- or -) show
18.00 -128 moveto	
() show
27.00 -128 moveto	
(Press the ESCAPE key followed by \322ff.\323  This is a shortcut to bring up the Fonts dialog ) show
27.00 -144 moveto	
(\(the general rule is that \322Escape\323 followed by first letter of the menu title followed by ) show
27.00 -161 moveto	
(the first letter of the command name is a shortcut to the command. So to do ) show
/Times-Bold findfont 14 scalefont setfont
(F) show
/Times-Roman findfont 14 scalefont setfont
(ormat ) show
27.00 -178 moveto	
/Times-Bold findfont 14 scalefont setfont
(F) show
/Times-Roman findfont 14 scalefont setfont
(onts you hit Esc-ff.\)) show
18.00 -194 moveto	
() show
27.00 -194 moveto	
(- or -) show
18.00 -210 moveto	
() show
27.00 -210 moveto	
(Press the RIGHT mouse button to bring up a pop-up menu. Hold down the button until ) show
27.00 -226 moveto	
(you highlight \322Fonts...\323 Then release the button.) show
18.00 -242 moveto	
() show
27.00 -242 moveto	
/Times-Italic findfont 14 scalefont setfont
(With the LEFT mouse button:) show
18.00 -258 moveto	
/Times-Roman findfont 14 scalefont setfont
(\245) show
27.00 -258 moveto	
(Click several times in the box next to \322Point\323 until \32224\323 appears.) show
18.00 -274 moveto	
(\245) show
27.00 -274 moveto	
(Click in the OK button.) show
-36 476 translate               
grestore
% Textrect End	

% Polyline Begin n = 2, t = 0	
gsave			
newpath		
36.00 -464.00 moveto	
576.00 -464.00 lineto
gsave 
0 setmakerpattern
0.50 setlinewidth 
stroke    
grestore  
grestore		
% Polyline End	

% Textline Begin	
gsave				
36 -459 moveto			
/Times-Roman findfont 18 scalefont setfont
(Instructions) show
grestore			
% Textline End	

% Textline Begin	
gsave				
477 -459 moveto			
/Helvetica-Oblique findfont 14 scalefont setfont
1.63 0 32 (changing a font) widthshow
grestore			
% Textline End	

% Rectangle Begin 
gsave   
36 -467 88 3 setrect
gsave 
0 setmakerpattern
eofill    
grestore  
gsave 
0 setmakerpattern
0.50 setlinewidth 
stroke    
grestore  
grestore
% Rectangle End 

% Textrect Begin 
gsave				
72 -63 translate		
newpath 
0 setgray			
0.00 -11 moveto	
/Times-Bold findfont 14 scalefont setfont
(Frame Maker supports all the LaserWriter type families shown below: ) show
36.00 -27 moveto	
(Courier, Times, Helvetica, and Symbol. ) show
0.00 -47 moveto	
(If you have a LaserWriter Plus, you can also use: Avant Garde, Bookman, ) show
36.00 -63 moveto	
(Century Schoolbook, Helvetica Narrow, Palatino, Zapf Chancery, ) show
36.00 -79 moveto	
(and Zapf Dingbats.) show
-72 63 translate               
grestore
% Textrect End	

% Textline Begin	
gsave				
36 -40 moveto			
/Times-Roman findfont 24 scalefont setfont
(Fonts) show
grestore			
% Textline End	

% Rectangle Begin 
gsave   
36 -50 60 4 setrect
gsave 
0 setmakerpattern
eofill    
grestore  
gsave 
0 setmakerpattern
0.50 setlinewidth 
stroke    
grestore  
grestore
% Rectangle End 

% Polyline Begin n = 2, t = 0	
gsave			
newpath		
36.00 -149.00 moveto	
576.00 -149.00 lineto
gsave 
0 setmakerpattern
0.50 setlinewidth 
stroke    
grestore  
grestore		
% Polyline End	

% Polyline Begin n = 2, t = 0	
gsave			
newpath		
36.00 -151.00 moveto	
576.00 -151.00 lineto
gsave 
0 setmakerpattern
0.50 setlinewidth 
stroke    
grestore  
grestore		
% Polyline End	


showpage
page_saveobject restore
% Page End

