head     1.2;
branch   ;
access   ;
symbols  ;
locks    bin:1.2;
comment  @ * @;


1.2
date     92.06.05.06.34.44;  author bin;  state Exp;
branches ;
next     1.1;

1.1
date     91.02.07.19.50.28;  author bin;  state Exp;
branches ;
next     ;


desc
@initial version provided by steve ness
@


1.2
log
@*** empty log message ***
@
text
@/*
 * libm/pow.c
 * Raise x to the power y.
 */

#include <math.h>

#if	EMU87
#include "emumath.h"
#endif

double
pow(x, y)
double x, y;
{
	double r;
	register unsigned s, i, e;

	s = 0;
	i = 0;
	if (x == 0.0) {
		if (y <= 0.0)
			errno = EDOM;
		return 0.0;
	}
	if ((r = modf(y, &r)) < 0.0)
		r += 1.0;
	if (x < 0.0) {
		if (r != 0.0) {
			errno = EDOM;
			return 0.0;
		}
		x = -x;
		if (((int) y) & 1)
			s = 1;
	}
	if (y < 0.0) {
		y = -y;
		i = 1;
	}
	if (r!=0.0 || y>16384.0)
		r = _two(y*log10(x)*LOG10B2);
	else {
		r = 1.0;
		for (e=y; e; e>>=1) {
			if (e&01)
				r *= x;
			x *= x;
		}
	}
	if (i)
		r = 1/r;
	return s ? -r : r;
}

/* end of libm/pow.c */
@


1.1
log
@Initial revision
@
text
@d2 1
d5 1
d8 4
d24 1
a24 1
		return (0.0);
d26 2
a27 1
	r = modf(y, &r);
d31 1
a31 1
			return (0.0);
d53 1
a53 3
	if (s)
		r = -r;
	return (r);
d55 2
@
