head     1.2;
access   ;
symbols  ;
locks    bin:1.2;
comment  @ * @;


1.2
date     91.02.06.18.49.40;  author bin;  state Exp;
branches ;
next	1.1;

1.1
date     91.02.06.18.49.23;  author bin;  state Exp;
branches ;
next	;


desc
@steve 2/6/91
Initial MWC RCS revision.
@


1.2
log
@steve 2/6/91
Initialize seed to 1 (rather than implicitly to 0 as before)
for compatibility with ANSI stdlib srand() specification.
@
text
@/*
 * Random number generator, of period 2 ^ 32. Returns random numbers (ints) in
 *	the interval [0, 2^15-1].
 * The algorithm used is a linear congruential method, where the internal
 *	computation is done in unsigned longs (mod 2^32). The numbers from
 *	this sequence are right shifted 17 bits so that the most random 15
 *	bits are returned.
 * All this is from Knuth Vol 2, 2nd ed., ch 3. The choice of multiplier
 *	is made from the table in 3.3.4.E,  pp102.
 */

#define	A	1664525L		/* Multiplicative generator */
#define	C	907633387L		/* Additive generator */


static long	seed	= 1;

srand(n)
unsigned int n;
{
	seed = n;
}

rand()
{
	seed = seed * A + C;
	return ((seed >> 17) & 077777);
}
@


1.1
log
@Initial revision
@
text
@d16 1
a16 1
static long	seed;
@
