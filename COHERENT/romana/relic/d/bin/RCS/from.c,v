head     1.3;
access   ;
symbols  ;
locks    bin:1.3;
comment  @ * @;


1.3
date     91.03.18.20.00.38;  author bin;  state Exp;
branches ;
next	1.2;

1.2
date     90.06.19.17.03.06;  author bin;  state Exp;
branches ;
next	1.1;

1.1
date     90.06.19.17.02.37;  author bin;  state Exp;
branches ;
next	;


desc
@steve 6/19/90
Initial MWC RCS revision.
@


1.3
log
@*** empty log message ***
@
text
@/*
 * from - generate a list of numbers
 * usage - from number to number [ by number ]
 */
#include <stdio.h>

#define sign(x)	(x<0?-1:1)	/* returns sign of number */

char usage[] = "Usage: from number to number [by number]\n";
char signmsg[] = "Increment has wrong sign\n";

main(argc, argv)
char *argv[];
{
	int i;
	int start, end, incr;

	switch ( argc ) {

	case 4:
		incr = 1;
		break;

	case 6:
		if ( strcmp(argv[4], "by") )
			error(usage);
		else
			if ( (incr = numeric(argv[5])) == 0 )
				error("Increment must be non-zero\n");
		break;

	default:
		error(usage);
		break;
	}
	if ( strcmp(argv[2], "to") )
		error(usage);
	start = numeric(argv[1]);
	end = numeric(argv[3]);
	if ( sign(end-start) * sign(incr) < 0 )
		error(signmsg);

	if ( incr > 0 )
		for ( i = start; i <= end; i += incr )
			printf("%d\n", i);
	else
		for ( i = start; i >= end; i += incr )
			printf("%d\n", i);
	exit(0);
}

/*
 * Return the value of a numeric arg;
 * otherwise, call usage().
 */
numeric(s)
register char *s;
{
	register int n;

	n = atoi(s);
	if ( *s == '-' )
		s++;
	for ( ; *s; s++)
		if (*s<'0' || *s>'9')
			error(usage);
	return(n);
}

error(x)
{
	fprintf(stderr, "%r", &x);
	exit(1);
}
@


1.2
log
@steve 6/19/90
Allow "from 2 to 2 by -1" to work instead of giving "increment has
wrong sign" error.  Trivial changes to error and usage messages.
@
text
@d3 1
d5 1
a6 2
#include <stdio.h>

a7 1
#define	USAGE	"Usage: from number to number [ by number ]"
d9 3
d26 1
a26 1
			usage();
d29 1
a29 1
				error("increment must be non-zero");
d33 1
a33 1
		usage();
d37 1
a37 1
		usage();
d40 2
a41 2
	if (start != end && sign(end-start) * sign(incr) < 0)
		error("increment has wrong sign");
d66 1
a66 1
			usage();
d70 1
a70 1
error(x) char *x;
d72 1
a72 1
	fprintf(stderr, "from: %r\n", &x);
a74 6

usage()
{
	fprintf(stderr, "%s\n", USAGE);
	exit(1);
}
@


1.1
log
@Initial revision
@
text
@a2 1
 * usage - from number to number [ by number ]
d4 1
d8 1
a9 3
char usage[] = "Usage: from number to number [by number]\n";
char signmsg[] = "Increment has wrong sign\n";

d24 1
a24 1
			error(usage);
d27 1
a27 1
				error("Increment must be non-zero\n");
d31 1
a31 1
		error(usage);
d35 1
a35 1
		error(usage);
d38 2
a39 2
	if ( sign(end-start) * sign(incr) < 0 )
		error(signmsg);
d64 1
a64 1
			error(usage);
d68 1
a68 1
error(x)
d70 1
a70 1
	fprintf(stderr, "%r", &x);
d73 6
@
