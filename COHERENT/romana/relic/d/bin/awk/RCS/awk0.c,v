head     1.4;
branch   ;
access   ;
symbols  ;
locks    ;
comment  @ * @;


1.4
date     92.02.25.12.44.36;  author bin;  state Exp;
branches ;
next     1.3;

1.3
date     91.03.26.18.18.16;  author bin;  state Exp;
branches ;
next     1.2;

1.2
date     91.02.21.19.18.35;  author bin;  state Exp;
branches ;
next     1.1;

1.1
date     91.02.04.15.40.50;  author bin;  state Exp;
branches ;
next     ;


desc
@init ver. prov by stevesf.
@


1.4
log
@cosmetic changes by stevesf
@
text
@/*
 * Definitions of externals.
 */

#include "awk.h"
#include "y.tab.h"

CHAR	*parg;			/* Program argument pointer */
FILE	*pfp;			/* Program file pointer */
int	lexre;			/* On when yylex reading a regular expression */
CHAR	wordbuf[NWORD];		/* yylex string and identifer buffer */
NODE	*codep;			/* Head of interpreted code tree */
int	beginflag;		/* On before files read */
int	endflag;		/* On after files read */
int	runflag;		/* On when running (vs. compiling) */
int	yflag;			/* `-y' option - dual case pattern matching */
int	nlskip;			/* Skip newlines until next token */
int	exitflag;		/* On if exit done */
int	lineno;			/* Current input line # */
int	whitesw = 1;		/* 1 if whitespace field seperator else 0 */
CHAR	*inline;		/* Input line */
jmp_buf	nextenv;		/* Environment for next */
jmp_buf	fwenv[NNEST];		/* For/while environment for break/continue */
int	fwlevel = -1;		/* For/while nesting level */
int	brlevel;		/* Brace nesting level */
int	outflag;		/* '>' is output vs. relational (kludge) */
TERM	*symtab[NHASH];		/* Heads of symbol table hash chains */
NODE	*tempnodes;		/* List of temporary nodes during running */
CHAR	SNULL[] = "";		/* Awk's null STRING */
OFILE	files[NOFILE];		/* Open files -- names to prevent re-opening */
CHAR	inbuf[BUFSIZ];		/* Buffer for all (prog, data) input */
CHAR	outbuf[BUFSIZ];		/* Buffer for all output */

/*
 * Built-in variable values.
 */
NODE	*FILENAMEp;		/* Current input filename */
NODE	*NRp;			/* Current input record number */
NODE	*NFp;			/* Number of fields in this record */
NODE	*ORSp;			/* Output record separator */
NODE	*OFSp;			/* Output field separator */
NODE	*RSp;			/* Input record separator */
NODE	*FSp;			/* Input field separator */
NODE	*OFMTp;			/* Output format string (a la printf) */

/*
 * Built-in variables and constants.
 */
TERM	xzero, xone;		/* Constants 0 and 1 */
NODE	xfield0;
@


1.3
log
@prov by cef... modified for line continuation
@
text
@d8 4
a11 4
CHAR	*parg;		/* Program argument pointer */
FILE	*pfp;		/* Program file pointer */
int	lexre;		/* On when yylex reading a regular expression */
CHAR	wordbuf[NWORD];	/* yylex string and identifer buffer */
a26 1

d47 1
a47 2
 * Built-in variables and
 * constants.
d49 1
a49 3

/* Constants 0 and 1 */
TERM	xzero, xone;
@


1.2
log
@for v311 prov by stevesf
@
text
@d8 1
a8 1
char	*parg;		/* Program argument pointer */
d11 1
a11 1
char	wordbuf[NWORD];	/* yylex string and identifer buffer */
d21 1
a21 1
char	*inline;		/* Input line */
d30 1
a30 1
char	SNULL[] = "";		/* Awk's null STRING */
d32 2
a33 2
char	inbuf[BUFSIZ];		/* Buffer for all (prog, data) input */
char	outbuf[BUFSIZ];		/* Buffer for all output */
@


1.1
log
@Initial revision
@
text
@d20 1
@
