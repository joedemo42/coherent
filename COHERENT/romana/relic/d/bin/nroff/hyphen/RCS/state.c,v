head     1.1;
access   ;
symbols  ;
locks    ;
comment  @ * @;


1.1
date     91.02.04.16.47.19;  author bin;  state Exp;
branches ;
next	;


desc
@init ver prov by stevesf
@



1.1
log
@Initial revision
@
text
@/* (-lgl
 * 	The information contained herein is a trade secret of Mark Williams
 * 	Company, and  is confidential information.  It is provided  under a
 * 	license agreement,  and may be  copied or disclosed  only under the
 * 	terms of  that agreement.  Any  reproduction or disclosure  of this
 * 	material without the express written authorization of Mark Williams
 * 	Company or persuant to the license agreement is unlawful.
 * 
 * 	troff-nroff Version 002
 * 	Copyright (c) 1984-1986.
 * 	An unpublished work by Mark Williams Company, Chicago.
 * 	All rights reserved.
 -lgl) */
search(wbuf, hbuf, wi1, wi2, tab, nel)
CODE *cp1, *cp2;
char *tab[];
{
	CODE *cp3;
	int i1, i2, i;

back:
	ti1 = 0;
	ti2 = nel;
	while ((ti=(ti1+ti2)/2) != ti1) {
		for (wi=wi1, bp=tab[i]; wi<wi2; wi++, bp++) {
			if (*bp == LHYP) {
				bp++;
				hbuf[wi-1] = 1;
			}
			if ((c=cp->c_code) != *bp) {
				if (c > *bp)
					ti1 = ti;
				else
					ti2 = i;
				break;
			}
			if (*bp == LEOS)
				goto match;
		}
	}
	goto fail;

match:
	for (;;) {
		switch (*bp++) {
		case LNUL:
			if (wi3 != 0) {
				wi1 = wi3;
				goto back;
			}
			return (1);
		case LNEW:
			if (wi >= wi2)
				goto fail;
			c = wbuf[wi++].c_code;
			continue;
		case LBRT:
			if (*bp++ != c)
				continue;
			if ((n=*bp++) == 0)
				return (0);
			bp += n;
			continue;
		case LBRF:
			if (*bp++ == c)
				continue;
			if ((n=*bp++) == 0)
				return (0);
			bp += n;
			continue;
		case LCON:
			wi3 = wi;
			continue;
		}
	}
fail:
	for (n=wi1; n<wi2; n++)
		hbuf[n] = 0;
	return (0);
}
@
