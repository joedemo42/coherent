head     1.4;
branch   ;
access   ;
symbols  ;
locks    bin:1.4;
comment  @ * @;


1.4
date     93.04.05.08.35.20;  author bin;  state Exp;
branches ;
next     1.3;

1.3
date     91.05.29.15.18.52;  author bin;  state Exp;
branches ;
next     1.2;

1.2
date     91.04.16.18.00.39;  author bin;  state Exp;
branches ;
next     1.1;

1.1
date     91.03.19.20.03.59;  author bin;  state Exp;
branches ;
next     ;


desc
@init ver prov by stevesf for ver 311
@


1.4
log
@Steve: various changes, including fw tables
@
text
@/*
 * fonts.h
 * Nroff/Troff.
 * Font handling header.
 */

#define	NFNAMES	100			/* max number of font names	*/
#define	NWIDTH	256			/* number of width entries	*/

/*
 * The font table contains the user name and font index of each font.
 */
typedef struct {
	char	f_name[2];
	int	f_font;
} FTB;

/*
 * A font width table defines the widths of characters in a font.
 * The entries in f_width * f_psz * f_num / f_den should
 * be the widths in troff units; e.g., if the f_width table values are
 * in 300ths of an inch, then f_psz * f_num / f_den should be 12/5.
 * fwtable.c knows how to write one of these for PCL,
 * fwtableps.c knows how to write one of these for PostScript, and
 * fonts.c/load_font knows how to read one; they had better all agree.
 * fonts.c also defines the three default troff FWTABs.
 * Many of the members could be chars.
 */
typedef struct	fwtab {
	char		*f_descr;	/* descriptive name for font	*/
	char		*f_PSname;	/* PostScript font name		*/
	short		f_flags;	/* flag bits			*/
	short		f_fonttype;	/* font type			*/
	short		f_orientation;	/* portrait=0, landscape=1	*/
	short		f_spacing;	/* fixed=0, variable=1		*/
	short		f_symset;	/* symbol set			*/
	short		f_pitch;	/* pitch			*/
	short		f_psz;		/* point size (internal units)	*/
	short		f_style;	/* upright=0, italic=1		*/
	short		f_weight;	/* stroke weight		*/
	short		f_face;		/* typeface			*/
	short		f_num;		/* width table numerator	*/
	short		f_den;		/* width table denominator	*/
	unsigned char	f_width[NWIDTH]; /* width table			*/
} FWTAB;

/* FWTAB f_flags bits */
#define	F_PCL		1		/* PCL font width table		*/
#define	F_PS		2		/* PostScript font width table	*/
#define	F_USED		4		/* Font has been used		*/
#define	F_FIXED		8		/* Font has fixed pointsize	*/

/* Globals in fonts.c. */
extern	FTB	fontab[];		/* Font table			*/
extern	FWTAB	*fwptab[];		/* Font width table pointers	*/
extern	int	nfonts;			/* Number of fonts		*/

/* end of fonts.h */
@


1.3
log
@mods provided by stevesf
@
text
@d14 2
a15 2
	char f_name[2];
	int f_font;
d32 12
a43 12
	int		f_flags;	/* flag bits			*/
	int		f_fonttype;	/* font type			*/
	int		f_orientation;	/* portrait=0, landscape=1	*/
	int		f_spacing;	/* fixed=0, variable=1		*/
	int		f_symset;	/* symbol set			*/
	int		f_pitch;	/* pitch			*/
	int		f_psz;		/* point size (internal units)	*/
	int		f_style;	/* upright=0, italic=1		*/
	int		f_weight;	/* stroke weight		*/
	int		f_face;		/* typeface			*/
	int		f_num;		/* width table numerator	*/
	int		f_den;		/* width table denominator	*/
@


1.2
log
@steve updated
@
text
@a7 1
#define	NDFONTS	3			/* number of default fonts	*/
a8 2
#define	FWTPCL	"/usr/lib/roff/fwt/PCL/" /* PCL font width tables	*/
#define	FWTPS	"/usr/lib/roff/fwt/PS/"	/* PostScript font width tables	*/
a52 9
/*
 * Indices for built-in fonts.
 * These correspond to the order of entries in fwptab[].
 * NDFONTS above gives the number of built-in fonts.
 */
#define	TRMED		0		/* Times-Roman medium upright	*/
#define	TRITL		1		/* Times-Roman medium italic	*/
#define	TRBLD		2		/* Times-Roman bold upright	*/

a54 1
extern	FWTAB	fwtab[];		/* Builtin font width tables	*/
@


1.1
log
@Initial revision
@
text
@d10 2
d51 4
a54 2
#define	F_USED		1		/* Font has been used		*/
#define	F_FIXED		2		/* Font has fixed pointsize	*/
@
