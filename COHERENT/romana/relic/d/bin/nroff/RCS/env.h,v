head     1.6;
branch   ;
access   ;
symbols  ;
locks    bin:1.6;
comment  @ * @;


1.6
date     93.04.05.08.35.14;  author bin;  state Exp;
branches ;
next     1.5;

1.5
date     91.09.11.07.31.55;  author bin;  state Exp;
branches ;
next     1.4;

1.4
date     91.05.29.15.18.07;  author bin;  state Exp;
branches ;
next     1.3;

1.3
date     91.04.16.18.00.01;  author bin;  state Exp;
branches ;
next     1.2;

1.2
date     91.03.19.20.03.20;  author bin;  state Exp;
branches ;
next     1.1;

1.1
date     91.02.08.15.36.59;  author bin;  state Exp;
branches ;
next     ;


desc
@initial version provided by steve ness
@


1.6
log
@Steve: various changes, including fw tables
@
text
@/*
 * env.h
 * Nroff/Troff.
 * Environment header file.
 */

/* Buffer sizes. */
#define	ENVSIZE		5		/* Total number of environments	*/
#define	ENVS		3		/* Number of .ev environments	*/
#define	ENVWIDTH	3		/* Special \w environment	*/
#define	ENVTITLE	4		/* Special .tl environment	*/
#define	ENVSTACK	20		/* Pushdown stack for environments */
#define	LINSIZE		300		/* Size of line buffer		*/
#define	NFONTS		50		/* Max number of fonts		*/
#define	TABSIZE		20		/* Maximum number of tab stops	*/
#define	WORSIZE		200		/* Size of word buffer		*/

/*
 * Tab stop entry.
 */
typedef	struct {
	int	t_pos;			/* Tab position			*/
	int	t_jus;			/* Type of justification	*/
} TAB;

/*
 * Environments.
 */
typedef	struct {
	int	e_adj;			/* Adjust justification type	*/
	int	e_adm;			/* Adjust mode			*/
	char	e_ccc;			/* Current control character	*/
	int	e_cec;			/* Count for center command	*/
	int	e_csz;			/* Constant character size	*/
	int	e_curfont;		/* Current font			*/
	int	e_enb;			/* Enbolden by this amount	*/
	int	e_fcsz[NFONTS];		/* Font character size		*/
	int	e_fill;			/* Fill mode			*/
	char	e_fon[2];		/* Font name			*/
	unsigned char	*e_fonwidt;	/* Current font width table	*/
	int	e_fpsz[NFONTS];		/* Font pointsizes		*/
	char	e_hic;			/* Hyphenation indicator character */
	int	e_hyp;			/* Hyphenation mode		*/
	int	e_hypf;			/* Hyphenation of last word flag */
	int	e_ind;			/* Indent			*/
	int	e_inpltrc;		/* Input line trap count	*/
	char	e_inptrap[2];		/* Input line trap		*/
	char	e_ldc;			/* Leader dot character		*/
	int	e_lgm;			/* Ligature mode		*/
	CODE	e_linebuf[LINSIZE];	/* Line buffer			*/
	int	e_llindir;		/* Last directive count		*/
	CODE	*e_llinptr;		/* Last line pointer		*/
	int	e_llinsiz;		/* Last line size		*/
	int	e_lln;			/* Line length			*/
	int	e_lmn;			/* Line number multiple		*/
	int	e_lni;			/* Line number indent		*/
	int	e_lnn;			/* Current line number		*/
	int	e_lns;			/* Line number separation	*/
	int	e_lsp;			/* Line spacing			*/
	char	e_ltabchr;		/* Last tab character		*/
	int	e_mar;			/* Margin separation		*/
	char	e_mrc;			/* Margin character		*/
	char	e_mrch;			/* Margin character here	*/
	char	e_nbc;			/* No break character		*/
	int	e_nlindir;		/* New directive count		*/
	CODE	*e_nlinptr;		/* New line pointer		*/
	int	e_nlinsiz;		/* New line size		*/
	int	e_nnc;			/* Count for no number command	*/
	char	e_oldfon[2];		/* Last value of fon		*/
	int	e_oldind;		/* Last value of ind		*/
	int	e_oldlln;		/* Last value of lln		*/
	int	e_oldlsp;		/* Last value of lsp		*/
	int	e_oldpsz;		/* Last value of psz		*/
	int	e_oldtln;		/* Last value of tln		*/
	int	e_oldvls;		/* Last value of vls		*/
	int	e_posexls;		/* Post extra line space	*/
	int	e_preexls;		/* Pre extra line space		*/
	int	e_psz;			/* Pointsize			*/
	int	e_spcnt;		/* Space padding size		*/
	int	e_ssz;			/* Space size			*/
	int	e_sszdiv;		/* Space size divisor		*/
	int	e_sszmul;		/* Space size multiplier	*/
	long	e_swddiv;		/* Width table divisor		*/
	long	e_swdmul;		/* Width table multiplier	*/
	TAB	e_tab[TABSIZE];		/* Tab table			*/
	TAB	*e_tabptr;		/* Tab pointer			*/
	char	e_tbc;			/* Tab character		*/
	int	e_tbs;			/* Tab spacing			*/
	int	e_tfn;			/* Tab font number		*/
	int	e_tif;			/* Temporary indent flag	*/
	int	e_tin;			/* Temporary indent		*/
	CODE	*e_tlinptr;		/* Tab line pointer		*/
	int	e_tlinsiz;		/* Tab line size		*/
	int	e_tln;			/* Title length			*/
	char	e_tpc;			/* Page character in title	*/
	int	e_ufn;			/* Underline font number	*/
	int	e_ufp;			/* Underline font previous	*/
	int	e_ulc;			/* Count for underline command	*/
	int	e_vls;			/* Vertical line spacing	*/
	CODE	e_wordbuf[WORSIZE];	/* Word buffer			*/
} ENV;

/*
 * Variables in current environment.
 */
#define	adj	env.e_adj		/* Adjust justification type	*/
#define	adm	env.e_adm		/* Adjust mode			*/
#define	ccc	env.e_ccc		/* Current control character	*/
#define	cec	env.e_cec		/* Count for center command	*/
#define	csz	env.e_csz		/* Constant character size	*/
#define	curfont	env.e_curfont		/* Current font			*/
#define	enb	env.e_enb		/* Enbolden by this amount	*/
#define	fcsz	env.e_fcsz		/* Font character size		*/
#define	fill	env.e_fill		/* Fill mode			*/
#define	fon	env.e_fon		/* Font name			*/
#define	fonwidt	env.e_fonwidt		/* Current font width table	*/
#define	fpsz	env.e_fpsz		/* Font pointsizes		*/
#define	hic	env.e_hic		/* Hyphenation indicator character */
#define	hyp	env.e_hyp		/* Hyphenation mode		*/
#define	hypf	env.e_hypf		/* Hyphenation of last word flag */
#define	ind	env.e_ind		/* Indent			*/
#define	inpltrc	env.e_inpltrc		/* Input line trap count	*/
#define	inptrap	env.e_inptrap		/* Input line trap		*/
#define	ldc	env.e_ldc		/* Leader dot character		*/
#define	lgm	env.e_lgm		/* Ligature mode		*/
#define	linebuf	env.e_linebuf		/* Line buffer			*/
#define	llindir	env.e_llindir		/* Last directive count		*/
#define	llinptr	env.e_llinptr		/* Last line pointer		*/
#define	llinsiz	env.e_llinsiz		/* Last line size		*/
#define	lln	env.e_lln		/* Line length			*/
#define	lmn	env.e_lmn		/* Line number multiple		*/
#define	lni	env.e_lni		/* Line number indent		*/
#define	lnn	env.e_lnn		/* Current line number		*/
#define	lns	env.e_lns		/* Line number separation	*/
#define	lsp	env.e_lsp		/* Line spacing			*/
#define	ltabchr	env.e_ltabchr		/* Last tab character		*/
#define	mar	env.e_mar		/* Margin separation		*/
#define	mrc	env.e_mrc		/* Margin character		*/
#define	mrch	env.e_mrch		/* Margin character here	*/
#define	nbc	env.e_nbc		/* No break character		*/
#define	nlindir	env.e_nlindir		/* Current directive count	*/
#define	nlinptr	env.e_nlinptr		/* New line pointer		*/
#define	nlinsiz	env.e_nlinsiz		/* New line size		*/
#define	nnc	env.e_nnc		/* Count for no number command	*/
#define	oldfon	env.e_oldfon		/* Last value of fon		*/
#define	oldind	env.e_oldind		/* Last value of ind		*/
#define	oldlln	env.e_oldlln		/* Last value of lln		*/
#define	oldlsp	env.e_oldlsp		/* Last value of lsp		*/
#define	oldpsz	env.e_oldpsz		/* Last value of psz		*/
#define	oldtln	env.e_oldtln		/* Last value of tln		*/
#define	oldvls	env.e_oldvls		/* Last value of vls		*/
#define	posexls	env.e_posexls		/* Post extra line space	*/
#define	preexls	env.e_preexls		/* Pre extra line space		*/
#define	psz	env.e_psz		/* Pointsize			*/
#define	spcnt	env.e_spcnt		/* Space padding size		*/
#define	ssz	env.e_ssz		/* Space size			*/
#define	sszdiv	env.e_sszdiv		/* Space size divisor		*/
#define	sszmul	env.e_sszmul		/* Space size multiplier	*/
#define	swddiv	env.e_swddiv		/* Width table divisor		*/
#define	swdmul	env.e_swdmul		/* Width table multiplier	*/
#define	tab	env.e_tab		/* Tab table			*/
#define	tabptr	env.e_tabptr		/* Tab pointer			*/
#define	tbc	env.e_tbc		/* Tab character		*/
#define	tbs	env.e_tbs		/* Tab spacing			*/
#define	tfn	env.e_tfn		/* Tab font number		*/
#define	tif	env.e_tif		/* Temporary indent flag	*/
#define	tin	env.e_tin		/* Temporary indent		*/
#define	tlinptr	env.e_tlinptr		/* Tab line pointer		*/
#define	tlinsiz	env.e_tlinsiz		/* Tab line size		*/
#define	tln	env.e_tln		/* Title length			*/
#define	tpc	env.e_tpc		/* Page character in title	*/
#define	ufn	env.e_ufn		/* Underline font number	*/
#define	ufp	env.e_ufp		/* Underline font previous	*/
#define	ulc	env.e_ulc		/* Count for underline command	*/
#define	vls	env.e_vls		/* Vertical line spacing	*/
#define	wordbuf	env.e_wordbuf		/* Word buffer			*/

/*
 * Global variables.
 */
extern	ENV	env;			/* Current environment		*/
extern	int	envinit[ENVSIZE];	/* If initialized		*/
extern	int	envs;			/* Environment stack index	*/
extern	int	envstak[ENVSTACK];	/* Environment stack		*/

/* end of env.h */
@


1.5
log
@updated by stevesf
@
text
@d79 1
d155 1
@


1.4
log
@mods provided by stevesf
@
text
@a78 1
	int	e_spcnt;		/* Pre tab space		*/
a153 1
#define	spcnt	env.e_spcnt		/* Pre tab space		*/
@


1.3
log
@steve updated
@
text
@d35 1
a39 1
	int	e_fontype;		/* Current font			*/
a72 1
	int	e_oldmar;		/* Last value of mar		*/
a73 2
	int	e_oldssz;		/* Last value of ssz		*/
	int	e_oldtbf;		/* Last value of tbf		*/
d81 3
a83 1
	long	e_swddiv;		/* Width table divider		*/
a87 1
	int	e_tbf;			/* Tab font			*/
d89 1
d111 1
a115 1
#define	fontype	env.e_fontype		/* Current font			*/
a148 1
#define	oldmar	env.e_oldmar		/* Last value of mar		*/
a149 2
#define	oldssz	env.e_oldssz		/* Last value of ssz		*/
#define	oldtbf	env.e_oldtbf		/* Last value of tbf		*/
d157 3
a159 1
#define	swddiv	env.e_swddiv		/* Width table divider		*/
a163 1
#define	tbf	env.e_tbf		/* Tab font			*/
d165 1
@


1.2
log
@update provided by stevesf
@
text
@d8 9
a16 6
#define	ENVSIZE	3			/* Number of environments	*/
#define	EVSSIZE	20			/* Pushdown stack for environments */
#define	LINSIZE	300			/* Size of line buffer		*/
#define	NFONTS	50			/* Max number of fonts		*/
#define	TABSIZE	20			/* Maximum number of tab stops	*/
#define	WORSIZE	200			/* Size of word buffer		*/
a31 1
	int	e_basline;		/* Height above baseline	*/
d35 1
a35 2
	TAB	*e_ctabptr;		/* Current tab pointer		*/
	int	e_enbldn;		/* Enbolden by this amount	*/
d37 1
a37 1
	int	e_fil;			/* Fill mode			*/
d48 1
a48 3
	char	e_ldc;			/* Leader character		*/
	int	e_ldf;			/* Leader dot font???		*/
	int	e_ldrspc;		/* leader spacing		*/
d58 1
a58 1
	int	e_lns;			/* Line number seperation	*/
d61 1
a61 1
	int	e_mar;			/* Margin seperation		*/
a63 1
	int	e_mws;			/* Minimum word spacing		*/
a70 1
	int	e_oldldf;		/* Old leader dot font???	*/
a73 1
	int	e_oldmws;		/* Last value of mws		*/
d75 2
a76 1
	int	e_oldrspc;		/* old leader spacing		*/
d83 5
a87 3
	long	e_swddiv;		/* width table divider		*/
	long	e_swdmul;		/* width table multiplier	*/
	TAB	e_tab[TABSIZE];		/* Table of tabs		*/
d89 2
d98 1
a98 2
	char	e_ufp[2];		/* Previous font (from underline) */
	char	e_uft[2];		/* Underline font		*/
a108 1
#define	basline	env.e_basline		/* Height above baseline	*/
d112 1
a112 2
#define	ctabptr	env.e_ctabptr		/* Current tab pointer		*/
#define	enbldn	env.e_enbldn		/* Enbolden by this amount	*/
d114 1
a114 1
#define	fil	env.e_fil		/* Fill mode			*/
d125 1
a125 3
#define	ldc	env.e_ldc		/* Leader character		*/
#define	ldf	env.e_ldf		/* Leader dot font???		*/
#define	ldrspc	env.e_ldrspc		/* leader dot spacing		*/
d135 1
a135 1
#define	lns	env.e_lns		/* Line number seperation	*/
d138 1
a138 1
#define	mar	env.e_mar		/* Margin seperation		*/
a140 1
#define	mws	env.e_mws		/* Minimum word spacing		*/
a147 1
#define	oldldf	env.e_oldldf		/* Old Leader dot font???	*/
a150 1
#define	oldmws	env.e_oldmws		/* Last value of mws		*/
d152 2
a153 1
#define	oldrspc	env.e_oldrspc		/* old leader dot spacing	*/
d160 5
a164 3
#define	swddiv	env.e_swddiv		/* width table divider		*/
#define	swdmul	env.e_swdmul		/* width table multiplier	*/
#define	tab	env.e_tab		/* Table of tabs		*/
d166 2
d175 1
a175 2
#define	ufp	env.e_ufp		/* Previous font (from underline) */
#define	uft	env.e_uft		/* Underline font		*/
d186 1
a186 1
extern	int	envstak[EVSSIZE];	/* Environment stack		*/
@


1.1
log
@Initial revision
@
text
@d2 1
d4 1
a4 1
 * Enviroment header file.
d6 9
a14 71
#define llinptr	env.e_llinptr		/* Last line pointer */
#define nlinptr	env.e_nlinptr		/* New line pointer */
#define tlinptr	env.e_tlinptr		/* Tab line pointer */
#define llinsiz	env.e_llinsiz		/* Last line size */
#define nlinsiz	env.e_nlinsiz		/* New line size */
#define tlinsiz	env.e_tlinsiz		/* Tab line size */
#define llindir	env.e_llindir		/* Last directive count */
#define nlindir	env.e_nlindir		/* Current directive count */
#define ctabptr	env.e_ctabptr		/* Current tab pointer */
#define ltabchr	env.e_ltabchr		/* Last tab character */
#define spcnt	env.e_spcnt		/* Pre tab space */
#define basline	env.e_basline		/* Height above baseline */
#define preexls	env.e_preexls		/* Pre extra line space */
#define posexls	env.e_posexls		/* Post extra line space */
#define fonwidt	env.e_fonwidt		/* Current font width table */
#define fontype	env.e_fontype		/* Current font */
#define tab	env.e_tab		/* Table of tabs */
#define fon	env.e_fon		/* Font name */
#define psz	env.e_psz		/* Pointsize */
#define vls	env.e_vls		/* Vertical line spacing */
#define lln	env.e_lln		/* Line length */
#define ind	env.e_ind		/* Indent */
#define tin	env.e_tin		/* Temporary indent */
#define tif	env.e_tif		/* Temporary indent flag */
#define fil	env.e_fil		/* Fill mode */
#define adm	env.e_adm		/* Adjust mode */
#define adj	env.e_adj		/* Adjust justification type */
#define cec	env.e_cec		/* Count for centre command */
#define ulc	env.e_ulc		/* Count for underline command */
#define uft	env.e_uft		/* Underline font */
#define ufp	env.e_ufp		/* Previous font (from underline) */
#define mws	env.e_mws		/* Minimum word spacing */
#define lsp	env.e_lsp		/* Line spacing */
#define hyp	env.e_hyp		/* Hyphenation mode */
#define hypf	env.e_hypf		/* Hyphenation of last word flag */
#define tln	env.e_tln		/* Title length */
#define mar	env.e_mar		/* Margin seperation */
#define csz	env.e_csz		/* Constant character size */
#define lgm	env.e_lgm		/* Ligature mode */
#define lnn	env.e_lnn		/* Current line number */
#define lmn	env.e_lmn		/* Line number multiple */
#define lns	env.e_lns		/* Line number seperation */
#define lni	env.e_lni		/* Line number indent */
#define nnc	env.e_nnc		/* Count for no number command */
#define	inpltrc	env.e_inpltrc		/* Input line trap count */
#define	inptrap	env.e_inptrap		/* Input line trap */
#define oldfon	env.e_oldfon		/* Last value of fon */
#define oldpsz	env.e_oldpsz		/* Last value of psz */
#define oldvls	env.e_oldvls		/* Last value of vls */
#define oldlln	env.e_oldlln		/* Last value of lln */
#define oldind	env.e_oldind		/* Last value of ind */
#define oldmws	env.e_oldmws		/* Last value of mws */
#define oldlsp	env.e_oldlsp		/* Last value of lsp */
#define oldtln	env.e_oldtln		/* Last value of tln */
#define oldmar	env.e_oldmar		/* Last value of mar */
#define ccc	env.e_ccc		/* Current control character */
#define nbc	env.e_nbc		/* No break character */
#define tbc	env.e_tbc		/* Tab character */
#define ldc	env.e_ldc		/* Leader character */
#define hic	env.e_hic		/* Hyphenation indicator character */
#define tpc	env.e_tpc		/* Page character in title */
#define mrc	env.e_mrc		/* Margin character */
#define linebuf	env.e_linebuf		/* Line buffer */
#define wordbuf	env.e_wordbuf		/* Word buffer */
#define	newfont	env.e_newfont		/* New value of fontype */
#define	newpsz	env.e_newpsz		/* New value of psz */
#define	swdmul	env.e_swdmul		/* width table multiplier */
#define	swddiv	env.e_swddiv		/* width table divider */
#define	enbldn	env.e_enbldn		/* enbolden by this amount */
#define	ldrspc	env.e_ldrspc		/* leader dot spacing	*/
#define	oldrspc	env.e_oldrspc		/* old leader dot spacing */
d19 2
a20 2
	int	t_pos;			/* Tab position */
	int	t_jus;			/* Type of justification */
d24 1
a24 1
 * Enviroments
d27 70
a96 30
	CODE	*e_llinptr;		/* Last line pointer */
	CODE	*e_nlinptr;		/* New line pointer */
	CODE	*e_tlinptr;		/* Tab line pointer */
	int	e_llinsiz;		/* Last line size */
	int	e_nlinsiz;		/* New line size */
	int	e_tlinsiz;		/* Tab line size */
	int	e_llindir;		/* Last directive count */
	int	e_nlindir;		/* New directive count */
	TAB	*e_ctabptr;		/* Current tab pointer */
	char	e_ltabchr;		/* Last tab character */
	int	e_spcnt;		/* Pre tab space */
	int	e_basline;		/* Height above baseline */
	int	e_preexls;		/* Pre extra line space */
	int	e_posexls;		/* Post extra line space */
	unsigned char	*e_fonwidt;	/* Current font width table */
	int	e_fontype;		/* Current font */
	TAB	e_tab[TABSIZE];		/* Table of tabs */
	char	e_fon[2];		/* Font name */
	int	e_psz;			/* Pointsize */
	int	e_vls;			/* Vertical line spacing */
	int	e_lln;			/* Line length */
	int	e_ind;			/* Indent */
	int	e_tin;			/* Temporary indent */
	int	e_tif;			/* Temporary indent flag */
	int	e_fil;			/* Fill mode */
	int	e_adm;			/* Adjust mode */
	int	e_adj;			/* Adjust justification type */
	int	e_cec;			/* Count for centre command */
	int	e_ulc;			/* Count for underline command */
	char	e_uft[2];		/* Underline font */
d98 4
a101 40
	int	e_mws;			/* Minimum word spacing */
	int	e_lsp;			/* Line spacing */
	int	e_hyp;			/* Hyphenation mode */
	int	e_hypf;			/* Hyphenation of last word flag */
	int	e_tln;			/* Title length */
	int	e_mar;			/* Margin seperation */
	int	e_csz;			/* Constant character size */
	int	e_lgm;			/* Ligature mode */
	int	e_lnn;			/* Current line number */
	int	e_lmn;			/* Line number multiple */
	int	e_lns;			/* Line number seperation */
	int	e_lni;			/* Line number indent */
	int	e_nnc;			/* Count for no number command */
	int	e_inpltrc;		/* Input line trap count */
	char	e_inptrap[2];		/* Input line trap */
	char	e_oldfon[2];		/* Last value of fon */
	int	e_oldpsz;		/* Last value of psz */
	int	e_oldvls;		/* Last value of vls */
	int	e_oldlln;		/* Last value of lln */
	int	e_oldind;		/* Last value of ind */
	int	e_oldmws;		/* Last value of mws */
	int	e_oldlsp;		/* Last value of lsp */
	int	e_oldtln;		/* Last value of tln */
	int	e_oldmar;		/* Last value of mar */
	char	e_ccc;			/* Current control character */
	char	e_nbc;			/* No break character */
	char	e_tbc;			/* Tab character */
	char	e_ldc;			/* Leader character */
	int	e_ldrspc;		/* leader spacing	*/
	int	e_oldrspc;		/* old leader spacing */
	char	e_hic;			/* Hyphenation indicator character */
	char	e_tpc;			/* Page character in title */
	char	e_mrc;			/* Margin character */
	CODE	e_linebuf[LINSIZE];	/* Line buffer */
	CODE	e_wordbuf[WORSIZE];	/* Word buffer */
	int	e_newfont,		/* New value of fontype */
		e_newpsz;		/* New value of psz */
	long	e_swdmul;		/* width table multiplier */
	long	e_swddiv;		/* width table divider */
	int	e_enbldn;		/* enbolden by this amount */
d105 79
d186 6
a191 5
extern	ENV	env;			/* Current enviroment */
extern	int	envinit[ENVSIZE];	/* If initialised */
extern	int	envstak[EVSSIZE];	/* Enviroment stack */
extern	int	envs;			/* Enviroment stack index */
extern	int	mapfont[8];		/* Font map for \fn */
@
