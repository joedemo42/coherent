head     1.6;
branch   ;
access   ;
symbols  ;
locks    bin:1.6;
comment  @ * @;


1.6
date     93.04.05.07.31.53;  author bin;  state Exp;
branches ;
next     1.5;

1.5
date     92.10.01.11.38.30;  author bin;  state Exp;
branches ;
next     1.4;

1.4
date     92.07.29.06.20.34;  author bin;  state Exp;
branches ;
next     1.3;

1.3
date     92.06.30.09.58.37;  author bin;  state Exp;
branches ;
next     1.2;

1.2
date     91.02.22.18.09.06;  author bin;  state Exp;
branches ;
next     1.1;

1.1
date     91.02.04.16.59.41;  author bin;  state Exp;
branches ;
next     ;


desc
@init ver prov by stevesf
@


1.6
log
@Steve: shell 3.4.5: several changes,
new source kit supplied with login security bug fix.
@
text
@
#line 9 "/usr/src/cmd0/sh/sh.y"

#include "sh.h"

#define YYERROR	{ yyerrflag=1; goto YYerract; }

extern	NODE	*node();

#include "y.tab.h"
#define YYCLEARIN yychar = -1000
#define YYERROK yyerrflag = 0
extern int yychar;
extern short yyerrflag;
#ifndef YYMAXDEPTH
#define YYMAXDEPTH 150
#endif
YYSTYPE yyval, yylval;

#line 347 "/usr/src/cmd0/sh/sh.y"

/*
 * Create a node.
 */
NODE *
node(type, auxp, next)
NODE *auxp, *next;
{
	register NODE *np;

	np = (NODE *) balloc(sizeof (NODE));
	np->n_type = type;
	np->n_auxp = auxp;
	np->n_next = next;
	return np;
}

#define NBPC 8
#define NKEY 8
static char keys[NKEY] = { 0 };
static int  keyi = NKEY * NBPC;

keyflush()
{
	register char *kp;

	for (kp = keys+NKEY; kp > keys; *--kp = 0)
		;
	keyi = NKEY * NBPC;
}

keypop()
{
	register char	*kp;
	register int	km;

	if ((km = keyi++) >= NKEY * NBPC) {
		panic(11);
		NOTREACHED;
	}
	kp = keys + (km / NBPC);
	km = 1 << (km %= NBPC);
	keyflag = (*kp & km) ? 1 : 0;
	*kp &= ~km;
}

keypush()
{
	register char	*kp;
	register int	km;

	if ((km = --keyi) < 0) {
		panic(12);
		NOTREACHED;
	}
	if (keyflag) {
		kp = keys + (km / NBPC);
		km = 1 << (km %= NBPC);
		*kp |= km;
	}
}
/*
 * The following fragments might implement named pipes.
 * The token declaration goes in the header.
 * The nopen production should go with the others of its ilk.
 * The production fragment goes into arg:
%token _NOPEN _NCLOSE
nopen:	_NOPEN optnls ;

|	nopen pipe_cmd ')' {
		$$ = node(NRPIPE, $2, NULL);
	}
|	oparen pipe_cmd _NCLOSE {
		$$ = node(NWPIPE, $2, NULL);
	}
 *
 */

/* end of sh/sh.y */
#ifdef YYTNAMES
readonly struct yytname yytnames[31] =
{
	"$end", -1, 
	"error", -2, 
	"_ANDF", 256, 
	"_ASGN", 257, 
	"_CASE", 258, 
	"_CBRAC", 259, 
	"_DO", 260, 
	"_DONE", 261, 
	"_DSEMI", 262, 
	"_ELIF", 263, 
	"_ELSE", 264, 
	"_ESAC", 265, 
	"_FI", 266, 
	"_FOR", 267, 
	"_IF", 268, 
	"_IN", 269, 
	"_IORS", 270, 
	"_NAME", 271, 
	"_NULL", 272, 
	"_OBRAC", 273, 
	"_ORF", 274, 
	"_THEN", 275, 
	"_UNTIL", 276, 
	"_WHILE", 277, 
	"'\\n'", 10, 
	"';'", 59, 
	"'|'", 124, 
	"'('", 40, 
	"')'", 41, 
	"'&'", 38, 
	NULL
} ;
#endif
#include <action.h>
readonly unsigned char yypdnt[78] = {
0, 1, 1, 2, 2, 2, 4, 6,
7, 8, 9, 9, 10, 10, 11, 11,
13, 14, 15, 16, 17, 18, 19, 3,
3, 3, 3, 3, 20, 20, 20, 21,
21, 22, 23, 24, 24, 25, 25, 25,
25, 26, 27, 28, 29, 29, 29, 29,
29, 29, 29, 29, 30, 30, 36, 36,
32, 32, 32, 37, 38, 38, 31, 31,
35, 35, 35, 34, 34, 33, 33, 12,
12, 12, 5, 5, 39, 39 
};
readonly unsigned char yypn[78] = {
2, 2, 0, 1, 2, 2, 2, 2,
2, 2, 2, 2, 2, 3, 1, 2,
2, 2, 2, 2, 2, 2, 2, 1,
2, 2, 3, 3, 1, 3, 3, 3,
1, 2, 0, 2, 1, 1, 1, 1,
1, 1, 1, 1, 6, 5, 6, 5,
4, 6, 3, 3, 2, 0, 2, 0,
3, 1, 0, 3, 3, 1, 2, 0,
5, 2, 0, 1, 0, 3, 2, 1,
1, 2, 1, 0, 1, 2 
};
readonly unsigned char yypgo[40] = {
0, 0, 2, 4, 12, 14, 46, 50,
52, 54, 56, 58, 62, 68, 70, 72,
74, 76, 78, 80, 82, 88, 92, 94,
96, 100, 102, 104, 118, 120, 122, 124,
130, 136, 146, 160, 164, 168, 170, 174
};
readonly unsigned int yygo[186] = {
YYOTHERS, 0x1, YYOTHERS, 0x5, 0x1, 0x6, 0xd, 0x29,
0xe, 0x2a, YYOTHERS, 0x3a, YYOTHERS, 0x1f, 0x10, 0x2e,
0x13, 0x31, 0x18, 0x35, 0x1b, 0x36, 0x1c, 0x37,
0x1d, 0x38, 0x1e, 0x39, 0x3a, 0x49, 0x4b, 0x5e,
0x4d, 0x61, 0x60, 0x73, 0x66, 0x75, 0x68, 0x77,
0x6e, 0x7b, 0x6f, 0x7c, YYOTHERS, 0x2c, 0x7d, 0x80,
YYOTHERS, 0x4c, YYOTHERS, 0x70, YYOTHERS, 0x71, YYOTHERS, 0x20,
YYOTHERS, 0x4e, 0x45, 0x58, YYOTHERS, 0x44, 0x42, 0x52,
0x48, 0x5b, YYOTHERS, 0x45, YYOTHERS, 0x11, YYOTHERS, 0x12,
YYOTHERS, 0x14, YYOTHERS, 0x21, YYOTHERS, 0x22, YYOTHERS, 0x69,
YYOTHERS, 0x67, 0x11, 0x2f, 0x12, 0x30, YYOTHERS, 0x7,
0x14, 0x32, YYOTHERS, 0x8, YYOTHERS, 0x9, YYOTHERS, 0xa,
0x24, 0x40, YYOTHERS, 0x23, YYOTHERS, 0x24, YYOTHERS, 0x25,
0xa, 0x26, 0x16, 0x33, 0x17, 0x34, 0x24, 0x26,
0x47, 0x59, 0x59, 0x59, YYOTHERS, 0x54, YYOTHERS, 0x27,
YYOTHERS, 0x28, YYOTHERS, 0x48, 0x48, 0x5c, 0x5b, 0x6c,
YYOTHERS, 0x4f, 0x58, 0x6a, 0x67, 0x76, YYOTHERS, 0x55,
0x1f, 0x3b, 0x20, 0x3c, 0x4a, 0x5d, 0x70, 0x7d,
YYOTHERS, 0x3d, 0x22, 0x3f, 0x4c, 0x5f, 0x4e, 0x62,
0x69, 0x78, 0x71, 0x7e, 0x80, 0x81, YYOTHERS, 0x3e,
0x81, 0x82, YYOTHERS, 0x72, 0x59, 0x6b, YYOTHERS, 0x5a,
YYOTHERS, 0x56, 0x64, 0x74, YYOTHERS, 0x57, 0x33, 0x46,
0x3a, 0x4a, 0x42, 0x46, 0x43, 0x53, 0x48, 0x46,
YYOTHERS, 0x2d 
};
readonly unsigned short yypa[131] = {
0, 2, 28, 32, 36, 38, 40, 44,
50, 56, 60, 82, 84, 86, 108, 130,
130, 134, 134, 130, 136, 138, 140, 140,
130, 144, 146, 130, 130, 130, 130, 136,
136, 148, 152, 156, 158, 180, 182, 184,
186, 188, 190, 192, 194, 196, 200, 202,
204, 206, 208, 210, 218, 222, 224, 226,
228, 230, 130, 232, 236, 240, 242, 246,
250, 252, 254, 260, 264, 268, 272, 276,
280, 288, 290, 130, 314, 322, 328, 332,
336, 338, 340, 342, 346, 350, 354, 358,
264, 276, 362, 236, 364, 368, 370, 372,
130, 378, 380, 382, 384, 388, 130, 264,
130, 390, 396, 400, 402, 406, 130, 130,
136, 408, 412, 416, 418, 420, 422, 424,
426, 428, 430, 432, 434, 232, 436, 438,
314, 440, 446 
};
readonly unsigned int yyact[448] = {
0x2002, YYOTHERS, 0x2, YYEOFVAL, 0x4, 0xa, 0x2022, 0x101,
0x2022, 0x102, 0x2022, 0x10b, 0x2022, 0x10c, 0x2022, 0x10e,
0x2022, 0x10f, 0x2022, 0x111, 0x2022, 0x114, 0x2022, 0x115,
0x2022, 0x28, 0x3, YYOTHERS, 0x4000, YYEOFVAL, 0x6000, YYOTHERS,
0xb, 0xa, 0x6000, YYOTHERS, 0x2003, YYOTHERS, 0x2001, YYOTHERS,
0xc, 0xa, 0x6000, YYOTHERS, 0xd, 0x3b, 0xe, 0x26,
0x2017, YYOTHERS, 0xf, 0x100, 0x10, 0x112, 0x201c, YYOTHERS,
0x13, 0x7c, 0x2020, YYOTHERS, 0x15, 0x101, 0x16, 0x102,
0x17, 0x10b, 0x18, 0x10c, 0x19, 0x10e, 0x1a, 0x10f,
0x1b, 0x111, 0x1c, 0x114, 0x1d, 0x115, 0x1e, 0x28,
0x6000, YYOTHERS, 0x2005, YYOTHERS, 0x2004, YYOTHERS, 0x2022, 0x101,
0x2022, 0x102, 0x2022, 0x10b, 0x2022, 0x10c, 0x2022, 0x10e,
0x2022, 0x10f, 0x2022, 0x111, 0x2022, 0x114, 0x2022, 0x115,
0x2022, 0x28, 0x2019, YYOTHERS, 0x2022, 0x101, 0x2022, 0x102,
0x2022, 0x10b, 0x2022, 0x10c, 0x2022, 0x10e, 0x2022, 0x10f,
0x2022, 0x111, 0x2022, 0x114, 0x2022, 0x115, 0x2022, 0x28,
0x2018, YYOTHERS, 0x2b, 0xa, 0x204b, YYOTHERS, 0x2022, YYOTHERS,
0x2022, YYOTHERS, 0x202b, YYOTHERS, 0x1a, 0x10f, 0x6000, YYOTHERS,
0x2029, YYOTHERS, 0x202a, YYOTHERS, 0x2044, 0x29, 0x2022, YYOTHERS,
0x2044, 0x103, 0x2022, YYOTHERS, 0x2021, YYOTHERS, 0x15, 0x101,
0x16, 0x102, 0x17, 0x10b, 0x18, 0x10c, 0x19, 0x10e,
0x1a, 0x10f, 0x1b, 0x111, 0x1c, 0x114, 0x1d, 0x115,
0x1e, 0x28, 0x2024, YYOTHERS, 0x2025, YYOTHERS, 0x2026, YYOTHERS,
0x2027, YYOTHERS, 0x2028, YYOTHERS, 0x201b, YYOTHERS, 0x201a, YYOTHERS,
0x204c, YYOTHERS, 0x2011, YYOTHERS, 0x41, 0xa, 0x204a, YYOTHERS,
0x2010, YYOTHERS, 0x201d, YYOTHERS, 0x201e, YYOTHERS, 0x2012, YYOTHERS,
0x201f, YYOTHERS, 0x42, 0x10d, 0x2b, 0xa, 0x43, 0x3b,
0x6000, YYOTHERS, 0x47, 0x10d, 0x2035, YYOTHERS, 0x2006, YYOTHERS,
0x2014, YYOTHERS, 0x200b, YYOTHERS, 0x200a, YYOTHERS, 0x2013, YYOTHERS,
0x4b, 0x113, 0x6000, YYOTHERS, 0x4d, 0x104, 0x203f, YYOTHERS,
0x2043, YYOTHERS, 0x50, 0x29, 0x6000, YYOTHERS, 0x51, 0x103,
0x6000, YYOTHERS, 0x2023, YYOTHERS, 0x204d, YYOTHERS, 0x2b, 0xa,
0x43, 0x3b, 0x200e, YYOTHERS, 0x2b, 0xa, 0x2048, YYOTHERS,
0x1a, 0x10f, 0x203a, YYOTHERS, 0x42, 0x10d, 0x6000, YYOTHERS,
0x41, 0xa, 0x2047, YYOTHERS, 0x1a, 0x10f, 0x2037, YYOTHERS,
0x4d, 0x104, 0x2b, 0xa, 0x43, 0x3b, 0x203f, YYOTHERS,
0x2046, YYOTHERS, 0x41, 0xa, 0x204a, 0x103, 0x204a, 0x104,
0x204a, 0x105, 0x204a, 0x106, 0x204a, 0x107, 0x204a, 0x108,
0x204a, 0x109, 0x204a, 0x10a, 0x204a, 0x113, 0x204a, 0x29,
0x2022, YYOTHERS, 0x2044, 0x107, 0x2044, 0x108, 0x2044, 0x10a,
0x2022, YYOTHERS, 0x2b, 0xa, 0x60, 0x3b, 0x204b, YYOTHERS,
0x2044, 0x105, 0x2022, YYOTHERS, 0x63, 0x105, 0x6000, YYOTHERS,
0x2032, YYOTHERS, 0x2033, YYOTHERS, 0x200f, YYOTHERS, 0x41, 0xa,
0x2049, YYOTHERS, 0x64, 0x7c, 0x203d, YYOTHERS, 0x65, 0x109,
0x6000, YYOTHERS, 0x66, 0x106, 0x2039, YYOTHERS, 0x68, 0x29,
0x6000, YYOTHERS, 0x2034, YYOTHERS, 0x6d, 0x105, 0x6000, YYOTHERS,
0x2045, YYOTHERS, 0x2007, YYOTHERS, 0x6e, 0x107, 0x6f, 0x108,
0x2042, YYOTHERS, 0x200c, YYOTHERS, 0x203e, YYOTHERS, 0x2030, YYOTHERS,
0x1a, 0x10f, 0x6000, YYOTHERS, 0x202f, YYOTHERS, 0x2044, 0x106,
0x2044, 0x109, 0x2022, YYOTHERS, 0x79, 0x109, 0x6000, YYOTHERS,
0x2036, YYOTHERS, 0x7a, 0x105, 0x6000, YYOTHERS, 0x202d, YYOTHERS,
0x2044, 0x10a, 0x2022, YYOTHERS, 0x7f, 0x10a, 0x6000, YYOTHERS,
0x200d, YYOTHERS, 0x203c, YYOTHERS, 0x2016, YYOTHERS, 0x2038, YYOTHERS,
0x2015, YYOTHERS, 0x203b, YYOTHERS, 0x202e, YYOTHERS, 0x202c, YYOTHERS,
0x2008, YYOTHERS, 0x2009, YYOTHERS, 0x2041, YYOTHERS, 0x2031, YYOTHERS,
0x6e, 0x107, 0x6f, 0x108, 0x2042, YYOTHERS, 0x2040, YYOTHERS
};
#define YYNOCHAR (-1000)
#define	yyerrok	yyerrflag=0
#define	yyclearin	yylval=YYNOCHAR
int yystack[YYMAXDEPTH];
YYSTYPE yyvstack[YYMAXDEPTH], *yyv;
int yychar;

#ifdef YYDEBUG
int yydebug = 1;	/* No sir, not in the BSS */
#include <stdio.h>
#endif

short yyerrflag;
int *yys;

yyparse()
{
	register YYSTYPE *yypvt;
	int act;
	register unsigned *ip, yystate;
	int pno;
	yystate = 0;
	yychar = YYNOCHAR;
	yyv = &yyvstack[-1];
	yys = &yystack[-1];

stack:
	if( ++yys >= &yystack[YYMAXDEPTH] ) {
		write(2, "Stack overflow\n", 15);
		exit(1);
	}
	*yys = yystate;
	*++yyv = yyval;
#ifdef YYDEBUG
	if( yydebug )
		fprintf(stdout, "Stack state %d, char %d\n", yystate, yychar);
#endif

read:
	ip = &yyact[yypa[yystate]];
	if( ip[1] != YYNOCHAR ) {
		if( yychar == YYNOCHAR ) {
			yychar = yylex();
#ifdef YYDEBUG
			if( yydebug )
				fprintf(stdout, "lex read char %d, val %d\n", yychar, yylval);
#endif
		}
		while (ip[1]!=YYNOCHAR) {
			if (ip[1]==yychar)
				break;
			ip += 2;
		}
	}
	act = ip[0];
	switch( act>>YYACTSH ) {
	case YYSHIFTACT:
		if( ip[1]==YYNOCHAR )
			goto YYerract;
		if( yychar != -1 )
			yychar = YYNOCHAR; /* dont throw away EOF */
		yystate = act&YYAMASK;
		yyval = yylval;
#ifdef YYDEBUG
		if( yydebug )
			fprintf(stdout, "shift %d\n", yystate);
#endif
		if( yyerrflag )
			--yyerrflag;
		goto stack;

	case YYACCEPTACT:
#ifdef YYDEBUG
		if( yydebug )
			fprintf(stdout, "accept\n");
#endif
		return(0);

	case YYERRACT:
	YYerract:
		switch (yyerrflag) {
		case 0:
			yyerror("Syntax error");

		case 1:
		case 2:

			yyerrflag = 3;
			while( yys >= & yystack[0] ) {
				ip = &yyact[yypa[*yys]];
				while( ip[1]!=YYNOCHAR )
					ip += 2;
				if( (*ip&~YYAMASK) == (YYSHIFTACT<<YYACTSH) ) {
					yystate = *ip&YYAMASK;
					goto stack;
				}
#ifdef YYDEBUG
				if( yydebug )
					fprintf(stderr, "error recovery leaves state %d, uncovers %d\n", *yys, yys[-1]);
#endif
				yys--;
				yyv--;
			}
#ifdef YYDEBUG
			if( yydebug )
				fprintf(stderr, "no shift on error; abort\n");
#endif
			return(1);

		case 3:
#ifdef YYDEBUG
			if( yydebug )
				fprintf(stderr, "Error recovery clobbers char %o\n", yychar);
#endif
			if( yychar==YYEOFVAL )
				return(1);
			yychar = YYNOCHAR;
			goto read;
		}

	case YYREDACT:
		pno = act&YYAMASK;
#ifdef YYDEBUG
		if( yydebug )
			fprintf(stdout, "reduce %d\n", pno);
#endif
		yypvt = yyv;
		yyv -= yypn[pno];
		yys -= yypn[pno];
		yyval = yyv[1];
		switch(pno) {

case 3: {

#line 64 "/usr/src/cmd0/sh/sh.y"

		sesp->s_node = NULL;
		reset(RCMD);
		NOTREACHED;
	}break;

case 4: {

#line 70 "/usr/src/cmd0/sh/sh.y"

		sesp->s_node = yypvt[-1].yu_node;
		reset(errflag ? RERR : RCMD);
		NOTREACHED;
	}break;

case 5: {

#line 75 "/usr/src/cmd0/sh/sh.y"

		keyflush();
		keyflag = 1;
		reset(RERR);
		NOTREACHED;
	}break;

case 10: {

#line 91 "/usr/src/cmd0/sh/sh.y"
	yyval.yu_nval = NWHILE;	}break;

case 11: {

#line 92 "/usr/src/cmd0/sh/sh.y"
	yyval.yu_nval = NUNTIL;	}break;

case 23: {

#line 114 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = yypvt[0].yu_node;
	}break;

case 24: {

#line 117 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = node(NBACK, yypvt[-1].yu_node, NULL);
	}break;

case 25: {

#line 120 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = yypvt[-1].yu_node;
	}break;

case 26: {

#line 123 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = node(NBACK, yypvt[-2].yu_node, yypvt[0].yu_node);
	}break;

case 27: {

#line 126 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = node(NLIST, yypvt[-2].yu_node, yypvt[0].yu_node);
	}break;

case 28: {

#line 132 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = yypvt[0].yu_node;
	}break;

case 29: {

#line 135 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = node(NORF, yypvt[-2].yu_node, yypvt[0].yu_node);
	}break;

case 30: {

#line 138 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = node(NANDF, yypvt[-2].yu_node, yypvt[0].yu_node);
	}break;

case 31: {

#line 144 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = node(NPIPE, yypvt[-2].yu_node, yypvt[0].yu_node);
	}break;

case 32: {

#line 147 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = yypvt[0].yu_node;
	}break;

case 33: {

#line 153 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = node(NCOMS, yypvt[0].yu_node, NULL);
		keypop();
	}break;

case 34: {

#line 160 "/usr/src/cmd0/sh/sh.y"

		keypush();
		keyflag = 1;
	}break;

case 35: {

#line 167 "/usr/src/cmd0/sh/sh.y"

		if ((yypvt[-1].yu_node->n_type == NCTRL && yypvt[0].yu_node->n_type == NARGS)
		 || (yypvt[-1].yu_node->n_type == NARGS && yypvt[0].yu_node->n_type == NCTRL)) {
			YYERROR;
		}
		(yyval.yu_node = yypvt[-1].yu_node)->n_next = yypvt[0].yu_node;
	}break;

case 36: {

#line 174 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = yypvt[0].yu_node;
	}break;

case 37: {

#line 180 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = node(NIORS, yypvt[0].yu_strp, NULL);
	}break;

case 38: {

#line 183 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = node(NARGS, yypvt[0].yu_strp, NULL);
		keyflag = 0;
	}break;

case 39: {

#line 187 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = node(NASSG, yypvt[0].yu_strp, NULL);
	}break;

case 40: {

#line 190 "/usr/src/cmd0/sh/sh.y"

		if (!keyflag) {
			YYERROR;
		}
		yyval.yu_node = node(NCTRL, yypvt[0].yu_node, NULL);
		keyflag = 0;
	}break;

case 41: {

#line 199 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_strp = duplstr(strt, 0);
	}break;

case 42: {

#line 204 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_strp = duplstr(strt, 0);
	}break;

case 43: {

#line 209 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_strp = duplstr(strt, 0);
	}break;

case 44: {

#line 215 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = node(NFOR, yypvt[-4].yu_strp, node(NFOR2, yypvt[-3].yu_node, node(NLIST, yypvt[-1].yu_node, NULL)));
		yyval.yu_node->n_next->n_next->n_next = yyval.yu_node->n_next;
	}break;

case 45: {

#line 219 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = node(NFOR, yypvt[-3].yu_strp, node(NFOR2, yypvt[-2].yu_node, node(NLIST, yypvt[-1].yu_node, NULL)));
		yyval.yu_node->n_next->n_next->n_next = yyval.yu_node->n_next;
	}break;

case 46: {

#line 223 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = node(NCASE, yypvt[-4].yu_strp, yypvt[-1].yu_node);
	}break;

case 47: {

#line 226 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = node(NCASE, yypvt[-3].yu_strp, yypvt[-1].yu_node);
	}break;

case 48: {

#line 229 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = node(yypvt[-3].yu_nval, yypvt[-2].yu_node, node(NLIST, yypvt[-1].yu_node, NULL));
		yyval.yu_node->n_next->n_next = yyval.yu_node;
	}break;

case 49: {

#line 233 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = node(NIF, node(NNULL, yypvt[-4].yu_node, yypvt[-2].yu_node), yypvt[-1].yu_node);
	}break;

case 50: {

#line 236 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = node(NPARN, yypvt[-1].yu_node, NULL);
	}break;

case 51: {

#line 239 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = node(NBRAC, yypvt[-1].yu_node, NULL);
	}break;

case 52: {

#line 245 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = yypvt[0].yu_node;
	}break;

case 53: {

#line 248 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = node(NARGS, "\"$@@\"", NULL);
	}break;

case 54: {

#line 254 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = node(NARGS, yypvt[-1].yu_strp, yypvt[0].yu_node);
	}break;

case 55: {

#line 257 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = NULL;
	}break;

case 56: {

#line 263 "/usr/src/cmd0/sh/sh.y"

		register NODE *np;

		for (np=yypvt[-2].yu_node; np->n_next; np=np->n_next)
			;
		np->n_next = yypvt[0].yu_node;
		yyval.yu_node = yypvt[-2].yu_node;
	}break;

case 57: {

#line 271 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = yypvt[0].yu_node;
	}break;

case 58: {

#line 274 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = NULL;
	}break;

case 59: {

#line 280 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = node(NCASE2, yypvt[0].yu_node, yypvt[-2].yu_node);
	}break;

case 60: {

#line 286 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = node(NCASE3, yypvt[-2].yu_strp, yypvt[0].yu_node);
	}break;

case 61: {

#line 289 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = node(NCASE3, yypvt[0].yu_strp, NULL);
	}break;

case 62: {

#line 295 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = yypvt[0].yu_node;
	}break;

case 63: {

#line 298 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = NULL;
	}break;

case 64: {

#line 304 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = node(NIF, node(NNULL, yypvt[-3].yu_node, yypvt[-1].yu_node), yypvt[0].yu_node);
	}break;

case 65: {

#line 307 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = node(NELSE, yypvt[0].yu_node, NULL);
	}break;

case 66: {

#line 310 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = NULL;
	}break;

case 67: {

#line 316 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = yypvt[0].yu_node;
	}break;

case 68: {

#line 320 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = NULL;
	}break;

case 69: {

#line 326 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = node(NLIST, yypvt[-2].yu_node, yypvt[0].yu_node);
	}break;

case 70: {

#line 329 "/usr/src/cmd0/sh/sh.y"

		yyval.yu_node = yypvt[-1].yu_node;
	}break;

		}
		ip = &yygo[ yypgo[yypdnt[pno]] ];
		while( *ip!=*yys && *ip!=YYNOCHAR )
			ip += 2;
		yystate = ip[1];
		goto stack;
	}
}




@


1.5
log
@update source from steve, post 401a
@
text
@d2 1
a2 1
#line 8 "/tmp/nsh/sh.y"
d6 1
a6 1
#define YYERROR	{yyerrflag=1; goto YYerract; }
d20 1
a20 1
#line 328 "/tmp/nsh/sh.y"
d35 1
a35 1
	return (np);
d47 2
a48 1
	for (kp = keys+NKEY; kp > keys; *--kp = 0);
d58 1
a58 1
		panic();
d73 1
a73 1
		panic();
d86 1
a86 1
 * The production fragment goes into argument:
d90 1
a90 1
|	nopen pipe_command ')' {
d93 1
a93 1
|	oparen pipe_command _NCLOSE {
d98 2
d101 1
a101 1
struct yytname yytnames[31] =
d105 22
a126 22
	"_NULL", 256, 
	"_DSEMI", 257, 
	"_ANDF", 258, 
	"_ORF", 259, 
	"_NAME", 260, 
	"_IORS", 261, 
	"_ASGN", 262, 
	"_CASE", 263, 
	"_DO", 264, 
	"_DONE", 265, 
	"_ELIF", 266, 
	"_ELSE", 267, 
	"_ESAC", 268, 
	"_FI", 269, 
	"_FOR", 270, 
	"_IF", 271, 
	"_IN", 272, 
	"_THEN", 273, 
	"_UNTIL", 274, 
	"_WHILE", 275, 
	"_OBRAC", 276, 
	"_CBRAC", 277, 
d137 1
a137 1
unsigned char yypdnt[78] = {
d149 1
a149 1
unsigned char yypn[78] = {
d161 1
a161 1
unsigned char yypgo[40] = {
d168 25
a192 25
unsigned int yygo[186] = {
-1000, 1, -1000, 5, 1, 6, 13, 41,
14, 42, -1000, 58, -1000, 31, 16, 46,
19, 49, 26, 53, 27, 54, 28, 55,
29, 56, 30, 57, 58, 73, 75, 94,
77, 97, 96, 115, 102, 117, 104, 119,
110, 123, 111, 124, -1000, 44, 125, 128,
-1000, 76, -1000, 112, -1000, 113, -1000, 32,
-1000, 78, 69, 88, -1000, 68, 66, 82,
72, 91, -1000, 69, -1000, 17, -1000, 18,
-1000, 20, -1000, 33, -1000, 34, -1000, 105,
-1000, 103, 17, 47, 18, 48, -1000, 7,
20, 50, -1000, 8, -1000, 9, -1000, 10,
36, 64, -1000, 35, -1000, 36, -1000, 37,
10, 38, 24, 51, 25, 52, 36, 38,
71, 89, 89, 89, -1000, 84, -1000, 39,
-1000, 40, -1000, 72, 72, 92, 91, 108,
-1000, 79, 88, 106, 103, 118, -1000, 85,
31, 59, 32, 60, 74, 93, 112, 125,
-1000, 61, 34, 63, 76, 95, 78, 98,
105, 120, 113, 126, 128, 129, -1000, 62,
129, 130, -1000, 114, 89, 107, -1000, 90,
-1000, 86, 100, 116, -1000, 87, 51, 70,
58, 74, 66, 70, 67, 83, 72, 70,
-1000, 45 
d194 1
a194 1
unsigned short yypa[131] = {
d197 2
a198 2
130, 134, 134, 130, 136, 138, 140, 142,
144, 144, 130, 130, 130, 130, 130, 136,
d213 57
a269 57
unsigned int yyact[448] = {
8194, -1000, 2, -1, 4, 10, 8226, 260,
8226, 261, 8226, 262, 8226, 263, 8226, 270,
8226, 271, 8226, 274, 8226, 275, 8226, 276,
8226, 40, 3, -1000, 16384, -1, 24576, -1000,
11, 10, 24576, -1000, 8195, -1000, 8193, -1000,
12, 10, 24576, -1000, 13, 59, 14, 38,
8215, -1000, 15, 258, 16, 259, 8220, -1000,
19, 124, 8224, -1000, 21, 260, 22, 261,
23, 262, 24, 263, 25, 270, 26, 271,
27, 274, 28, 275, 29, 276, 30, 40,
24576, -1000, 8197, -1000, 8196, -1000, 8226, 260,
8226, 261, 8226, 262, 8226, 263, 8226, 270,
8226, 271, 8226, 274, 8226, 275, 8226, 276,
8226, 40, 8217, -1000, 8226, 260, 8226, 261,
8226, 262, 8226, 263, 8226, 270, 8226, 271,
8226, 274, 8226, 275, 8226, 276, 8226, 40,
8216, -1000, 43, 10, 8267, -1000, 8226, -1000,
8226, -1000, 8234, -1000, 8233, -1000, 8235, -1000,
21, 260, 24576, -1000, 8260, 41, 8226, -1000,
8260, 277, 8226, -1000, 8225, -1000, 21, 260,
22, 261, 23, 262, 24, 263, 25, 270,
26, 271, 27, 274, 28, 275, 29, 276,
30, 40, 8228, -1000, 8229, -1000, 8230, -1000,
8231, -1000, 8232, -1000, 8219, -1000, 8218, -1000,
8268, -1000, 8209, -1000, 65, 10, 8266, -1000,
8208, -1000, 8221, -1000, 8222, -1000, 8210, -1000,
8223, -1000, 66, 272, 43, 10, 67, 59,
24576, -1000, 71, 272, 8245, -1000, 8198, -1000,
8203, -1000, 8202, -1000, 8212, -1000, 8211, -1000,
75, 273, 24576, -1000, 77, 264, 8255, -1000,
8259, -1000, 80, 41, 24576, -1000, 81, 277,
24576, -1000, 8227, -1000, 8269, -1000, 43, 10,
67, 59, 8206, -1000, 43, 10, 8264, -1000,
21, 260, 8250, -1000, 66, 272, 24576, -1000,
65, 10, 8263, -1000, 21, 260, 8247, -1000,
77, 264, 43, 10, 67, 59, 8255, -1000,
8262, -1000, 65, 10, 8266, 257, 8266, 264,
8266, 265, 8266, 266, 8266, 267, 8266, 268,
8266, 269, 8266, 273, 8266, 277, 8266, 41,
8226, -1000, 8260, 266, 8260, 267, 8260, 269,
8226, -1000, 43, 10, 96, 59, 8267, -1000,
8260, 265, 8226, -1000, 99, 265, 24576, -1000,
8242, -1000, 8243, -1000, 8207, -1000, 65, 10,
8265, -1000, 100, 124, 8253, -1000, 101, 268,
24576, -1000, 102, 257, 8249, -1000, 104, 41,
24576, -1000, 8244, -1000, 109, 265, 24576, -1000,
8261, -1000, 8199, -1000, 110, 266, 111, 267,
8258, -1000, 8204, -1000, 8254, -1000, 8240, -1000,
21, 260, 24576, -1000, 8239, -1000, 8260, 257,
8260, 268, 8226, -1000, 121, 268, 24576, -1000,
8246, -1000, 122, 265, 24576, -1000, 8237, -1000,
8260, 269, 8226, -1000, 127, 269, 24576, -1000,
8205, -1000, 8252, -1000, 8214, -1000, 8248, -1000,
8213, -1000, 8251, -1000, 8238, -1000, 8236, -1000,
8200, -1000, 8201, -1000, 8257, -1000, 8241, -1000,
110, 266, 111, 267, 8258, -1000, 8256, -1000
d271 6
a276 8
/* (-lgl
 * 	COHERENT Version 3.2.2
 * 	Copyright (c) 1982, 1992 by Mark Williams Company.
 * 	All rights reserved. May not be copied without permission.
 -lgl) */
/*
 * /lib/yyparse.c
 */
d278 2
a279 13
#define	YYNOCHAR	(-1000)
#define	yyerrok		yyerrflag=0
#define	yyclearin	yylval=YYNOCHAR

int	yychar;
short	yyerrflag;
int	*yys;
int	yystack[YYMAXDEPTH];
YYSTYPE	yyvstack[YYMAXDEPTH];
YYSTYPE	*yyv;

#ifdef	YYDEBUG
int	yydebug = 1;	/* No sir, not in the BSS */
d283 3
a291 1

d405 1
a405 1
#line 46 "/tmp/nsh/sh.y"
d414 1
a414 1
#line 52 "/tmp/nsh/sh.y"
d423 1
a423 1
#line 57 "/tmp/nsh/sh.y"
d433 1
a433 1
#line 73 "/tmp/nsh/sh.y"
d438 1
a438 1
#line 74 "/tmp/nsh/sh.y"
d443 1
a443 1
#line 96 "/tmp/nsh/sh.y"
d450 1
a450 1
#line 99 "/tmp/nsh/sh.y"
d457 1
a457 1
#line 102 "/tmp/nsh/sh.y"
d464 1
a464 1
#line 105 "/tmp/nsh/sh.y"
d471 1
a471 1
#line 108 "/tmp/nsh/sh.y"
d478 1
a478 1
#line 114 "/tmp/nsh/sh.y"
d485 1
a485 1
#line 117 "/tmp/nsh/sh.y"
d492 1
a492 1
#line 120 "/tmp/nsh/sh.y"
d499 1
a499 1
#line 126 "/tmp/nsh/sh.y"
d506 1
a506 1
#line 129 "/tmp/nsh/sh.y"
d513 1
a513 1
#line 135 "/tmp/nsh/sh.y"
d521 1
a521 1
#line 142 "/tmp/nsh/sh.y"
d529 1
a529 1
#line 149 "/tmp/nsh/sh.y"
d540 1
a540 1
#line 156 "/tmp/nsh/sh.y"
d547 1
a547 1
#line 162 "/tmp/nsh/sh.y"
d554 1
a554 1
#line 165 "/tmp/nsh/sh.y"
d562 1
a562 1
#line 169 "/tmp/nsh/sh.y"
d569 1
a569 1
#line 172 "/tmp/nsh/sh.y"
d571 1
a571 1
		if ( ! keyflag) {
d580 1
a580 1
#line 181 "/tmp/nsh/sh.y"
d587 1
a587 1
#line 186 "/tmp/nsh/sh.y"
d594 1
a594 1
#line 191 "/tmp/nsh/sh.y"
d601 1
a601 1
#line 197 "/tmp/nsh/sh.y"
d609 1
a609 1
#line 201 "/tmp/nsh/sh.y"
d617 1
a617 1
#line 205 "/tmp/nsh/sh.y"
d624 1
a624 1
#line 208 "/tmp/nsh/sh.y"
d631 1
a631 1
#line 211 "/tmp/nsh/sh.y"
d639 1
a639 1
#line 215 "/tmp/nsh/sh.y"
d646 1
a646 1
#line 218 "/tmp/nsh/sh.y"
d653 1
a653 1
#line 221 "/tmp/nsh/sh.y"
d660 1
a660 1
#line 227 "/tmp/nsh/sh.y"
d667 1
a667 1
#line 230 "/tmp/nsh/sh.y"
d674 1
a674 1
#line 236 "/tmp/nsh/sh.y"
d681 1
a681 1
#line 239 "/tmp/nsh/sh.y"
d688 1
a688 1
#line 245 "/tmp/nsh/sh.y"
d692 2
a693 1
		for (np=yypvt[-2].yu_node; np->n_next; np=np->n_next);
d700 1
a700 1
#line 252 "/tmp/nsh/sh.y"
d707 1
a707 1
#line 255 "/tmp/nsh/sh.y"
d714 1
a714 1
#line 261 "/tmp/nsh/sh.y"
d721 1
a721 1
#line 267 "/tmp/nsh/sh.y"
d728 1
a728 1
#line 270 "/tmp/nsh/sh.y"
d735 1
a735 1
#line 276 "/tmp/nsh/sh.y"
d742 1
a742 1
#line 279 "/tmp/nsh/sh.y"
d749 1
a749 1
#line 285 "/tmp/nsh/sh.y"
d756 1
a756 1
#line 288 "/tmp/nsh/sh.y"
d763 1
a763 1
#line 291 "/tmp/nsh/sh.y"
d770 1
a770 1
#line 297 "/tmp/nsh/sh.y"
d777 1
a777 1
#line 301 "/tmp/nsh/sh.y"
d784 1
a784 1
#line 307 "/tmp/nsh/sh.y"
d791 1
a791 1
#line 310 "/tmp/nsh/sh.y"
d805 3
a807 1
/* end of /lib/yyparse.c */
@


1.4
log
@shell 3.3 update bystevesf (functions?)
@
text
@d2 1
a2 1
#line 8 "/tmp/sh/sh.y"
d20 1
a20 1
#line 337 "/tmp/sh/sh.y"
d98 1
a98 1
readonly struct yytname yytnames[33] =
a123 2
	"_PARENS", 278, 
	"_RET", 279, 
d134 1
a134 1
readonly unsigned char yypdnt[81] = {
d139 6
a144 7
21, 22, 22, 22, 23, 24, 24, 26,
26, 26, 26, 27, 25, 28, 29, 29,
29, 29, 29, 29, 29, 29, 29, 30,
30, 36, 36, 32, 32, 32, 37, 38,
38, 31, 31, 35, 35, 35, 34, 34,
33, 33, 12, 12, 12, 5, 5, 39,
39 
d146 1
a146 1
readonly unsigned char yypn[81] = {
d151 6
a156 7
1, 2, 2, 1, 0, 2, 1, 1,
1, 1, 1, 1, 1, 1, 6, 5,
6, 5, 4, 6, 3, 3, 6, 2,
0, 2, 0, 3, 1, 0, 3, 3,
1, 2, 0, 5, 2, 0, 1, 0,
3, 2, 1, 1, 2, 1, 0, 1,
2 
d158 6
a163 6
readonly unsigned char yypgo[40] = {
0, 0, 2, 4, 12, 14, 48, 52,
54, 56, 58, 60, 64, 70, 72, 74,
76, 78, 82, 84, 86, 92, 96, 98,
100, 104, 120, 122, 124, 126, 128, 130,
136, 142, 154, 168, 172, 176, 178, 182
d165 25
a189 26
readonly unsigned int yygo[194] = {
YYOTHERS, 0x1, YYOTHERS, 0x6, 0x1, 0x7, 0x10, 0x2B,
0x11, 0x2C, YYOTHERS, 0x3C, YYOTHERS, 0x21, 0x13, 0x30,
0x16, 0x33, 0x1C, 0x37, 0x1D, 0x38, 0x1E, 0x39,
0x1F, 0x3A, 0x20, 0x3B, 0x3C, 0x4C, 0x42, 0x55,
0x4E, 0x62, 0x50, 0x65, 0x64, 0x78, 0x6B, 0x7B,
0x6D, 0x7D, 0x73, 0x81, 0x74, 0x82, YYOTHERS, 0x2E,
0x83, 0x87, YYOTHERS, 0x4F, YYOTHERS, 0x75, YYOTHERS, 0x76,
YYOTHERS, 0x22, YYOTHERS, 0x51, 0x48, 0x5C, YYOTHERS, 0x47,
0x45, 0x56, 0x4B, 0x5F, YYOTHERS, 0x48, YYOTHERS, 0x14,
YYOTHERS, 0x15, YYOTHERS, 0x17, YYOTHERS, 0x23, 0x55, 0x68,
YYOTHERS, 0x24, YYOTHERS, 0x6E, YYOTHERS, 0x6C, 0x14, 0x31,
0x15, 0x32, YYOTHERS, 0x8, 0x17, 0x34, YYOTHERS, 0x9,
YYOTHERS, 0xA, YYOTHERS, 0xB, 0x27, 0x43, YYOTHERS, 0x25,
0x4, 0xE, 0xB, 0x26, 0x1A, 0x35, 0x1B, 0x36,
0x27, 0x26, 0x4A, 0x5D, 0x5D, 0x5D, YYOTHERS, 0x58,
YYOTHERS, 0x27, YYOTHERS, 0x28, YYOTHERS, 0x29, YYOTHERS, 0x2A,
YYOTHERS, 0x4B, 0x4B, 0x60, 0x5F, 0x71, YYOTHERS, 0x52,
0x5C, 0x6F, 0x6C, 0x7C, YYOTHERS, 0x59, 0x21, 0x3D,
0x22, 0x3E, 0x4D, 0x61, 0x68, 0x79, 0x75, 0x83,
YYOTHERS, 0x3F, 0x24, 0x41, 0x4F, 0x63, 0x51, 0x66,
0x6E, 0x7E, 0x76, 0x84, 0x87, 0x88, YYOTHERS, 0x40,
0x88, 0x89, YYOTHERS, 0x77, 0x5D, 0x70, YYOTHERS, 0x5E,
YYOTHERS, 0x5A, 0x69, 0x7A, YYOTHERS, 0x5B, 0x35, 0x49,
0x3C, 0x4D, 0x45, 0x49, 0x46, 0x57, 0x4B, 0x49,
YYOTHERS, 0x2F 
d191 18
a208 19
readonly unsigned short yypa[138] = {
0, 2, 30, 34, 38, 42, 44, 46,
50, 56, 62, 66, 88, 90, 92, 94,
96, 120, 144, 144, 148, 148, 144, 152,
156, 158, 160, 160, 144, 144, 144, 144,
144, 152, 152, 164, 170, 176, 178, 182,
204, 206, 208, 210, 212, 214, 216, 218,
222, 224, 226, 228, 230, 232, 240, 244,
246, 248, 250, 252, 144, 254, 258, 262,
264, 268, 144, 272, 274, 276, 282, 286,
290, 294, 298, 302, 310, 312, 144, 338,
348, 354, 360, 364, 366, 368, 372, 374,
378, 382, 386, 390, 286, 298, 394, 258,
396, 400, 402, 404, 144, 410, 412, 414,
152, 416, 420, 144, 286, 144, 422, 430,
434, 436, 440, 144, 144, 152, 442, 448,
452, 454, 458, 460, 462, 464, 466, 468,
470, 472, 474, 254, 476, 478, 480, 338,
482, 488 
d210 57
a266 63
readonly unsigned int yyact[490] = {
0x2002, YYOTHERS, 0x2, YYEOFVAL, 0x4, 0x117, 0x5, 0xA,
0x2024, 0x104, 0x2024, 0x105, 0x2024, 0x106, 0x2024, 0x107,
0x2024, 0x10E, 0x2024, 0x10F, 0x2024, 0x112, 0x2024, 0x113,
0x2024, 0x114, 0x2024, 0x28, 0x3, YYOTHERS, 0x4000, YYEOFVAL,
0x6000, YYOTHERS, 0xC, 0xA, 0x6000, YYOTHERS, 0xD, 0x104,
0x2023, YYOTHERS, 0x2003, YYOTHERS, 0x2001, YYOTHERS, 0xF, 0xA,
0x6000, YYOTHERS, 0x10, 0x3B, 0x11, 0x26, 0x2017, YYOTHERS,
0x12, 0x102, 0x13, 0x103, 0x201C, YYOTHERS, 0x16, 0x7C,
0x2020, YYOTHERS, 0xD, 0x104, 0x18, 0x105, 0x19, 0x106,
0x1A, 0x107, 0x1B, 0x10E, 0x1C, 0x10F, 0x1D, 0x112,
0x1E, 0x113, 0x1F, 0x114, 0x20, 0x28, 0x6000, YYOTHERS,
0x2005, YYOTHERS, 0x202C, YYOTHERS, 0x2022, YYOTHERS, 0x2004, YYOTHERS,
0x4, 0x117, 0x2024, 0x104, 0x2024, 0x105, 0x2024, 0x106,
0x2024, 0x107, 0x2024, 0x10E, 0x2024, 0x10F, 0x2024, 0x112,
0x2024, 0x113, 0x2024, 0x114, 0x2024, 0x28, 0x2019, YYOTHERS,
0x4, 0x117, 0x2024, 0x104, 0x2024, 0x105, 0x2024, 0x106,
0x2024, 0x107, 0x2024, 0x10E, 0x2024, 0x10F, 0x2024, 0x112,
0x2024, 0x113, 0x2024, 0x114, 0x2024, 0x28, 0x2018, YYOTHERS,
0x2D, 0xA, 0x204E, YYOTHERS, 0x4, 0x117, 0x2024, YYOTHERS,
0x4, 0x117, 0x2024, YYOTHERS, 0x202B, YYOTHERS, 0x202D, YYOTHERS,
0xD, 0x104, 0x6000, YYOTHERS, 0x4, 0x117, 0x2047, 0x29,
0x2024, YYOTHERS, 0x4, 0x117, 0x2047, 0x115, 0x2024, YYOTHERS,
0x2021, YYOTHERS, 0x42, 0x116, 0x2028, YYOTHERS, 0xD, 0x104,
0x18, 0x105, 0x19, 0x106, 0x1A, 0x107, 0x1B, 0x10E,
0x1C, 0x10F, 0x1D, 0x112, 0x1E, 0x113, 0x1F, 0x114,
0x20, 0x28, 0x2026, YYOTHERS, 0x2027, YYOTHERS, 0x2029, YYOTHERS,
0x202A, YYOTHERS, 0x201B, YYOTHERS, 0x201A, YYOTHERS, 0x204F, YYOTHERS,
0x2011, YYOTHERS, 0x44, 0xA, 0x204D, YYOTHERS, 0x2010, YYOTHERS,
0x201D, YYOTHERS, 0x201E, YYOTHERS, 0x2012, YYOTHERS, 0x201F, YYOTHERS,
0x45, 0x110, 0x2D, 0xA, 0x46, 0x3B, 0x6000, YYOTHERS,
0x4A, 0x110, 0x2038, YYOTHERS, 0x2006, YYOTHERS, 0x200B, YYOTHERS,
0x200A, YYOTHERS, 0x2014, YYOTHERS, 0x2013, YYOTHERS, 0x4E, 0x111,
0x6000, YYOTHERS, 0x50, 0x108, 0x2042, YYOTHERS, 0x2046, YYOTHERS,
0x53, 0x29, 0x6000, YYOTHERS, 0x54, 0x115, 0x6000, YYOTHERS,
0x2025, YYOTHERS, 0x2050, YYOTHERS, 0x2D, 0xA, 0x46, 0x3B,
0x200E, YYOTHERS, 0x2D, 0xA, 0x204B, YYOTHERS, 0xD, 0x104,
0x203D, YYOTHERS, 0x45, 0x110, 0x6000, YYOTHERS, 0x44, 0xA,
0x204A, YYOTHERS, 0xD, 0x104, 0x203A, YYOTHERS, 0x50, 0x108,
0x2D, 0xA, 0x46, 0x3B, 0x2042, YYOTHERS, 0x2049, YYOTHERS,
0x4, 0x117, 0x44, 0xA, 0x204D, 0x101, 0x204D, 0x108,
0x204D, 0x109, 0x204D, 0x10A, 0x204D, 0x10B, 0x204D, 0x10C,
0x204D, 0x10D, 0x204D, 0x111, 0x204D, 0x115, 0x204D, 0x29,
0x2024, YYOTHERS, 0x4, 0x117, 0x2047, 0x10A, 0x2047, 0x10B,
0x2047, 0x10D, 0x2024, YYOTHERS, 0x2D, 0xA, 0x64, 0x3B,
0x204E, YYOTHERS, 0x4, 0x117, 0x2047, 0x109, 0x2024, YYOTHERS,
0x67, 0x109, 0x6000, YYOTHERS, 0x2034, YYOTHERS, 0x2035, YYOTHERS,
0x1F, 0x114, 0x6000, YYOTHERS, 0x200F, YYOTHERS, 0x44, 0xA,
0x204C, YYOTHERS, 0x69, 0x7C, 0x2040, YYOTHERS, 0x6A, 0x10C,
0x6000, YYOTHERS, 0x6B, 0x101, 0x203C, YYOTHERS, 0x6D, 0x29,
0x6000, YYOTHERS, 0x2037, YYOTHERS, 0x72, 0x109, 0x6000, YYOTHERS,
0x2048, YYOTHERS, 0x2007, YYOTHERS, 0x73, 0x10A, 0x74, 0x10B,
0x2045, YYOTHERS, 0x200C, YYOTHERS, 0x2041, YYOTHERS, 0x2032, YYOTHERS,
0xD, 0x104, 0x6000, YYOTHERS, 0x2031, YYOTHERS, 0x4, 0x117,
0x2047, 0x101, 0x2047, 0x10C, 0x2024, YYOTHERS, 0x7F, 0x10C,
0x6000, YYOTHERS, 0x2039, YYOTHERS, 0x80, 0x109, 0x6000, YYOTHERS,
0x202F, YYOTHERS, 0x4, 0x117, 0x2047, 0x10D, 0x2024, YYOTHERS,
0x85, 0x10D, 0x6000, YYOTHERS, 0x200D, YYOTHERS, 0x86, 0x115,
0x6000, YYOTHERS, 0x203F, YYOTHERS, 0x2016, YYOTHERS, 0x203B, YYOTHERS,
0x2015, YYOTHERS, 0x203E, YYOTHERS, 0x2030, YYOTHERS, 0x202E, YYOTHERS,
0x2008, YYOTHERS, 0x2009, YYOTHERS, 0x2044, YYOTHERS, 0x2033, YYOTHERS,
0x2036, YYOTHERS, 0x73, 0x10A, 0x74, 0x10B, 0x2045, YYOTHERS,
0x2043, YYOTHERS 
d268 11
a278 2
#define YYNOCHAR (-1000)
#define	yyerrok	yyerrflag=0
a279 3
int yystack[YYMAXDEPTH];
YYSTYPE yyvstack[YYMAXDEPTH], *yyv;
int yychar;
d281 9
a289 2
#ifdef YYDEBUG
int yydebug = 1;	/* No sir, not in the BSS */
a292 3
short yyerrflag;
int *yys;

d299 1
d413 1
a413 1
#line 46 "/tmp/sh/sh.y"
d422 1
a422 1
#line 52 "/tmp/sh/sh.y"
d431 1
a431 1
#line 57 "/tmp/sh/sh.y"
d441 1
a441 1
#line 73 "/tmp/sh/sh.y"
d446 1
a446 1
#line 74 "/tmp/sh/sh.y"
d451 1
a451 1
#line 96 "/tmp/sh/sh.y"
d458 1
a458 1
#line 99 "/tmp/sh/sh.y"
d465 1
a465 1
#line 102 "/tmp/sh/sh.y"
d472 1
a472 1
#line 105 "/tmp/sh/sh.y"
d479 1
a479 1
#line 108 "/tmp/sh/sh.y"
d486 1
a486 1
#line 114 "/tmp/sh/sh.y"
d493 1
a493 1
#line 117 "/tmp/sh/sh.y"
d500 1
a500 1
#line 120 "/tmp/sh/sh.y"
d507 1
a507 1
#line 126 "/tmp/sh/sh.y"
d514 1
a514 1
#line 129 "/tmp/sh/sh.y"
d521 1
a521 1
#line 135 "/tmp/sh/sh.y"
d529 1
a529 1
#line 139 "/tmp/sh/sh.y"
d531 2
a532 1
		yyval.yu_node = node(NRET, yypvt[0].yu_strp, NULL);
d537 1
a537 1
#line 142 "/tmp/sh/sh.y"
a538 15
		yyval.yu_node = node(NRET, "", NULL);
	}break;

case 36: {

#line 148 "/tmp/sh/sh.y"

		keypush();
		keyflag = 1;
	}break;

case 37: {

#line 155 "/tmp/sh/sh.y"

d546 1
a546 1
case 38: {
d548 1
a548 1
#line 162 "/tmp/sh/sh.y"
d553 1
a553 1
case 39: {
d555 1
a555 1
#line 168 "/tmp/sh/sh.y"
d560 1
a560 1
case 40: {
d562 1
a562 1
#line 171 "/tmp/sh/sh.y"
d568 1
a568 1
case 41: {
d570 1
a570 1
#line 175 "/tmp/sh/sh.y"
d575 1
a575 1
case 42: {
d577 1
a577 1
#line 178 "/tmp/sh/sh.y"
d586 1
a586 1
case 43: {
d588 1
a588 1
#line 187 "/tmp/sh/sh.y"
d593 1
a593 1
case 44: {
d595 1
a595 1
#line 192 "/tmp/sh/sh.y"
d600 1
a600 1
case 45: {
d602 1
a602 1
#line 197 "/tmp/sh/sh.y"
d607 1
a607 1
case 46: {
d609 1
a609 1
#line 203 "/tmp/sh/sh.y"
d615 1
a615 1
case 47: {
d617 1
a617 1
#line 207 "/tmp/sh/sh.y"
d623 1
a623 1
case 48: {
d625 1
a625 1
#line 211 "/tmp/sh/sh.y"
d630 1
a630 1
case 49: {
d632 1
a632 1
#line 214 "/tmp/sh/sh.y"
d637 1
a637 1
case 50: {
d639 1
a639 1
#line 217 "/tmp/sh/sh.y"
d645 1
a645 1
case 51: {
d647 1
a647 1
#line 221 "/tmp/sh/sh.y"
d652 1
a652 1
case 52: {
d654 1
a654 1
#line 224 "/tmp/sh/sh.y"
d659 1
a659 1
case 53: {
d661 1
a661 1
#line 227 "/tmp/sh/sh.y"
d666 1
a666 1
case 54: {
d668 1
a668 1
#line 230 "/tmp/sh/sh.y"
d670 1
a670 1
		yyval.yu_node = node(NFUNC, yypvt[-5].yu_strp, yypvt[-1].yu_node);
d673 1
a673 1
case 55: {
d675 1
a675 1
#line 236 "/tmp/sh/sh.y"
a676 7
		yyval.yu_node = yypvt[0].yu_node;
	}break;

case 56: {

#line 239 "/tmp/sh/sh.y"

d680 1
a680 1
case 57: {
d682 1
a682 1
#line 245 "/tmp/sh/sh.y"
d687 1
a687 1
case 58: {
d689 1
a689 1
#line 248 "/tmp/sh/sh.y"
d694 1
a694 1
case 59: {
d696 1
a696 1
#line 254 "/tmp/sh/sh.y"
d705 1
a705 1
case 60: {
d707 1
a707 1
#line 261 "/tmp/sh/sh.y"
d712 1
a712 1
case 61: {
d714 1
a714 1
#line 264 "/tmp/sh/sh.y"
d719 1
a719 1
case 62: {
d721 1
a721 1
#line 270 "/tmp/sh/sh.y"
d726 1
a726 1
case 63: {
d728 1
a728 1
#line 276 "/tmp/sh/sh.y"
d733 1
a733 1
case 64: {
d735 1
a735 1
#line 279 "/tmp/sh/sh.y"
d740 1
a740 1
case 65: {
d742 1
a742 1
#line 285 "/tmp/sh/sh.y"
d747 1
a747 1
case 66: {
d749 1
a749 1
#line 288 "/tmp/sh/sh.y"
d754 1
a754 1
case 67: {
d756 1
a756 1
#line 294 "/tmp/sh/sh.y"
d761 1
a761 1
case 68: {
d763 1
a763 1
#line 297 "/tmp/sh/sh.y"
d768 1
a768 1
case 69: {
d770 1
a770 1
#line 300 "/tmp/sh/sh.y"
d775 1
a775 1
case 70: {
d777 1
a777 1
#line 306 "/tmp/sh/sh.y"
d782 1
a782 1
case 71: {
d784 1
a784 1
#line 310 "/tmp/sh/sh.y"
d789 1
a789 1
case 72: {
d791 1
a791 1
#line 316 "/tmp/sh/sh.y"
d796 1
a796 1
case 73: {
d798 1
a798 1
#line 319 "/tmp/sh/sh.y"
d812 1
a812 3



@


1.3
log
@updates by steve for 4.0
@
text
@d2 1
a2 1
#line 8 "/tmp/nsh/sh.y"
d20 1
a20 1
#line 328 "/tmp/nsh/sh.y"
d98 1
a98 1
struct yytname yytnames[31] =
d124 2
d136 1
a136 1
unsigned char yypdnt[78] = {
d141 7
a147 6
21, 22, 23, 24, 24, 25, 25, 25,
25, 26, 27, 28, 29, 29, 29, 29,
29, 29, 29, 29, 30, 30, 36, 36,
32, 32, 32, 37, 38, 38, 31, 31,
35, 35, 35, 34, 34, 33, 33, 12,
12, 12, 5, 5, 39, 39 
d149 1
a149 1
unsigned char yypn[78] = {
d154 7
a160 6
1, 2, 0, 2, 1, 1, 1, 1,
1, 1, 1, 1, 6, 5, 6, 5,
4, 6, 3, 3, 2, 0, 2, 0,
3, 1, 0, 3, 3, 1, 2, 0,
5, 2, 0, 1, 0, 3, 2, 1,
1, 2, 1, 0, 1, 2 
d162 6
a167 6
unsigned char yypgo[40] = {
0, 0, 2, 4, 12, 14, 46, 50,
52, 54, 56, 58, 62, 68, 70, 72,
74, 76, 78, 80, 82, 88, 92, 94,
96, 100, 102, 104, 118, 120, 122, 124,
130, 136, 146, 160, 164, 168, 170, 174
d169 26
a194 25
unsigned int yygo[186] = {
-1000, 1, -1000, 5, 1, 6, 13, 41,
14, 42, -1000, 58, -1000, 31, 16, 46,
19, 49, 26, 53, 27, 54, 28, 55,
29, 56, 30, 57, 58, 73, 75, 94,
77, 97, 96, 115, 102, 117, 104, 119,
110, 123, 111, 124, -1000, 44, 125, 128,
-1000, 76, -1000, 112, -1000, 113, -1000, 32,
-1000, 78, 69, 88, -1000, 68, 66, 82,
72, 91, -1000, 69, -1000, 17, -1000, 18,
-1000, 20, -1000, 33, -1000, 34, -1000, 105,
-1000, 103, 17, 47, 18, 48, -1000, 7,
20, 50, -1000, 8, -1000, 9, -1000, 10,
36, 64, -1000, 35, -1000, 36, -1000, 37,
10, 38, 24, 51, 25, 52, 36, 38,
71, 89, 89, 89, -1000, 84, -1000, 39,
-1000, 40, -1000, 72, 72, 92, 91, 108,
-1000, 79, 88, 106, 103, 118, -1000, 85,
31, 59, 32, 60, 74, 93, 112, 125,
-1000, 61, 34, 63, 76, 95, 78, 98,
105, 120, 113, 126, 128, 129, -1000, 62,
129, 130, -1000, 114, 89, 107, -1000, 90,
-1000, 86, 100, 116, -1000, 87, 51, 70,
58, 74, 66, 70, 67, 83, 72, 70,
-1000, 45 
d196 19
a214 18
unsigned short yypa[131] = {
0, 2, 28, 32, 36, 38, 40, 44,
50, 56, 60, 82, 84, 86, 108, 130,
130, 134, 134, 130, 136, 138, 140, 142,
144, 144, 130, 130, 130, 130, 130, 136,
136, 148, 152, 156, 158, 180, 182, 184,
186, 188, 190, 192, 194, 196, 200, 202,
204, 206, 208, 210, 218, 222, 224, 226,
228, 230, 130, 232, 236, 240, 242, 246,
250, 252, 254, 260, 264, 268, 272, 276,
280, 288, 290, 130, 314, 322, 328, 332,
336, 338, 340, 342, 346, 350, 354, 358,
264, 276, 362, 236, 364, 368, 370, 372,
130, 378, 380, 382, 384, 388, 130, 264,
130, 390, 396, 400, 402, 406, 130, 130,
136, 408, 412, 416, 418, 420, 422, 424,
426, 428, 430, 432, 434, 232, 436, 438,
314, 440, 446 
d216 63
a278 57
unsigned int yyact[448] = {
8194, -1000, 2, -1, 4, 10, 8226, 260,
8226, 261, 8226, 262, 8226, 263, 8226, 270,
8226, 271, 8226, 274, 8226, 275, 8226, 276,
8226, 40, 3, -1000, 16384, -1, 24576, -1000,
11, 10, 24576, -1000, 8195, -1000, 8193, -1000,
12, 10, 24576, -1000, 13, 59, 14, 38,
8215, -1000, 15, 258, 16, 259, 8220, -1000,
19, 124, 8224, -1000, 21, 260, 22, 261,
23, 262, 24, 263, 25, 270, 26, 271,
27, 274, 28, 275, 29, 276, 30, 40,
24576, -1000, 8197, -1000, 8196, -1000, 8226, 260,
8226, 261, 8226, 262, 8226, 263, 8226, 270,
8226, 271, 8226, 274, 8226, 275, 8226, 276,
8226, 40, 8217, -1000, 8226, 260, 8226, 261,
8226, 262, 8226, 263, 8226, 270, 8226, 271,
8226, 274, 8226, 275, 8226, 276, 8226, 40,
8216, -1000, 43, 10, 8267, -1000, 8226, -1000,
8226, -1000, 8234, -1000, 8233, -1000, 8235, -1000,
21, 260, 24576, -1000, 8260, 41, 8226, -1000,
8260, 277, 8226, -1000, 8225, -1000, 21, 260,
22, 261, 23, 262, 24, 263, 25, 270,
26, 271, 27, 274, 28, 275, 29, 276,
30, 40, 8228, -1000, 8229, -1000, 8230, -1000,
8231, -1000, 8232, -1000, 8219, -1000, 8218, -1000,
8268, -1000, 8209, -1000, 65, 10, 8266, -1000,
8208, -1000, 8221, -1000, 8222, -1000, 8210, -1000,
8223, -1000, 66, 272, 43, 10, 67, 59,
24576, -1000, 71, 272, 8245, -1000, 8198, -1000,
8203, -1000, 8202, -1000, 8212, -1000, 8211, -1000,
75, 273, 24576, -1000, 77, 264, 8255, -1000,
8259, -1000, 80, 41, 24576, -1000, 81, 277,
24576, -1000, 8227, -1000, 8269, -1000, 43, 10,
67, 59, 8206, -1000, 43, 10, 8264, -1000,
21, 260, 8250, -1000, 66, 272, 24576, -1000,
65, 10, 8263, -1000, 21, 260, 8247, -1000,
77, 264, 43, 10, 67, 59, 8255, -1000,
8262, -1000, 65, 10, 8266, 257, 8266, 264,
8266, 265, 8266, 266, 8266, 267, 8266, 268,
8266, 269, 8266, 273, 8266, 277, 8266, 41,
8226, -1000, 8260, 266, 8260, 267, 8260, 269,
8226, -1000, 43, 10, 96, 59, 8267, -1000,
8260, 265, 8226, -1000, 99, 265, 24576, -1000,
8242, -1000, 8243, -1000, 8207, -1000, 65, 10,
8265, -1000, 100, 124, 8253, -1000, 101, 268,
24576, -1000, 102, 257, 8249, -1000, 104, 41,
24576, -1000, 8244, -1000, 109, 265, 24576, -1000,
8261, -1000, 8199, -1000, 110, 266, 111, 267,
8258, -1000, 8204, -1000, 8254, -1000, 8240, -1000,
21, 260, 24576, -1000, 8239, -1000, 8260, 257,
8260, 268, 8226, -1000, 121, 268, 24576, -1000,
8246, -1000, 122, 265, 24576, -1000, 8237, -1000,
8260, 269, 8226, -1000, 127, 269, 24576, -1000,
8205, -1000, 8252, -1000, 8214, -1000, 8248, -1000,
8213, -1000, 8251, -1000, 8238, -1000, 8236, -1000,
8200, -1000, 8201, -1000, 8257, -1000, 8241, -1000,
110, 266, 111, 267, 8258, -1000, 8256, -1000
d280 6
a285 8
/* (-lgl
 * 	COHERENT Version 3.2.2
 * 	Copyright (c) 1982, 1992 by Mark Williams Company.
 * 	All rights reserved. May not be copied without permission.
 -lgl) */
/*
 * /lib/yyparse.c
 */
d287 2
a288 13
#define	YYNOCHAR	(-1000)
#define	yyerrok		yyerrflag=0
#define	yyclearin	yylval=YYNOCHAR

int	yychar;
short	yyerrflag;
int	*yys;
int	yystack[YYMAXDEPTH];
YYSTYPE	yyvstack[YYMAXDEPTH];
YYSTYPE	*yyv;

#ifdef	YYDEBUG
int	yydebug = 1;	/* No sir, not in the BSS */
d292 3
a300 1

d414 1
a414 1
#line 46 "/tmp/nsh/sh.y"
d423 1
a423 1
#line 52 "/tmp/nsh/sh.y"
d432 1
a432 1
#line 57 "/tmp/nsh/sh.y"
d442 1
a442 1
#line 73 "/tmp/nsh/sh.y"
d447 1
a447 1
#line 74 "/tmp/nsh/sh.y"
d452 1
a452 1
#line 96 "/tmp/nsh/sh.y"
d459 1
a459 1
#line 99 "/tmp/nsh/sh.y"
d466 1
a466 1
#line 102 "/tmp/nsh/sh.y"
d473 1
a473 1
#line 105 "/tmp/nsh/sh.y"
d480 1
a480 1
#line 108 "/tmp/nsh/sh.y"
d487 1
a487 1
#line 114 "/tmp/nsh/sh.y"
d494 1
a494 1
#line 117 "/tmp/nsh/sh.y"
d501 1
a501 1
#line 120 "/tmp/nsh/sh.y"
d508 1
a508 1
#line 126 "/tmp/nsh/sh.y"
d515 1
a515 1
#line 129 "/tmp/nsh/sh.y"
d522 1
a522 1
#line 135 "/tmp/nsh/sh.y"
d530 1
a530 1
#line 142 "/tmp/nsh/sh.y"
d532 14
d550 1
a550 1
case 35: {
d552 1
a552 1
#line 149 "/tmp/nsh/sh.y"
d561 1
a561 1
case 36: {
d563 1
a563 1
#line 156 "/tmp/nsh/sh.y"
d568 1
a568 1
case 37: {
d570 1
a570 1
#line 162 "/tmp/nsh/sh.y"
d575 1
a575 1
case 38: {
d577 1
a577 1
#line 165 "/tmp/nsh/sh.y"
d583 1
a583 1
case 39: {
d585 1
a585 1
#line 169 "/tmp/nsh/sh.y"
d590 1
a590 1
case 40: {
d592 1
a592 1
#line 172 "/tmp/nsh/sh.y"
d601 1
a601 1
case 41: {
d603 1
a603 1
#line 181 "/tmp/nsh/sh.y"
d608 1
a608 1
case 42: {
d610 1
a610 1
#line 186 "/tmp/nsh/sh.y"
d615 1
a615 1
case 43: {
d617 1
a617 1
#line 191 "/tmp/nsh/sh.y"
d622 1
a622 1
case 44: {
d624 1
a624 1
#line 197 "/tmp/nsh/sh.y"
d630 1
a630 1
case 45: {
d632 1
a632 1
#line 201 "/tmp/nsh/sh.y"
d638 1
a638 1
case 46: {
d640 1
a640 1
#line 205 "/tmp/nsh/sh.y"
d645 1
a645 1
case 47: {
d647 1
a647 1
#line 208 "/tmp/nsh/sh.y"
d652 1
a652 1
case 48: {
d654 1
a654 1
#line 211 "/tmp/nsh/sh.y"
d660 1
a660 1
case 49: {
d662 1
a662 1
#line 215 "/tmp/nsh/sh.y"
d667 1
a667 1
case 50: {
d669 1
a669 1
#line 218 "/tmp/nsh/sh.y"
d674 1
a674 1
case 51: {
d676 1
a676 1
#line 221 "/tmp/nsh/sh.y"
d681 1
a681 1
case 52: {
d683 1
a683 1
#line 227 "/tmp/nsh/sh.y"
d685 7
d695 1
a695 1
case 53: {
d697 1
a697 1
#line 230 "/tmp/nsh/sh.y"
d702 1
a702 1
case 54: {
d704 1
a704 1
#line 236 "/tmp/nsh/sh.y"
d709 1
a709 1
case 55: {
d711 1
a711 1
#line 239 "/tmp/nsh/sh.y"
d716 1
a716 1
case 56: {
d718 1
a718 1
#line 245 "/tmp/nsh/sh.y"
d727 1
a727 1
case 57: {
d729 1
a729 1
#line 252 "/tmp/nsh/sh.y"
d734 1
a734 1
case 58: {
d736 1
a736 1
#line 255 "/tmp/nsh/sh.y"
d741 1
a741 1
case 59: {
d743 1
a743 1
#line 261 "/tmp/nsh/sh.y"
d748 1
a748 1
case 60: {
d750 1
a750 1
#line 267 "/tmp/nsh/sh.y"
d755 1
a755 1
case 61: {
d757 1
a757 1
#line 270 "/tmp/nsh/sh.y"
d762 1
a762 1
case 62: {
d764 1
a764 1
#line 276 "/tmp/nsh/sh.y"
d769 1
a769 1
case 63: {
d771 1
a771 1
#line 279 "/tmp/nsh/sh.y"
d776 1
a776 1
case 64: {
d778 1
a778 1
#line 285 "/tmp/nsh/sh.y"
d783 1
a783 1
case 65: {
d785 1
a785 1
#line 288 "/tmp/nsh/sh.y"
d790 1
a790 1
case 66: {
d792 1
a792 1
#line 291 "/tmp/nsh/sh.y"
d797 1
a797 1
case 67: {
d799 1
a799 1
#line 297 "/tmp/nsh/sh.y"
d804 1
a804 1
case 68: {
d806 1
a806 1
#line 301 "/tmp/nsh/sh.y"
d811 1
a811 1
case 69: {
d813 1
a813 1
#line 307 "/tmp/nsh/sh.y"
d818 1
a818 1
case 70: {
d820 1
a820 1
#line 310 "/tmp/nsh/sh.y"
d834 3
a836 1
/* end of /lib/yyparse.c */
@


1.2
log
@updated version provided by stevesf for v311
@
text
@d2 1
a2 1
#line 8 "sh.y"
d20 1
a20 1
#line 321 "sh.y"
d133 39
a171 114
unsigned yypdnt[76] = {
00, 01, 01, 02, 02, 02, 04, 06, 
07, 010, 011, 011, 012, 012, 013, 013, 
015, 016, 017, 020, 021, 022, 023, 03, 
03, 03, 03, 03, 024, 024, 024, 025, 
025, 026, 027, 030, 030, 031, 031, 031, 
031, 032, 033, 034, 035, 035, 035, 035, 
035, 035, 036, 036, 044, 044, 040, 040, 
040, 045, 046, 046, 037, 037, 043, 043, 
043, 042, 042, 041, 041, 014, 014, 014, 
05, 05, 047, 047  
} ;
unsigned yypn[76] = {
02, 02, 00, 01, 02, 02, 02, 02, 
02, 02, 02, 02, 02, 03, 01, 02, 
02, 02, 02, 02, 02, 02, 02, 01, 
02, 02, 03, 03, 01, 03, 03, 03, 
01, 02, 00, 02, 01, 01, 01, 01, 
01, 01, 01, 01, 06, 05, 04, 06, 
03, 03, 02, 00, 02, 00, 03, 01, 
00, 03, 03, 01, 02, 00, 05, 02, 
00, 01, 00, 03, 02, 01, 01, 02, 
01, 00, 01, 02  
} ;
unsigned yypgo[40] = {
00, 00, 02, 04, 014, 016, 056, 062, 
064, 066, 070, 072, 074, 0100, 0102, 0104, 
0106, 0110, 0112, 0114, 0116, 0124, 0130, 0132, 
0134, 0140, 0142, 0144, 0162, 0164, 0166, 0170, 
0174, 0200, 0212, 0230, 0234, 0240, 0242, 0246  
} ;
unsigned yygo[176] = {
0176030, 01, 0176030, 05, 01, 06, 015, 051, 
016, 052, 0176030, 072, 0176030, 037, 020, 056, 
023, 061, 032, 065, 033, 066, 034, 067, 
035, 070, 036, 071, 072, 0106, 0110, 0132, 
0112, 0135, 0134, 0156, 0143, 0160, 0145, 0162, 
0151, 0165, 0152, 0166, 0176030, 054, 0167, 0172, 
0176030, 0111, 0176030, 0153, 0176030, 0154, 0176030, 040, 
0176030, 0113, 0176030, 0103, 0105, 0130, 0176030, 0120, 
0176030, 021, 0176030, 022, 0176030, 024, 0176030, 041, 
0176030, 042, 0176030, 0146, 0176030, 0144, 021, 057, 
022, 060, 0176030, 07, 024, 062, 0176030, 010, 
0176030, 011, 0176030, 012, 044, 0100, 0176030, 043, 
0176030, 044, 0176030, 045, 012, 046, 030, 063, 
031, 064, 044, 046, 0104, 0126, 0126, 0126, 
0176030, 0122, 0176030, 047, 0176030, 050, 0176030, 0105, 
0130, 0150, 0176030, 0114, 0144, 0161, 0176030, 0123, 
037, 073, 040, 074, 0107, 0131, 0153, 0167, 
0176030, 075, 042, 077, 0111, 0133, 0113, 0136, 
0146, 0163, 0154, 0170, 0172, 0173, 0176030, 076, 
0173, 0174, 0176030, 0155, 0126, 0147, 0176030, 0127, 
0176030, 0124, 0141, 0157, 0176030, 0125, 072, 0107, 
0102, 0121, 0105, 0121, 0117, 0140, 0176030, 055  
} ;
unsigned yypa[125] = {
00, 02, 034, 040, 044, 046, 050, 054, 
062, 070, 074, 0122, 0124, 0126, 0154, 0202, 
0202, 0206, 0206, 0202, 0210, 0212, 0214, 0216, 
0220, 0220, 0202, 0202, 0202, 0202, 0202, 0210, 
0210, 0224, 0230, 0234, 0236, 0264, 0266, 0270, 
0272, 0274, 0276, 0300, 0302, 0304, 0310, 0312, 
0314, 0316, 0320, 0322, 0326, 0332, 0334, 0336, 
0340, 0342, 0202, 0344, 0350, 0354, 0356, 0362, 
0366, 0370, 0372, 0400, 0404, 0410, 0416, 0420, 
0202, 0450, 0460, 0466, 0472, 0476, 0500, 0502, 
0506, 0510, 0514, 0520, 0524, 0530, 0404, 0534, 
0350, 0536, 0540, 0542, 0202, 0550, 0552, 0554, 
0556, 0562, 0566, 0202, 0400, 0202, 0570, 0576, 
0600, 0202, 0202, 0210, 0604, 0610, 0614, 0616, 
0620, 0622, 0624, 0626, 0630, 0632, 0634, 0344, 
0636, 0640, 0450, 0642, 0650  
} ;
unsigned yyact[426] = {
020002, 0176030, 02, 0177777, 04, 012, 020042, 0404, 
020042, 0405, 020042, 0406, 020042, 0407, 020042, 0416, 
020042, 0417, 020042, 0422, 020042, 0423, 020042, 0424, 
020042, 050, 03, 0176030, 040000, 0177777, 060000, 0176030, 
013, 012, 060000, 0176030, 020003, 0176030, 020001, 0176030, 
014, 012, 060000, 0176030, 015, 073, 016, 046, 
020027, 0176030, 017, 0402, 020, 0403, 020034, 0176030, 
023, 0174, 020040, 0176030, 025, 0404, 026, 0405, 
027, 0406, 030, 0407, 031, 0416, 032, 0417, 
033, 0422, 034, 0423, 035, 0424, 036, 050, 
060000, 0176030, 020005, 0176030, 020004, 0176030, 020042, 0404, 
020042, 0405, 020042, 0406, 020042, 0407, 020042, 0416, 
020042, 0417, 020042, 0422, 020042, 0423, 020042, 0424, 
020042, 050, 020031, 0176030, 020042, 0404, 020042, 0405, 
020042, 0406, 020042, 0407, 020042, 0416, 020042, 0417, 
020042, 0422, 020042, 0423, 020042, 0424, 020042, 050, 
020030, 0176030, 053, 012, 020111, 0176030, 020042, 0176030, 
020042, 0176030, 020052, 0176030, 020051, 0176030, 020053, 0176030, 
025, 0404, 060000, 0176030, 020102, 051, 020042, 0176030, 
020102, 0425, 020042, 0176030, 020041, 0176030, 025, 0404, 
026, 0405, 027, 0406, 030, 0407, 031, 0416, 
032, 0417, 033, 0422, 034, 0423, 035, 0424, 
036, 050, 020044, 0176030, 020045, 0176030, 020046, 0176030, 
020047, 0176030, 020050, 0176030, 020033, 0176030, 020032, 0176030, 
020112, 0176030, 020021, 0176030, 0101, 012, 020110, 0176030, 
020020, 0176030, 020035, 0176030, 020036, 0176030, 020022, 0176030, 
020037, 0176030, 0102, 0420, 060000, 0176030, 0104, 0420, 
020063, 0176030, 020006, 0176030, 020013, 0176030, 020012, 0176030, 
020024, 0176030, 020023, 0176030, 0110, 0421, 060000, 0176030, 
0112, 0410, 020075, 0176030, 020101, 0176030, 0115, 051, 
060000, 0176030, 0116, 0425, 060000, 0176030, 020043, 0176030, 
020113, 0176030, 053, 012, 0117, 073, 020016, 0176030, 
025, 0404, 020070, 0176030, 025, 0404, 020065, 0176030, 
053, 012, 0117, 073, 060000, 0176030, 020104, 0176030, 
0101, 012, 020110, 0401, 020110, 0410, 020110, 0411, 
020110, 0412, 020110, 0413, 020110, 0414, 020110, 0415, 
020110, 0421, 020110, 0425, 020110, 051, 020042, 0176030, 
020102, 0412, 020102, 0413, 020102, 0415, 020042, 0176030, 
053, 012, 0134, 073, 020111, 0176030, 020102, 0411, 
020042, 0176030, 0137, 0411, 060000, 0176030, 020060, 0176030, 
d172 1
a172 1
020061, 0176030, 053, 012, 020106, 0176030, 020017, 0176030, 
d173 95
a267 14
0101, 012, 020105, 0176030, 0141, 0174, 020073, 0176030, 
0142, 0414, 060000, 0176030, 0143, 0401, 020067, 0176030, 
0145, 051, 060000, 0176030, 020062, 0176030, 020103, 0176030, 
020007, 0176030, 0151, 0412, 0152, 0413, 020100, 0176030, 
020014, 0176030, 020074, 0176030, 020056, 0176030, 0101, 012, 
020107, 0176030, 025, 0404, 060000, 0176030, 020055, 0176030, 
020102, 0401, 020102, 0414, 020042, 0176030, 020064, 0176030, 
0164, 0411, 060000, 0176030, 020102, 0415, 020042, 0176030, 
0171, 0415, 060000, 0176030, 020015, 0176030, 020072, 0176030, 
020026, 0176030, 020066, 0176030, 020025, 0176030, 020071, 0176030, 
020054, 0176030, 020010, 0176030, 020011, 0176030, 020077, 0176030, 
020057, 0176030, 0151, 0412, 0152, 0413, 020100, 0176030, 
020076, 0176030  
} ;
d269 2
a270 2
 * 	COHERENT Version 3.0
 * 	Copyright (c) 1982, 1990 by Mark Williams Company.
d273 6
a278 3
#include "action.h"
#define YYNOCHAR (-1000)
#define	yyerrok	yyerrflag=0
a279 3
int yystack[YYMAXDEPTH];
YYSTYPE yyvstack[YYMAXDEPTH], *yyv;
int yychar;
d281 9
a289 2
#ifdef YYDEBUG
int yydebug = 1;	/* No sir, not in the BSS */
a292 3
short yyerrflag;
int *yys;

d299 1
d413 1
a413 1
#line 46 "sh.y"
d422 1
a422 1
#line 52 "sh.y"
d431 1
a431 1
#line 57 "sh.y"
d441 1
a441 1
#line 73 "sh.y"
d446 1
a446 1
#line 74 "sh.y"
d451 1
a451 1
#line 96 "sh.y"
d458 1
a458 1
#line 99 "sh.y"
d465 1
a465 1
#line 102 "sh.y"
d472 1
a472 1
#line 105 "sh.y"
d479 1
a479 1
#line 108 "sh.y"
d486 1
a486 1
#line 114 "sh.y"
d493 1
a493 1
#line 117 "sh.y"
d500 1
a500 1
#line 120 "sh.y"
d507 1
a507 1
#line 126 "sh.y"
d514 1
a514 1
#line 129 "sh.y"
d521 1
a521 1
#line 135 "sh.y"
d529 1
a529 1
#line 142 "sh.y"
d537 1
a537 1
#line 149 "sh.y"
d548 1
a548 1
#line 156 "sh.y"
d555 1
a555 1
#line 162 "sh.y"
d562 1
a562 1
#line 165 "sh.y"
d570 1
a570 1
#line 169 "sh.y"
d577 1
a577 1
#line 172 "sh.y"
d588 1
a588 1
#line 181 "sh.y"
d595 1
a595 1
#line 186 "sh.y"
d602 1
a602 1
#line 191 "sh.y"
d609 1
a609 1
#line 197 "sh.y"
d617 1
a617 1
#line 201 "sh.y"
d619 2
a620 1
		yyval.yu_node = node(NCASE, yypvt[-3].yu_strp, yypvt[-1].yu_node);
d625 1
a625 1
#line 204 "sh.y"
d627 14
d645 1
a645 1
case 47: {
d647 1
a647 1
#line 208 "sh.y"
d652 1
a652 1
case 48: {
d654 1
a654 1
#line 211 "sh.y"
d659 1
a659 1
case 49: {
d661 1
a661 1
#line 214 "sh.y"
d666 1
a666 1
case 50: {
d668 1
a668 1
#line 220 "sh.y"
d673 1
a673 1
case 51: {
d675 1
a675 1
#line 223 "sh.y"
d680 1
a680 1
case 52: {
d682 1
a682 1
#line 229 "sh.y"
d687 1
a687 1
case 53: {
d689 1
a689 1
#line 232 "sh.y"
d694 1
a694 1
case 54: {
d696 1
a696 1
#line 238 "sh.y"
d705 1
a705 1
case 55: {
d707 1
a707 1
#line 245 "sh.y"
d712 1
a712 1
case 56: {
d714 1
a714 1
#line 248 "sh.y"
d719 1
a719 1
case 57: {
d721 1
a721 1
#line 254 "sh.y"
d726 1
a726 1
case 58: {
d728 1
a728 1
#line 260 "sh.y"
d733 1
a733 1
case 59: {
d735 1
a735 1
#line 263 "sh.y"
d740 1
a740 1
case 60: {
d742 1
a742 1
#line 269 "sh.y"
d747 1
a747 1
case 61: {
d749 1
a749 1
#line 272 "sh.y"
d754 1
a754 1
case 62: {
d756 1
a756 1
#line 278 "sh.y"
d761 1
a761 1
case 63: {
d763 1
a763 1
#line 281 "sh.y"
d768 1
a768 1
case 64: {
d770 1
a770 1
#line 284 "sh.y"
d775 1
a775 1
case 65: {
d777 1
a777 1
#line 290 "sh.y"
d782 1
a782 1
case 66: {
d784 1
a784 1
#line 294 "sh.y"
d789 1
a789 1
case 67: {
d791 1
a791 1
#line 300 "sh.y"
d796 1
a796 1
case 68: {
d798 1
a798 1
#line 303 "sh.y"
d812 1
a812 3



@


1.1
log
@Initial revision
@
text
@d20 1
a20 1
#line 319 "sh.y"
d98 1
a98 1
struct yytname yytnames[30] =
d130 1
a130 1
	NULL,
d133 1
a133 1
unsigned yypdnt[74] = {
d135 9
a143 9
07, 010, 011, 011, 012, 012, 013, 014, 
015, 016, 017, 020, 021, 03, 03, 03, 
03, 03, 022, 022, 022, 023, 023, 024, 
025, 026, 026, 027, 027, 027, 027, 030, 
031, 032, 033, 033, 033, 033, 033, 033, 
034, 034, 043, 043, 037, 037, 037, 044, 
045, 045, 036, 036, 042, 042, 042, 041, 
041, 040, 040, 035, 035, 035, 05, 05, 
046, 046, 
d145 1
a145 1
unsigned yypn[74] = {
d147 9
a155 9
02, 02, 02, 02, 02, 03, 02, 02, 
02, 02, 02, 02, 02, 01, 02, 02, 
03, 03, 01, 03, 03, 03, 01, 02, 
00, 02, 01, 01, 01, 01, 01, 01, 
01, 01, 06, 06, 04, 06, 03, 03, 
02, 00, 02, 00, 03, 01, 00, 03, 
03, 01, 02, 00, 05, 02, 00, 01, 
00, 03, 02, 01, 01, 02, 01, 00, 
01, 02, 
d157 1
a157 1
unsigned yypgo[39] = {
d159 4
a162 4
064, 066, 070, 072, 074, 076, 0100, 0102, 
0104, 0106, 0110, 0116, 0122, 0124, 0126, 0132, 
0134, 0136, 0154, 0156, 0160, 0162, 0166, 0172, 
0176, 0210, 0226, 0232, 0236, 0240, 0244, 
d164 1
a164 1
unsigned yygo[174] = {
d168 19
a186 19
035, 070, 036, 071, 072, 0105, 0107, 0125, 
0111, 0130, 0127, 0147, 0142, 0157, 0143, 0160, 
0152, 0165, 0154, 0167, 0176030, 054, 0161, 0171, 
0176030, 0110, 0176030, 0144, 0176030, 0145, 0176030, 040, 
0176030, 0112, 0176030, 021, 0176030, 022, 0176030, 024, 
0176030, 041, 0176030, 042, 0176030, 0155, 0176030, 0153, 
021, 057, 022, 060, 0176030, 07, 024, 062, 
0176030, 010, 0176030, 011, 0176030, 012, 044, 0100, 
0176030, 043, 0176030, 044, 0176030, 045, 012, 046, 
030, 063, 031, 064, 044, 046, 0103, 0121, 
0121, 0121, 0176030, 0134, 0176030, 047, 0176030, 050, 
0176030, 0104, 0104, 0123, 0176030, 0117, 0123, 0141, 
0176030, 0113, 0153, 0166, 0176030, 0135, 037, 073, 
040, 074, 0106, 0124, 0144, 0161, 0176030, 075, 
042, 077, 0110, 0126, 0112, 0131, 0145, 0162, 
0155, 0170, 0171, 0172, 0176030, 076, 0172, 0173, 
0176030, 0146, 0121, 0140, 0176030, 0122, 0176030, 0136, 
0150, 0164, 0176030, 0137, 072, 0106, 0102, 0120, 
0104, 0120, 0116, 0133, 0176030, 055, 
d188 1
a188 1
unsigned yypa[124] = {
d197 8
a204 8
0366, 0370, 0372, 0400, 0372, 0404, 0406, 0202, 
0436, 0446, 0454, 0460, 0464, 0466, 0470, 0474, 
0500, 0504, 0510, 0350, 0512, 0514, 0516, 0202, 
0524, 0526, 0530, 0532, 0536, 0542, 0546, 0552, 
0556, 0560, 0202, 0202, 0210, 0564, 0570, 0574, 
0576, 0602, 0202, 0474, 0202, 0604, 0612, 0614, 
0616, 0344, 0620, 0622, 0624, 0626, 0630, 0632, 
0634, 0436, 0636, 0644, 
d206 5
a210 5
unsigned yyact[422] = {
020002, 0176030, 02, 0177777, 04, 012, 020040, 0404, 
020040, 0405, 020040, 0406, 020040, 0407, 020040, 0416, 
020040, 0417, 020040, 0422, 020040, 0423, 020040, 0424, 
020040, 050, 03, 0176030, 040000, 0177777, 060000, 0176030, 
d213 2
a214 2
020025, 0176030, 017, 0402, 020, 0403, 020032, 0176030, 
023, 0174, 020036, 0176030, 025, 0404, 026, 0405, 
d217 10
a226 10
060000, 0176030, 020005, 0176030, 020004, 0176030, 020040, 0404, 
020040, 0405, 020040, 0406, 020040, 0407, 020040, 0416, 
020040, 0417, 020040, 0422, 020040, 0423, 020040, 0424, 
020040, 050, 020027, 0176030, 020040, 0404, 020040, 0405, 
020040, 0406, 020040, 0407, 020040, 0416, 020040, 0417, 
020040, 0422, 020040, 0423, 020040, 0424, 020040, 050, 
020026, 0176030, 053, 012, 020107, 0176030, 020040, 0176030, 
020040, 0176030, 020050, 0176030, 020047, 0176030, 020051, 0176030, 
025, 0404, 060000, 0176030, 020100, 051, 020040, 0176030, 
020100, 0425, 020040, 0176030, 020037, 0176030, 025, 0404, 
d229 32
a260 31
036, 050, 020042, 0176030, 020043, 0176030, 020044, 0176030, 
020045, 0176030, 020046, 0176030, 020031, 0176030, 020030, 0176030, 
020110, 0176030, 020017, 0176030, 0101, 012, 020106, 0176030, 
020016, 0176030, 020033, 0176030, 020034, 0176030, 020020, 0176030, 
020035, 0176030, 0102, 0420, 060000, 0176030, 0103, 0420, 
020061, 0176030, 020006, 0176030, 020013, 0176030, 020012, 0176030, 
020022, 0176030, 020021, 0176030, 0107, 0421, 060000, 0176030, 
0111, 0410, 020073, 0176030, 020077, 0176030, 0114, 051, 
060000, 0176030, 0115, 0425, 060000, 0176030, 020041, 0176030, 
020111, 0176030, 053, 012, 0116, 073, 060000, 0176030, 
025, 0404, 020063, 0176030, 020102, 0176030, 0101, 012, 
020106, 0401, 020106, 0410, 020106, 0411, 020106, 0412, 
020106, 0413, 020106, 0414, 020106, 0415, 020106, 0421, 
020106, 0425, 020106, 051, 020040, 0176030, 020100, 0412, 
020100, 0413, 020100, 0415, 020040, 0176030, 053, 012, 
0127, 073, 020107, 0176030, 020100, 0411, 020040, 0176030, 
0132, 0411, 060000, 0176030, 020056, 0176030, 020057, 0176030, 
053, 012, 020104, 0176030, 025, 0404, 020066, 0176030, 
0101, 012, 020103, 0176030, 025, 0404, 020063, 0176030, 
020060, 0176030, 020101, 0176030, 020007, 0176030, 0142, 0412, 
0143, 0413, 020076, 0176030, 020014, 0176030, 020072, 0176030, 
020054, 0176030, 0101, 012, 020105, 0176030, 0150, 0174, 
020071, 0176030, 0151, 0414, 060000, 0176030, 0152, 0401, 
020065, 0176030, 0154, 051, 060000, 0176030, 020062, 0176030, 
0156, 0411, 060000, 0176030, 020100, 0415, 020040, 0176030, 
0163, 0415, 060000, 0176030, 020015, 0176030, 025, 0404, 
060000, 0176030, 020053, 0176030, 020100, 0401, 020100, 0414, 
020040, 0176030, 020052, 0176030, 020010, 0176030, 020011, 0176030, 
020075, 0176030, 020055, 0176030, 020070, 0176030, 020024, 0176030, 
020064, 0176030, 020023, 0176030, 020067, 0176030, 0142, 0412, 
0143, 0413, 020076, 0176030, 020074, 0176030, 
d263 3
a265 11
 * 	The information contained herein is a trade secret of Mark Williams
 * 	Company, and  is confidential information.  It is provided  under a
 * 	license agreement,  and may be  copied or disclosed  only under the
 * 	terms of  that agreement.  Any  reproduction or disclosure  of this
 * 	material without the express written authorization of Mark Williams
 * 	Company or persuant to the license agreement is unlawful.
 * 
 * 	Coherent Version 2.3.38
 * 	Copyright (c) 1982, 1983, 1984.
 * 	An unpublished work by Mark Williams Company, Chicago.
 * 	All rights reserved.
d438 1
a438 1
case 21: {
d440 1
a440 1
#line 94 "sh.y"
d445 1
a445 1
case 22: {
d447 1
a447 1
#line 97 "sh.y"
d452 1
a452 1
case 23: {
d454 1
a454 1
#line 100 "sh.y"
d459 1
a459 1
case 24: {
d461 1
a461 1
#line 103 "sh.y"
d466 1
a466 1
case 25: {
d468 1
a468 1
#line 106 "sh.y"
d473 1
a473 1
case 26: {
d475 1
a475 1
#line 112 "sh.y"
d480 1
a480 1
case 27: {
d482 1
a482 1
#line 115 "sh.y"
d487 1
a487 1
case 28: {
d489 1
a489 1
#line 118 "sh.y"
d494 1
a494 1
case 29: {
d496 1
a496 1
#line 124 "sh.y"
d501 1
a501 1
case 30: {
d503 1
a503 1
#line 127 "sh.y"
d508 1
a508 1
case 31: {
d510 1
a510 1
#line 133 "sh.y"
d516 1
a516 1
case 32: {
d518 1
a518 1
#line 140 "sh.y"
d524 1
a524 1
case 33: {
d526 1
a526 1
#line 147 "sh.y"
d535 1
a535 1
case 34: {
d537 1
a537 1
#line 154 "sh.y"
d542 1
a542 1
case 35: {
d544 1
a544 1
#line 160 "sh.y"
d549 1
a549 1
case 36: {
d551 1
a551 1
#line 163 "sh.y"
d557 1
a557 1
case 37: {
d559 1
a559 1
#line 167 "sh.y"
d564 1
a564 1
case 38: {
d566 1
a566 1
#line 170 "sh.y"
d575 1
a575 1
case 39: {
d577 1
a577 1
#line 179 "sh.y"
d582 1
a582 1
case 40: {
d584 1
a584 1
#line 184 "sh.y"
d589 1
a589 1
case 41: {
d591 1
a591 1
#line 189 "sh.y"
d596 1
a596 1
case 42: {
d598 1
a598 1
#line 195 "sh.y"
d604 1
a604 1
case 43: {
d606 1
a606 1
#line 199 "sh.y"
d608 1
a608 1
		yyval.yu_node = node(NCASE, yypvt[-4].yu_strp, yypvt[-1].yu_node);
d611 1
a611 1
case 44: {
d613 1
a613 1
#line 202 "sh.y"
d619 1
a619 1
case 45: {
d621 1
a621 1
#line 206 "sh.y"
d626 1
a626 1
case 46: {
d628 1
a628 1
#line 209 "sh.y"
d633 1
a633 1
case 47: {
d635 1
a635 1
#line 212 "sh.y"
d640 1
a640 1
case 48: {
d642 1
a642 1
#line 218 "sh.y"
d647 1
a647 1
case 49: {
d649 1
a649 1
#line 221 "sh.y"
d654 1
a654 1
case 50: {
d656 1
a656 1
#line 227 "sh.y"
d661 1
a661 1
case 51: {
d663 1
a663 1
#line 230 "sh.y"
d668 1
a668 1
case 52: {
d670 1
a670 1
#line 236 "sh.y"
d679 1
a679 1
case 53: {
d681 1
a681 1
#line 243 "sh.y"
d686 1
a686 1
case 54: {
d688 1
a688 1
#line 246 "sh.y"
d693 1
a693 1
case 55: {
d695 1
a695 1
#line 252 "sh.y"
d700 1
a700 1
case 56: {
d702 1
a702 1
#line 258 "sh.y"
d707 1
a707 1
case 57: {
d709 1
a709 1
#line 261 "sh.y"
d714 1
a714 1
case 58: {
d716 1
a716 1
#line 267 "sh.y"
d721 1
a721 1
case 59: {
d723 1
a723 1
#line 270 "sh.y"
d728 1
a728 1
case 60: {
d730 1
a730 1
#line 276 "sh.y"
d735 1
a735 1
case 61: {
d737 1
a737 1
#line 279 "sh.y"
d742 1
a742 1
case 62: {
d744 1
a744 1
#line 282 "sh.y"
d749 1
a749 1
case 63: {
d751 1
a751 1
#line 288 "sh.y"
d756 1
a756 1
case 64: {
d758 1
a758 1
#line 292 "sh.y"
d763 1
a763 1
case 65: {
d765 1
a765 1
#line 298 "sh.y"
d770 1
a770 1
case 66: {
d772 1
a772 1
#line 301 "sh.y"
@
