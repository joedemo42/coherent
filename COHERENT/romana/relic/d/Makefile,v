head     1.1;
access   ;
symbols  ;
locks    ;
comment  @@;


1.1
date     91.03.12.21.05.34;  author bin;  state Exp;
branches ;
next	;


desc
@provided by stevesf. uses SRCPATH. designed to make all
executables. I haven't had time to look at it so It's here until
I do...
@



1.1
log
@Initial revision
@
text
@# /usr/src/cmd/Makefile 2/20/91
# Makefile for COHERENT commands.
# Preliminary, does not yet make most subdirectories.

# Commands in /bin compiled from single sources.
BIN=\
	ac\
	ar\
	at\
	bad\
	banner\
	basename\
	c\
	cal\
	calendar\
	cat\
	chgrp\
	chmod\
	chown\
	cmp\
	col\
	comm\
	conv\
	cp\
	cpdir\
	crypt\
	date\
	dd\
	deroff\
	df\
	du\
	echo\
	egrep\
	epson\
	expr\
	factor\
	file\
	fixstack\
	fnkey\
	from\
	grep\
	help\
	join\
	kill\
	lc\
	ln\
	look\
	ls\
	m4\
	man\
	mesg\
	mkdir\
	msg\
	mv\
	newgrp\
	nm\
	od\
	pr\
	prep\
	prof\
	pwd\
	quot\
	ranlib\
	rev\
	rm\
	rmdir\
	sa\
	scat\
	size\
	sleep\
	sort\
	split\
	strings\
	strip\
	stty\
	sum\
	sync\
	tail\
	tar\
	tee\
	time\
	touch\
	tr\
	tty\
	typo\
	uniq\
	wc\
	who\
	write\
	yes

# Commands in /bin built by making subdirectories.
BIN2=\
	awk\
	check\
	dcheck\
	diff\
	dos\
	dump\
	dumpdate\
	dumpdir\
	ed\
	hp\
	hpr\
	hpskip\
	icheck\
	lex\
	lpr\
	lpskip\
	ncheck\
	restor\
	sed\
	tsort\
	yacc

# Shell scripts in /bin, the source is the executable.
BINSH=\
	diff3\
	false\
	mount\
	phone\
	shutdown\
	spell\
	true\
	umount

# Commands in /bin not yet included.
BINMISSING=\
	as\
	bc\
	cc\
	compress\
	db\
	dc\
	find\
	head\
	ld\
	login\
	mail\
	make\
	msgs\
	nroff\
	passwd\
	ps\
	rmail\
	sh\
	su\
	test\
	troff\
	uncompress\
	units\
	zcat

# Commands in /etc compiled from single sources.
ETC=\
	accton\
	cron\
	mkfs\
	mknod\
	mount\
	umount\
	update\
	wall

# Commands in /etc built from subdirectories.
ETC2=\
	clri

# Commands in /usr/lib compiled from single sources.
USRLIB=\
	atrun

# Commands in /usr/lib built from subdirectories.
USRLIB2=\
	diff3\
	diffh\
	hpd\
	lpd

# Objects built from subdirectories but not currently distributed.
EXTRA=\
	prps

# Sources in /usr/src/cmd but executables not currently distributed.
UNUSED=\
	connect.c\
	detab.c\
	learn.c\
	load.c\
	mf.c\
	mkproto.c\
	more.c\
	uload.c

# Primary target.
all:	$(BIN) $(ETC) $(USRLIB)
	make SRCPATH=$(SRCPATH)/awk
	make SRCPATH=$(SRCPATH)/check
	make SRCPATH=$(SRCPATH)/diff
	make SRCPATH=$(SRCPATH)/dos
	make SRCPATH=$(SRCPATH)/dump
	make SRCPATH=$(SRCPATH)/ed
	make SRCPATH=$(SRCPATH)/grep
	make SRCPATH=$(SRCPATH)/lex
	make SRCPATH=$(SRCPATH)/lpr
	make SRCPATH=$(SRCPATH)/sed
	make SRCPATH=$(SRCPATH)/tsort
	make SRCPATH=$(SRCPATH)/yacc
	: /usr/src/cmd done.

# Secondary targets.
# The actions would not be necessary if make could deal with null extensions.
ac:	ac.c
	$(CC) $(LDFLAGS) -o $@@ $?
accton:	accton.c
	$(CC) $(LDFLAGS) -o $@@ $?
ar:	ar.c
	$(CC) $(LDFLAGS) -o $@@ $?
at:	at.c
	$(CC) $(LDFLAGS) -o $@@ $?
atrun:	atrun.c
	$(CC) $(LDFLAGS) -o $@@ $?
bad:	bad.c
	$(CC) $(LDFLAGS) -o $@@ $?
banner:	banner.c
	$(CC) $(LDFLAGS) -o $@@ $?
basename:	basename.c
	$(CC) $(LDFLAGS) -o $@@ $?
c:	c.c
	$(CC) $(LDFLAGS) -o $@@ $?
cal:	cal.c
	$(CC) $(LDFLAGS) -o $@@ $?
calendar:	calendar.c
	$(CC) $(LDFLAGS) -o $@@ $?
cat:	cat.c
	$(CC) $(LDFLAGS) -o $@@ $?
chgrp:	chgrp.c
	$(CC) $(LDFLAGS) -o $@@ $?
chmod:	chmod.c
	$(CC) $(LDFLAGS) -o $@@ $?
chown:	chown.c
	$(CC) $(LDFLAGS) -o $@@ $?
cmp:	cmp.c
	$(CC) $(LDFLAGS) -o $@@ $?
col:	col.c
	$(CC) $(LDFLAGS) -o $@@ $?
comm:	comm.c
	$(CC) $(LDFLAGS) -o $@@ $?
conv:	conv.o
	$(CC) $(LDFLAGS) -o $@@ $?
conv.o:	conv.y
cp:	cp.c
	$(CC) $(LDFLAGS) -o $@@ $?
cpdir:	cpdir.c
	$(CC) $(LDFLAGS) -o $@@ $?
cron:	cron.c
	$(CC) $(LDFLAGS) -o $@@ $?
crypt:	crypt.c
	$(CC) $(LDFLAGS) -o $@@ $?
date:	date.c
	$(CC) $(LDFLAGS) -o $@@ $?
dd:	dd.c
	$(CC) $(LDFLAGS) -o $@@ $?
deroff:	deroff.c
	$(CC) $(LDFLAGS) -o $@@ $?
df:	df.c
	$(CC) $(LDFLAGS) -o $@@ $?
du:	du.c
	$(CC) $(LDFLAGS) -o $@@ $?
echo:	echo.c
	$(CC) $(LDFLAGS) -o $@@ $?
egrep:	egrep.c
	$(CC) $(LDFLAGS) -o $@@ $?
epson:	i8086/epson.c
	$(CC) $(LDFLAGS) -o $@@ $?
expr:	expr.o
	$(CC) $(LDFLAGS) -o $@@ $?
expr.o:	expr.y
factor:	factor.c
	$(CC) $(LDFLAGS) -o $@@ $? -lm
file:	file.c
	$(CC) $(LDFLAGS) -o $@@ $?
fixstack:	fixstack.c
	$(CC) $(LDFLAGS) -o $@@ $?
fnkey:	i8086/fnkey.c
	$(CC) $(LDFLAGS) -o $@@ $?
from:	from.c
	$(CC) $(LDFLAGS) -o $@@ $?
help:	help.c
	$(CC) $(LDFLAGS) -o $@@ $?
join:	join.c
	$(CC) $(LDFLAGS) -o $@@ $?
kill:	kill.c
	$(CC) $(LDFLAGS) -o $@@ $?
lc:	lc.c
	$(CC) $(LDFLAGS) -o $@@ $?
ln:	ln.c
	$(CC) $(LDFLAGS) -o $@@ $?
look:	look.c
	$(CC) $(LDFLAGS) -o $@@ $?
# N.B. cmd/ls.c is old source, current is in cmd/skut/ls.c.
ls:	skut/ls.c
	$(CC) $(LDFLAGS) -o $@@ $?
m4:	m4.c
	$(CC) $(LDFLAGS) -o $@@ $?
man:	man.c
	$(CC) $(LDFLAGS) -o $@@ $?
mesg:	mesg.c
	$(CC) $(LDFLAGS) -o $@@ $?
mkdir:	mkdir.c
	$(CC) $(LDFLAGS) -o $@@ $?
mkfs:	mkfs.c
	$(CC) $(LDFLAGS) -o $@@ $?
mknod:	mknod.c
	$(CC) $(LDFLAGS) -o $@@ $?
mount:	mount.c
	$(CC) $(LDFLAGS) -o $@@ $?
msg:	msg.c
	$(CC) $(LDFLAGS) -o $@@ $?
mv:	mv.c
	$(CC) $(LDFLAGS) -o $@@ $?
newgrp:	newgrp.c
	$(CC) $(LDFLAGS) -o $@@ $?
nm:	nm.c
	$(CC) $(LDFLAGS) -o $@@ $?
od:	od.c
	$(CC) $(LDFLAGS) -o $@@ $?
pr:	pr.c
	$(CC) $(LDFLAGS) -o $@@ $?
prep:	prep.c
	$(CC) $(LDFLAGS) -o $@@ $?
prof:	prof.c
	$(CC) $(LDFLAGS) -o $@@ $?
pwd:	pwd.c
	$(CC) $(LDFLAGS) -o $@@ $?
quot:	quot.c
	$(CC) $(LDFLAGS) -o $@@ $?
ranlib:	ranlib.c
	$(CC) $(LDFLAGS) -o $@@ $?
rev:	rev.c
	$(CC) $(LDFLAGS) -o $@@ $?
rm:	rm.c
	$(CC) $(LDFLAGS) -o $@@ $?
rmdir:	rmdir.c
	$(CC) $(LDFLAGS) -o $@@ $?
sa:	sa.c
	$(CC) $(LDFLAGS) -o $@@ $?
scat:	scat.c
	$(CC) $(LDFLAGS) -o $@@ $?
size:	size.c
	$(CC) $(LDFLAGS) -o $@@ $?
sleep:	sleep.c
	$(CC) $(LDFLAGS) -o $@@ $?
sort:	sort.c
	$(CC) $(LDFLAGS) -o $@@ $?
split:	split.c
	$(CC) $(LDFLAGS) -o $@@ $?
strings:	strings.c
	$(CC) $(LDFLAGS) -o $@@ $?
strip:	strip.c
	$(CC) $(LDFLAGS) -o $@@ $?
stty:	stty.c
	$(CC) $(LDFLAGS) -o $@@ $?
sum:	sum.c
	$(CC) $(LDFLAGS) -o $@@ $?
sync:	sync.c
	$(CC) $(LDFLAGS) -o $@@ $?
tail:	tail.c
	$(CC) $(LDFLAGS) -o $@@ $?
tar:	tar.c
	$(CC) $(LDFLAGS) -o $@@ $?
tee:	tee.c
	$(CC) $(LDFLAGS) -o $@@ $?
time:	time.c
	$(CC) $(LDFLAGS) -o $@@ $?
touch:	touch.c
	$(CC) $(LDFLAGS) -o $@@ $?
tr:	tr.c
	$(CC) $(LDFLAGS) -o $@@ $?
tty:	tty.c
	$(CC) $(LDFLAGS) -o $@@ $?
typo:	typo.c
	$(CC) $(LDFLAGS) -o $@@ $?
umount:	umount.c
	$(CC) $(LDFLAGS) -o $@@ $?
uniq:	uniq.c
	$(CC) $(LDFLAGS) -o $@@ $?
update:	update.c
	$(CC) $(LDFLAGS) -o $@@ $?
wall:	wall.c
	$(CC) $(LDFLAGS) -o $@@ $?
wc:	wc.c
	$(CC) $(LDFLAGS) -o $@@ $?
who:	who.c
	$(CC) $(LDFLAGS) -o $@@ $?
write:	write.c
	$(CC) $(LDFLAGS) -o $@@ $?
yes:	yes.c
	$(CC) $(LDFLAGS) -o $@@ $?

# Etc.
clean:
	rm *.o
stripall:
	strip $(BIN) $(BIN2) $(ETC) $(ETC2) $(USRLIB) $(USRLIB2)

# end of /usr/src/cmd/Makefile
@
