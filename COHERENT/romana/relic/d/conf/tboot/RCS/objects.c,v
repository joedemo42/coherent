head     1.4;
branch   ;
access   ;
symbols  ;
locks    bin:1.4;
comment  @ * @;


1.4
date     92.07.15.14.03.21;  author bin;  state Exp;
branches ;
next     1.3;

1.3
date     91.12.06.18.01.49;  author piggy;  state Exp;
branches ;
next     1.2;

1.2
date     91.12.05.15.03.25;  author piggy;  state Exp;
branches ;
next     1.1;

1.1
date     91.11.06.15.25.07;  author piggy;  state Exp;
branches ;
next     ;


desc
@General support for load objects.  For the most part, these are
switch routines that send you off the the appropriate code for
the load file type (like l.out or COFF).
@


1.4
log
@update by piggy to autodetect 286 cpus for bozo 4.0 users
@
text
@/* objects.c -- routines for handling different object formats.
 * Currently, only COFF and COHERENT l.out are supported.
 */
#include <sys/inode.h>
#include <sys/types.h>
#include <l.out.h>
#include <coff.h>	/* COFF */

#include "tboot.h"

/* Extract information from an object file that describes how to
 * load an executable.
 * The magic number of the file is in "magic".
 * The object file's inode is in "ip".
 *
 * The information needed is extracted into "table".
 * The value for the data segment is put in "data_seg".
 *
 * Returns TRUE if the needed information could be extracted, FALSE ow.
 */

int
object2load(magic, ip, table, data_seg)
	uint16 magic;
	struct inode *ip;
	struct load_segment table[];
	uint16 *data_seg;
{
	int retval;

	switch (magic) {
	/* Is this an i386 COFF executable?  */
	case I386MAGIC:
		VERBOSE( puts("COFF!  COFF!\r\n"); );
		retval = 
			coff2load(ip, table, data_seg);
		break;
		
	/* Is this an l.out executable?  */
	case L_MAGIC:
		VERBOSE( puts("l.out!\r\n"); );
		retval =
			lout2load(ip, table, data_seg);
		break;
	
	default:
		retval = FALSE;
		break;
	} /* switch (magic) */

	return (retval);
} /* object2load() */


/* Look up symbol(s) in an object file. 
 * searches  the name list  (symbol table) of  the load module
 * "filename" for each symbol in the array pointed to by "nlp".
 *
 * nlp points to an array of nlist structures, terminated by a
 * structure with a null string as its n_name member.
 *
 * If "filename" is not a load module or has had its symbol table
 * stripped, all returned n_type and n_value entries will be zero.
 *
 */

uint16
object_nlist(magic, filename, symbol)
	uint16 magic;
	char *filename;
	char *symbol;
{
	uint32 tmp;
	unsigned int retval;		/* Return value.  */

	switch (magic) {
	/* Is this an i386 COFF executable?  */
	case I386MAGIC:
		/* Check that offset into data segment is < 64K.  */
		if ((tmp = wrap_coffnlist(filename, symbol)) > MAXUINT16) {
			puts("object_nlist(): ERROR: Symbol ");
			puts(symbol);
			puts(" will not fit into 16 bits.\r\n");
			puts(symbol); puts("=");
			print32(tmp);
			puts("\r\n");
			
			retval = 0;
		} else {
			retval = (uint16) tmp;
		}
		break;
		
	/* Is this an l.out executable?  */
	case L_MAGIC:
		retval = wrap_l_out_nlist(filename, symbol);
		break;
	
	default:
		break;
	} /* switch (magic) */

	return (retval);
} /* object_nlist() */


/* Determine the value for sys_base based on the type of the load file.  */
uint16
object_sys_base(magic)
	int magic;
{
	uint16 retval;

	switch (magic) {
	/* Is this an i386 COFF executable?  */
	case I386MAGIC:
		retval = COFF_SYS_BASE;
		break;
		
	/* Is this an l.out executable?  */
	case L_MAGIC:
		retval = DEF_SYS_BASE;
		break;
	
	default:
		break;
	} /* switch (magic) */

	return(retval);
} /* object_sys_base() */

#ifdef TEST
main()
{
	printf("pipdev: %x", object_nlist(I386MAGIC, "/at386", "pipedev"));
} /* main () */

#endif /* TEST */
@


1.3
log
@Everything (including int and void functions) is now declared in tboot.h.
Include files are sought in their final homes (<sys/*>).
@
text
@d7 1
a7 1
#include <filehdr.h>	/* COFF */
d34 1
a34 3
#ifdef VERBOSE
		puts("COFF!  COFF!\r\n");
#endif
d41 1
a41 3
#ifdef VERBOSE
		puts("l.out!\r\n");
#endif
d47 1
a47 1
		retval = (1==2);
a74 1
	struct nlist nlp[2];		/* For talking with l_out_nlist().  */
d96 1
a96 5
		strcpy(nlp[0].n_name, symbol);
		strcat(nlp[0].n_name, "_");
		nlp[1].n_name[0] = '\0';
		l_out_nlist(filename, nlp);
		retval = nlp[0].n_value;
@


1.2
log
@Reduced verbosity.
@
text
@@


1.1
log
@Initial revision
@
text
@d34 1
d36 1
d43 1
d45 1
d85 1
a85 1
		if ((tmp = wrap_coffnlist(filename, symbol)) > BIGINT) {
@
