Things that could be done to the teritiary boot as of November 1991:

For some reason COFF files load at a lower rate.  The buffer hit rate is
just as high as with l.out files.  This should be examined.

This code blows up if there are bad blocks in the inode list (I think).
Routine iopen() needs fixing.  See the comments there for helpful pointers.

Support for other object formats (n.out, ELF, etc...) would be nice.
Support for COFF has been added, and there are hooks for other formats.

There is little or no error checking at low levels, especially at the
BIOS levels.

All calls to "sanity_check()" could be removed, but they
don't seem to cost very much CPU time.

The name to inode lookup routine (namei()) could be taught how to
handle "/" in the middle of a name.  This would allow access to files
anywhere in the file system.

More builtin routines may be added.  The "dir" routine could be enhanced
to be more lc or ls like.  Perhaps builtin routines could be called with
an argc, argv combination.  The interpreter "interpret()" should have
a real parser.

The 8086 dependencies could probably be pushed lower.  In particular
routines ffcopy() and ifread() might bear redesign.

Where possible, routines which have similar functionality to kernel
routines have the same or similar names.  The arguments and return
values do not match very well.  Some work has been done in this
direction, but more could be done.  This effort has proven worthwhile
by grabbing code from the kernel with only minor modifications.

The mini-monitor "monitor()" could be turned into a full-scale debugger.
This would greatly facilitate debugging.

The include files should be normalized in some way.  The files typed.h and
ptypes.h both should both be included as <sys/>.  The Makefile would have
to then be tuned as well.

La Monte H. Yarroll <piggy@mwc.com>
