head     1.2;
branch   ;
access   ;
symbols  ;
locks    bin:1.2; strict;
comment  @@;


1.2
date     91.06.20.14.33.52;  author bin;  state Exp;
branches ;
next     1.1;

1.1
date     91.06.10.10.42.59;  author bin;  state Exp;
branches ;
next     ;


desc
@initial version provided by stevesf 
@


1.2
log
@update provided by hal
@
text
@/ $Header: /usr/src/sys/ldrv/RCS/defer.s,v 1.1 88/04/04 16:40:21 src Exp $
/
/	The  information  contained herein  is a trade secret  of INETCO
/	Systems, and is confidential information.   It is provided under
/	a license agreement,  and may be copied or disclosed  only under
/	the terms of that agreement.   Any reproduction or disclosure of
/	this  material  without  the express  written  authorization  of
/	INETCO Systems or persuant to the license agreement is unlawful.
/
/	Copyright (c) 1988
/	An unpublished work by INETCO Systems, Ltd.
/	All rights reserved.
/
/ $Log:	/usr/src/sys/ldrv/RCS/defer.s,v $
/ Revision 1.1	88/04/04  16:40:21	src
/ Initial revision
/ 
/
////////

////////
/
/ void
/ defer( f, a )		- defer local function from loadable driver.
/ void (*f)();
/ int a;
/
/	Input:	f = pointer to function to be deferred.
/		a = argument to be passed to function.
/
/	Action:	Schedule local function 'f' to be invoked with argument 'a'
/		at next transition from kernel to user mode.
/
/	Return:	None.
/
////////

	.globl	defer_

defer_:	push	bp			/ defer( f, a )
	mov	bp, sp			/ void (*f)();
	push	6(bp)			/ int a;
	push	cs			/ {
	push	4(bp)			/	kcall( Kldefer, f, cs, a );
	mov	ax, $Kldefer		/
	push	ax			/
	call	kcall_			/
	mov	sp, bp			/
	pop	bp			/ }
	ret
@


1.1
log
@Initial revision
@
text
@@
