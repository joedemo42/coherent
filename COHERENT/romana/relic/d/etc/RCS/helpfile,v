head     1.1;
access   ;
symbols  ;
locks    ;
comment  @@;


1.1
date     91.02.05.15.25.39;  author bin;  state Exp;
branches ;
next	;


desc
@init ver copied from version 310 ship disks
@



1.1
log
@Initial revision
@
text
@#ar
ar -- maintain archives
Usage:	ar option[modifier] [ position ] archive [ member ... ]
Options:
	d	Delete given members
	m	Move member to indicated position (default: end)
	p	Print members
	q	Quick append--put members at end with no checking
	r	Replace each member specified in the archive
	t	Print a table of members (default: all)
	x	Extract the specified members (default: all)
Modifiers:
	a	Place new member after 'position' in archive
	b	Place new member before 'position' in archive
	c	Suppress message when new archive is created
	i	Insert new member before 'position' in archive
	k	Preserve modify time of file (with options r, q, or x)
	l	Use current directory for temporaries (default: '/tmp')
	s	Update ranlib header even if not present (with options r, m, d)
	u	Update--replace members only if newer than those in archive
	v	Print extra information when used with certain options
#ac
ac -- summarize login accounting information
Usage:	ac [ options ] [ user  ... ]
Options:
	-d	Itemize for each midnight-midnight period
	-p	Itemize by individual users
	-w wtmp	Obtain raw statistics from 'wtmp' rather than '/usr/adm/wtmp'
If users are specified, only they are considered.
#accton
accton -- enable/disable process accounting
Usage:	/etc/accton [ file ]
Normally 'file' is '/usr/adm/acct'.
Disable process accounting if no argument is given.
#as
as -- assembler for host computer
Usage:	as [ options ] file ...
Options:
	-g	Make all undefined symbols global
	-l	Output listing to standard output
	-o dest	Rename output file 'dest' (default: 'l.out')
	-x	Strip local symbols from symbol table
#at
at -- execute commands at given time
Usage:	at [ -v ] [ -c command ] time [ [ day ] week ] [ file ]
        at [ -v ] [ -c command ] time month day [ file ]
Options:
	-c	Following argument gives command
	-v	Print time for which command is set
If 'file' is given, read commands from it.
If neither file nor '-c' is given, read commands from standard input.
#ATclock
/etc/ATclock -- read or set the AT realtime clock
Usage:	/etc/ATclock [yy[mm[dd[hh[mm[.ss]]]]]]
#awk
awk -- report generation, pattern scanning and processing language
Usage:	awk [ -y ] [ -Fc ] [ -f progfile ] [ prog ] [ file ... ]
Options:
	-y	Dual case match (as in grep)
	-Fc	Set field separator character to 'c' (default: blank and tab)
	-f	'progfile' is the awk program; otherwise,
		the first non-option argument ('prog') is the awk program
If no 'file' is present, the standard input is used.
File '-' means the standard input.
#bad
bad -- maintain bad-block list
Usage:	bad option filesystem [ block ... ]
Options:
	a	Add blocks
	c	Clear bad-block list
	d	Delete blocks
	l	List blocks
#badscan
badscan -- build bad block list
Usage:
/etc/badscan [ -v ] [ -o proto ] [ -b boot ] device size
/etc/badscan [ -v ] [ -o proto ] [ -b boot ] device xdevice
Options:
	-b boot		insert bootstrap "boot" into "proto"
	-o proto 	write prototype into file "proto"
	-v		print estimate of time remaining
Scan "device" of size "size" (or size given in hard disk partition table
"xdevice") for bad blocks, write prototype to standard output.
#banner
banner -- print large sized letters
Usage:	banner [ argument ... ]
Print each 'argument' as one large text output line.
If no args, print each line from standard input as a large output line.
#basename
basename -- strip file name
Usage:	basename file [ suffix ]
#bc
bc -- interactive calculator with arbitrary precision
Usage:	bc [ -l ] [ file ... ]
	-l	Use the extended bc library
After reading each input 'file', bc reads the standard input.
#break
break -- exit from shell construct
Usage:	break [ n ]
Exit from 'n' (default: 1) for, until or while constructs.
The shell sh executes break directly.
#cat
cat -- concatenate/print files
Usage:	cat [ -u ] [ file ... ]
Option:	-u	Do not buffer output in 512-byte blocks
File '-' indicates the standard input.
If no 'file' is specified, the standard input is used.
#cd
cd -- change directory
Usage:	cd [ directory ]
If no directory specified, $HOME is assumed.
The shell executes cd directly.
#cmp
cmp -- compare bytes of two files
Usage:	cmp [ -ls ] file1 file2 [ skip1 skip2 ]
Options:
	-l	Print byte number and the bytes at each difference
	-s	Return status (do not print anything)
If 'file1' is '-', use standard input.
If 'skip1' and 'skip2' are present, they are the number of bytes
to skip before comparing in 'file1' and 'file2', respectively.
#cp
cp -- copy files
Usage:	cp [ -d ] oldfile newfile
	cp [ -d ] file ... directory
Option:	-d	Preserve date (mtime) on destination files.
#cc
cc -- C compiler
Usage:	cc [ options ] file ...
Options:
	-B[str]		Use backup compiler versions
	-c		Compile only--no load
	-Dname[=value]	Tell cpp to define 'name' with 'value'
	-E		Run cpp only and send its output to stdout
	-f		Include floating point output routines in load
	-Iname		Tell cpp to look for include files in directory 'name'
	-K		Keep intermediate files
	-lname		Pass /lib/libname.a to linker
	-Mstr		Use alternative machine versions
	-N[p01ab2sdlrt]str (Name) Rename specified pass to str
	-O		Run peephole optimizer of C compiler
	-q[p01ab2s]	Quit after specified pass
	-S		Place C compiler assembler output in a '.s' file
	-t[p01ab2sdlrt]	Take specified compiler phases
	-Uname		Tell cpp to remove any initial definition of 'name'
	-V		Run verbosely, cf. -VSTAT
	-Vname		Toggle variant 'Vname'
Compiles files ending '.c'; assembles files ending in '.s';
passes other options and files to the linker 'ld'.
#c
c -- multi-column output
Usage:	c [ -lN ] [ -wN ] [ -012 ]
Options:
	-lN	Set the page length to N lines
	-wN	Set the page width to N columns
	-0	Order fields horizontally across the page
	-1	Order fields vertically down each column (default)
	-2	Special case of -1
#cal
cal -- print a calendar
Usage:	cal [ month ] [ year ]
#case
case -- execute commands conditionally according to pattern
Usage:	case token in [ pattern [ | pattern ] ... ) sequence ;; ] ... esac
The shell sh executes case directly.
#chase
chase -- video game
Usage:	/usr/games/chase [ -c ] [ speed ]
Use the -c option for color video cards.
#check
check -- check file system
Usage:	check [ -s ] filesystem ... 
Option:	-s	Salvage as much as possible, given the problems detected
#chgrp
chgrp -- change the group owner of files
Usage:	chgrp group file ...
#chmod
chmod -- change permissions of a file
Usage:	chmod mode file ...
Mode may be octal or a comma-separated symbolic list:
	[which]howperm...[,...]
'which':
	a	User, group, and other permissions
	g	Group permissions
	o	Other permissions
	u	User permissions
Missing 'which' implies 'a'; 'g', 'o', and 'u' may be combined.
'how':
	=	Set permissions
	+	Add permissions
	-	Take away permissions
'perm':
	g	Current group permissions
	o	Current other permissions
	r	Read
	s	Setuid on execution
	t	Sticky bit (save text)
	u	Current user permissions
	w	Write
	x	Execute
#chown
chown -- change the owner of files
Usage:	chown owner file ...
#clri
clri -- clear i-node
Usage:	/etc/clri filesystem inumber ...
#col
col -- remove reverse and half line motions
Usage:	col [ -bdfx ] [ -pn ]
Options:
	-b	Output device cannot backspace
	-d	Double spaced output
	-f	Output device can handle half lines (has precedence over -d)
	-pn	Set page buffer to n lines (default: 128)
	-x	Suppress conversion of white space to tabs on output
#comm
comm -- print lines common to two files
Usage:	comm [ -123 ] file1 file2
Options:
	-1	Suppress column 1
	-2	Suppress column 2
	-3	Suppress column 3
Column 1 has lines unique to 'file1'; column 2 has lines unique to 'file2';
column 3 has lines common to both files.  Both files should be sorted.
#compress
compress -- Compress a file
Usage: compress [ -dfvc ] [ -b bits ] [ -w tempfile ] [ file ... ]
where "bits" must be <= 16.
#continue
continue -- terminate current iteration of shell construct
Usage:	continue [ n ]
Terminate current iteration of 'n' (default: 1)
for, until or while constructs.
The shell sh executes continue directly.
#conv
conv -- numeric base conversion
Usage:	conv [ number ]
If no 'number' is given, reads one number per line from the standard input.
#cpdir
cpdir -- copy directory hierarchy
Usage:	cpdir [ option ... ] dir1 dir2
Options:
	-a	Verbose file by file account on one line
	-d	Preserve last-modified date
	-e	Recover from errors and continue
	-r[n]	Recur n levels only (default: 1)
	-sname	Suppress copy of name, name is relative to dir1
	-t	Test and report errors - do not change anything
	-u	Update regular files if more recent
	-v	Verbose file by file account
#cron
cron -- execute commands periodically
Usage:  /etc/cron&
Options:  None
cron is invoked only once, usually from /etc/rc.
Thereafter, it sleeps in the background, awaking periodically to check
the file /usr/lib/crontab and execute commands whose time has come.
Entries in /usr/lib/crontab consist of commands preceded by five fields;
these represent minute (0-59), hour (0-23), day of the month (1-31),
month (1-12), and day of the week (1-7).  An asterisk '*' in a field means
all possible entries for that field.
#crypt
crypt -- encrypt/decrypt text
Usage:	crypt [ password ]
Reads from standard input and writes to standard output.
Password is 10 characters or fewer.  The same password encrypts and decrypts.
#date
date -- print/set date and time of day
Usage:	date [ -s ] [ -u ] [yy[mm[dd[hh[mm[.ss]]]]]]
Options:
	-s	Suppress daylight savings time conversion when setting time
	-u	Print (and enter) date in Greenwich Mean Time
#db
db -- assembler-level symbolic debugger
Usage:	db [ options ] [ [ mapfile ] datafile ]
By default, 'datafile' is assumed to be an object file.
'mapfile' defaults to 'l.out' and 'datafile' defaults to `core'.
Options:
	-c	Map 'datafile' as a core file
	-d	Map 'datafile' as a system dump;
		'mapfile' defaults to '/coherent'
	-e	Next argument is object file and rest of command line
		is passed to the child process
	-f	Map 'datafile' as binary data
	-o	'datafile' is an object file
	-r	Access all files read-only
	-t	Perform input and output via /dev/tty
		rather than standard input and output
#diff
diff -- summarize differences between two files
Usage:	diff [ -bdefhs ] [ -c sym ] file1 file2
Options:
	-b	Ignore trailing blanks; all strings of blanks are equal
	-c sym	Produce C pre-processor input conditionalized on 'sym'
	-d	Use -h algorithm for larger (>25,000 character) files
	-e	Produce editor script
	-f	Produce fake (non-usable) editor script
	-h	Half-hearted algorithm (works on long files)
	-s	Produce sed script
If either 'file1' or 'file2' is '\-', the standard input is used.
If one of the files is a directory, then the other file name
under that directory is used.
#dc
dc -- desk calculator
Usage:	dc [ file ]
Arbitrary precision desk calculator with registers,
using reverse Polish notation.
Reads input from 'file' if given, then from standard input.
#dcheck
dcheck -- directory consistency check
Usage:	dcheck [ -s ] [ -i inumber ... ] filesystem ... 
Option -s causes dcheck to correct link counts automatically.
Option -i prints information about each given i-number.
#dd
dd -- file conversion
Usage:	dd [ option=value ] ...
Options:
	bs=n		Input and output buffer size
	cbs=n		Conversion buffer size
	conv=list	Comma-separated list of conversions:
		ascii	Convert ebcdic to ascii
		ebcdic	Convert ascii to standard ebcdic
		ibm	Convert ascii to ibm print codes
		lcase	Map all letters to lower case
		noerror	Continue on errors
		swab	Swap byte pairs
		sync	Pad input to 'ibs'
		ucase	Map all letters to upper case
	count=n		Number of buffers to copy from input
	files=n		Number of files to copy (useful with tape)
	ibs=n		Input buffer size
	if=file		Input file
	obs=n		Output block size
	of=file		Output file
	seek=n		Seek position of output
	skip=n		Number of input blocks to skip
#deroff
deroff -- remove text formatting control information
Usage:	deroff [ -w ] [ -x ] [ file ... ]
Options:
	-w	Divide the output into words, one per line
	-x	Extra knowledge of macro packages (knows about .NH, .DS, etc.)
Removes nroff control information from each 'file', or standard input if none.
#df
df -- print free space on file systems
Usage:	df [ -a ][ -i ][ -t ] filesystem ...
Options:
	-a	Give entries only for mounted devices
	-i	Summarize i-node usage
	-t	Give total number of blocks on device
#diff3
diff3 -- summarize differences among three files
Usage:	diff3 [ -ex3 ] file1 file2 file3
Options:
	-e	Editor script to make changes between 'file2' and 'file3'
		to 'file1' (changes marked with '====' or '====3')
	-x	Above script with only changes marked '====' (all different)
	-3	Above script with changes marked '====3' (file3 different)
#disable
disable -- disable terminal port
Usage: /etc/disable port ...
#dos
dos -- transfer files to or from an MS-DOS filesystem
Usage:	dos function[flags] [ device ] [ file ... ]
Functions:
	d	Delete specified files
	l	Label disk			(one argument: label)
	r	Replace files			(default: all files in '.')
	t	Table of contents listing	(default: all files)
	x	Extract specified files		(default: all files)
Flags:
	a	ASCII data extract/replace	(default: binary data)
	c	Read only; do not write changes to MS-DOS filesystem
	k	Keep mtime on extract/replace	(default: current time)
	n	Newest files first in list	(default: alphabetized)
	p	Piped extract/replace
	s	Suppress subdirectory x/r	(default: recursive descent)
	v	Verbose
The default device is /dev/dos.
#drvld
drvld -- Load a loadable driver into memory
Usage:	/etc/drvld driver
You must have superuser status to run this program.  Note that this command
supports only the loadable drivers included with COHERENT.  User-created
loadable drivers will be supported only after Mark Williams Company releases
the COHERENT driver kit.
#du
du -- summarize disk usage
Usage:	du [ options ] [ directory ... ]
Options:
	-a	Print an entry for each file
	-s	Print only a summary
#dump
dump -- file system dump
Usage:	dump [ options ] [ argument ...  ]
Options:
	0-9	Set dump level (default: 9u)
	b 	Next argument is blocking factor (default: 20)
	d	Next argument is density in bpi (default: 1600)
	f	Next argument is output device name
	s 	Next argument is tape length in feet (default: 2300)
	S	Next argument is floppy disk size in blocks
	u	Update /etc/ddate
	v	Verbose (display date and tape length)
#dumpdate
dumpdate -- print dump dates
Usage:	dumpdate [ filesystem ... ]
#dumpdir
dumpdir -- print the directory of a dump tape
Usage:	dumpdir [ af [ argument ... ] ]
Options:
	a	List normally suppressed '.' and '..' names
	f	Next argument is dump device name (default: '/dev/dump')
#echo
echo -- print arguments
Usage:	echo [ -n ] [ argument ... ]
Option:	-n	Do not print terminal newline
Copies all command arguments to the standard output.
#ed
ed -- interactive text editor
Usage:	ed [ - ] [ -x ] [ +cmopsv ] [ file ]
Options:
	-	Suppress character counts on r, w, e commands
	-x	Encrypt file
	+c	Print character counts on r, w, e
	+m	Allow multiple commands per line
	+o	Print line counts instead of character counts
	+p	Prompt for each command with *
	+s	Lower case matches upper in patterns
	+v	Verbose error messages
#egrep
egrep -- extended pattern search
Usage:	egrep [ option ... ] [ pattern ] [ file ... ]
Options:
	-b	Each output line has the block number of the match
	-c	Print only a count of the number of matching lines
	-e	The next argument is the pattern
	-f	The next argument is a file containing one pattern per line
	-h	Suppress the printing of file names on matched lines
	-l	Print only the names of files containing matches
	-n	Print line number of file with each matched line output
	-s	Suppress output, just return status
	-v	Negate the sense of the match
	-y	Lower-case letters in the pattern match upper- and lower-case
The 'pattern' is a pattern roughly like that found in 'ed'.
If no 'file' is specified, the standard input is used.
egrep is like 'grep -a', but is an order of magnitude faster.
#exit
exit -- exit from noninteractive shell
Usage:	exit [ status ]
The previous status is retained if none is specified.
exit sets the status but does not terminate an interactive shell.
The shell sh executes exit directly.
#enable
enable -- enable terminal port
Usage: /etc/enable port ...
#epson
epson -- print files on Epson printer
Usage:	epson [ -cdfrw8 ] [ -b head ] [ -in ] [ -o ofile ] [ -sn ] [ file ... ]
Options:
	b head	Print wide banner 'head' at top of first page
	c	Compressed printing
	d	Print boldface with double strike, not emphasize mode
	f	Suppress formfeed after each 'file'
	in	Indent output 'n' spaces
	o ofile	Send output to 'ofile' instead of '/dev/lp'
	r	Use only Roman character set (no italics)
	sn	Vertical spacing 'n' (= 1, 2, 3;  default 1)
	w	Double width printing
	8	Eight lines per inch (default: six)
#eval
eval -- evaluate arguments
Usage:	eval [ token ... ]
The shell sh executes eval directly.
#exec
exec -- execute command directly
Usage:	exec [ command ]
The shell executes 'command' by 'exec' rather than 'fork'.
This normally terminates the current shell.
Current shell i/o may be redirected by 'exec' with no 'command'.
#export
export -- add shell variables to environment
Usage:	export [ name ... ]
If no 'name' is given, the shell prints
the names and values of currently exported shell variables.
The shell sh executes export directly.
#expr
expr -- compute a command line expression
Usage:	expr argument ...
Arguments:
	n	Any integer with optional sign
	string	Used with comparisons and 'len' operator
	+	Arithmetic operators (one of '+', '-', '*', '/', '%')
	!	Unary not
	-	Unary minus
	==	Relational operators (one of '>', '<', '>=', '<=', '==', '!=')
	&	Logical AND of previous and next expression
	|	Logical OR of previous and next expression
	len	Length of string given by next argument
	e1 : e2	 Set to the number of characters matching regular expression
		'e2' in string 'e1';  if 'e2' contains any '\(...\)' sequences,
		the result is the concatenation of the matched parts
	( e )	Parentheses for grouping
	{ e1 , e2 , e3 }
		Evaluate 'e2' if 'e1' is true, 'e3' otherwise; 'e3' defaults
		to '0' if missing
The result is written to the standard output.
#file
file -- guess type of a file
Usage:	file name ...
#false
false -- unconditional failure
Usage:	false
Does nothing and returns exit status 1 (failure).
#fdformat
fdformat -- format floppy disk
Usage:	/etc/fdformat [ option ... ] special
Options:
	-a	Print information on stdout during format
	-i n	Interleave factor 'n' (0-7, default: 6)
	-o n	Skew factor 'n' for sector numbering (default: 0)
	-v	Verify
	-w file	Copy 'file' to formatted floppy disk track by track
#fdisk
fdisk - change hard disk partitioning
Usage: /etc/fdisk [-r] [-c] [-b mboot] xdev
Options: -r  Read-only access
	 -b  Add master boot code from the file 'mboot'
	 -c  Specify disk geometry for non-standard disk drives
Split a hard disk into a maximum of 4 partitions (logical devices).
#find
find -- search for files satisfying a pattern
Usage:	find directory ... [ expression ... ]
Expression:
	-atime n	File has been accessed in 'n' days
	-ctime n	File's i-node has been changed in 'n' days
	-exec command	Command is successful (arg. '{}' is file name)
	-group gname	File belongs to group owner 'gname'
	-inum n		File has i-node number 'n'
	-links n	File has 'n' links to it
	-mtime n	File has been modified in 'n' days
	-name pattern	File name matches 'pattern' (shell conventions)
	-newer file	File has been modified since 'file'
	-nop		Always true; does nothing
	-ok command	Like '-exec', except it asks
	-perm octal	File permissions are 'octal'
	-print		Always true; prints current pathname
	-size n		File is 'n' blocks long
	-type c		File matches type ('c' may be [bcdfmp])
	-user uname	File belongs to 'uname'
	exp -a exp	Both expressions are true (also: exp exp)
	exp -o exp	One of the expressions is true
	! exp		Expression is false
	( exp )		Parentheses for grouping
If no expression is specified, '-print' is assumed.
#fixstack
fixstack -- change stack allocation
Usage:  fixstack +-value [ filename ]
#fnkey
fnkey -- set/print function keys
Usage:	fnkey [ n [ string ] ]
Sets function key Fn to send given string, or nothing if no string.
Resets all function keys to send nothing if n is 0.
Prints function keys if no arguments.
#for
for -- execute commands for tokens in list
Usage:	for name [ in token ... ] do sequence done
If 'in' clause is omitted, the list of positional parameters to the
current script is assumed.
Both 'do' and 'done' must be the first token on a line or preceded by ';'.
The shell sh executes for directly.
#fortune
fortune -- generate a fortune cookie
Usage:	/usr/games/fortune [ file ]
The default 'file' is /usr/games/lib/fortunes.
#from
from -- generate list of numbers
Usage:	from start to stop [ by incr ]
'start', 'stop' and 'incr' (default: 1) are decimal integers with optional '-'.
#fsck
fsck -- check and repair file systems interactively
Usage:  /etc/fsck [ -fnqy ] [ -t tempfile ] [ filesystem ... ]
Options:
	-f	fast check; check only if a block is claimed by
		more than one i-node, by an i-node and the free
		list, or more than once in the free list
	-n	default reply of no to all queries
	-q	quiet option; syppress file name warning messages
	-t	use tempfile instead of /dev/rram1 for temporary storage
	-y	default reply of yes to all queries
/etc/fsck checks file systems for a number of common problems.
If it detects a problem, fsck asks the user whether it
should correct the problem and waits for the user to answer.
#getty
getty - Terminal initialization
Usage:	/etc/getty type
	0	Cycle 300, 1200, 150, and 110 baud
	-	Teletype model 33, fixed at 110 baud
	1	Teletype model 37, fixed at 150 baud
	2	9600 baud with delays (e.g., Tektronix 4104)
	3	Cycles between 2400, 1200 and 300 baud
	4	DECwriter (LA36) with delays
	5	Like 3, but starts at 300 baud

	A	50 baud		B	75 baud
	C	110 baud	D	134 baud
	E	150 baud	F	200 baud
	G	300 baud	H	600 baud
	I	1200 baud	J	1800 baud
	K	2000 baud	L	2400 baud
	M	3600 baud	N	4800 baud
	O	7200 baud	P	9600 baud
	Q	19200 baud	R	EXTA
	S	EXTB
#grep
grep -- pattern search
Usage:	grep [ option ... ] [ pattern ] [ file ... ]
Options:
	-a	Extra metacharacters supported ('(...)', '|', '+', and '?')
	-b	Each output line has the block number of the match
	-c	Print only a count of the number of matching lines
	-e	The next argument is the pattern
	-f	The next argument is a file containing one pattern per line
	-h	Suppress the printing of file names on matched lines
	-l	Print only the names of files containing matches
	-n	Print line number of file with each matched line output
	-s	Suppress output, just return status
	-v	Negate the sense of the match
	-x	Exact match (regular expression metacharacters are ordinary)
	-y	Lower-case letters in the pattern match upper- and lower-case
The 'pattern' is a regular expression roughly like that found in 'ed'.
If no 'file' is specified, the standard input is used.
#help
help -- print concise command description
Usage:	help [ command ... ]
help is intended for refresher information.
To learn about a new command, man or learn is preferable.
If 'command' is omitted, prints information about $LASTERROR.
#head
head -- Print the beginning of a file
Usage:	head [ +n [ bcl ] ] [ file ]
	head [ -n [ bcl ] ] [ file ]
Options:
	+ - count from beginning of file
	- - count from end of file
	b - count in blocks
	c - count in characters
	l - count in lines
#hp
hp -- prepare files for HP LaserJet-compatible printer
Usage:	hp [ -acfl ] [ -imarg ] [ -ttop ] [ -plines ] file ...
Options:
	-a	substitute accent grave for straight accent
	-c	toggle cartridge in place switch
	-f	print pages in forward order (don't reverse them)
	-l	landscape mode
	-imarg	indent to marg
	-plines	page length is lines
	-ttop	set top margin
#hpr
hpr -- send to HP LaserJet printer spooler
Usage:	hpr [ options ] [ file ... ]
Options:
	-B	Supress banner page and extra page at termination
	-b	Next argument is the banner
	-c	Make a copy of each 'file' in spool area
	-m	Send a message when listing is complete
	-n	No message (default)
	-r	Remove files when they have been spooled
hpskip restarts or terminates the current listing.
#hpskip
hpskip -- terminate/restart current HP laserjet printer listing
Usage:	hpskip [ -r ]
When invoked with the -r option, hpskip restarts the current listing.
#icheck
icheck -- i-node consistency check
Usage:	icheck [ options ] filesystem ... 
Options:
	-b	Any following numeric arguments are taken to be block numbers;
		all references to these blocks are printed, with the type
	-s	Make some repairs on the file system (requires write access)
	-v	Print a summary of information about the file system
#if
if -- conditional command execution
Usage:	if seq1 then seq2 [ elif seq3 then seq4 ] ... [ else seq5 ] fi
Each 'then', 'elif', 'else' and 'fi' must occur unquoted at the start
of a line or preceded by ';'.
The shell sh executes if directly.
#init
init -- System initialization
Usage:	/etc/init
#join
join -- join two databases
Usage:	join [ options ] file1 file2
Options:
	-a[n]	Print unpaired records from file 'n'
	-e s	Replace empty fields on output with string 's'
	-j[n] key
		Use field 'key' of file 'n' for comparison
	-o [n.]m ..
		Subsequent arguments constitute a list of which fields to
		output;  each element has file 'n' and a field number 'm'
	-tc	The field separator (input and output) is the character 'c'
If either of 'file1' or 'file2' is '-', the standard input is used.
The optional file number 'n' may be either '1' or '2';
if omitted, both '1' and '2' are assumed.
#kermit
kermit -- remote system communication and file transfer
Usage:	kermit c[bel baud esc line ]
	kermit r[bdfhilt baud line ]
	kermit s[abdfhilmtx baud line ] file ...
Modes:	c	Connect
	r	Receive
	s	Send
Options:
 	a	Specify pathnames for both sending and receiving files
	b baud	Use given baud rate
 	d	Print debug information
	e esc	Use given escape character (default: '^')
	f	Suppress filename conversion
	h	Host mode
	i	Image mode (for nonASCII transfer)
	l line	Use given line
	m	Macintosh mode
	t	Tymnet mode
	x	Use complete pathname for receiving file
#kill
kill -- signal a process
Usage:	kill [ -signal ] pid ...
Send 'signal' (default: terminate signal) to each specified 'pid'.
#ld
ld -- load/bind relocatable object files
Usage:	ld [ option ... ] file ...
Options:
	-d	Define commons (even if undefined symbols)
	-e ent	Set entry point to given symbol or octal number
	-i	Bind output sepid
	-k[sys]	Kernel process; use system symbol table (default: '/coherent')
	-l<lib>	Use standard library <lib>
	-m	Perform in-memory load if possible (larger but faster)
	-n	Bind output shared, force -i option
	-o file	Place output in named file (default: 'l.out')
	-r	Retain relocation information
	-s	Discard symbol table
	-u sym	Undefine 'sym' (forcing library search)
	-X	Discard C internal local symbols
	-x	Discard all local symbols
#ls
ls -- list directory contents
Usage:	ls [ -acdfgilrstu ] [ file ... ]
Options:
	-a	List all files (including '.' and '..')
	-c	Use attribute change instead of modified time for '-l' and '-t'
	-d	Treat directories like files
	-f	Treat file as a directory even if it is not (implies '-a')
	-g	Display group owner, rather than owner
	-i	Print the i-number as well
	-l	Longer listing format
	-r	Reverse the order of all sorting
	-s	Print the file size in blocks as well
	-t	Sort by times, normally newest first (default: sort by ls)
	-u	Use accessed rather than modified time
#lc
lc -- categorize files in a directory
Usage:	lc [ -1abcdfp ] [ directory ... ]
Options:
	-1	List files one per line instead of in columns
	-a	List all files in directory (including '.' and '..')
	-b	List block special files only
	-c	List character special files only
	-d	List directories only
	-f	List regular files only
	-p	List pipe files only
The options can be combined.
If there is no 'directory' specified, the current directory is used.
#lex
lex -- lexical analyzer generator
Usage:	lex [ -t ] [ -v ] [ file ]
	cc lex.yy.c -ll
Options:
	-t	Write to standard output instead of lex.yy.c
	-v	Give statistics about generated tables
#ln
ln -- create a link to a file
Usage:	ln [ -f ] oldfile newfile
	ln [ -f ] file ... directory
Option:	-f	Force link even if new file exists
#login
login -- log in or change user name
Usage:	login [ username ]
#look
look -- find matching lines in a sorted file
Usage:	look [ -df ] string [ file ]
Options:
	-d	Dictionary ordering
	-f	Fold cases for comparison
If no 'file', look uses '/usr/dict/words' with -df option.
#lpr
lpr -- send to line printer spooler
Usage:	lpr [ options ] [ file ... ]
Options:
	-B	Suppress printing of a banner
	-b	Next argument is the banner
	-c	Make a copy of each 'file' in spool area
	-m	Send a message when listing is complete
	-n	No message (default)
	-r	Remove files when they have been spooled
lpskip restarts or terminates the current listing.
#lpskip
lpskip -- terminate/restart current line printer listing
Usage:	lpskip [ -r ]
Option:	-r	Restart current listing
With no argument, lpskip terminates the current listing.
#m4
m4 -- macro processor
Usage:	m4 [ file ... ]
If 'file' is '-' or omitted, m4 reads the standard input.
#make
make -- program building discipline
Usage:	make [ option ... ] [ argument ... ] [ target ... ]
Options:
	-d	Debug: more than enough output
	-f file	Make instructions are in 'file' (default: [mM]akefile)
	-i	Ignore command error returns
	-n	Test: do all but execute commands
	-p	Print macro definitions and target descriptions
	-q	Only return exit status (zero if files up to date)
	-r	Ignore built-in rules
	-s	Do not print command lines when executed
	-t	Update times of files without regenerating
#me
MicroEMACS -- interactive screen editor
Usage:	me [ file ]
#mkdir
mkdir -- make a new directory
Usage:	mkdir [ -r ] directory ...
Option -r makes parent directories recursively as required.
#mv
mv -- move/remv files and directories
Usage:	mv [ -f ] oldfile newfile
	mv [ -f ] file ... directory
Option:	-f	Force; remove current 'newfile', even if unwritable
#mail
mail -- computer mail
Usage:	mail [ options ] [ user ... ]
Options:
	-f file		Print mail from 'file' instead of the default
	-m		Notify each logged in recipient when mail is sent
	-p		Print mail non-interactively
	-q		Exit on interrupt, leaving mail unchanged
	-r		Print mail in reverse order
	-v		Verbose mode:  show version and expanded aliases
If 'user' is present, send each a mail message read from standard input.
Mail message ends with EOF, a line containing only '.',
or a line containing only '?'; the last moves the message into an
editor for further editing processing before transmission.
Read commands interactively, as follows:
	d		Delete current message; print the next
	m  [user ...]	Mail current message to each 'user'
	p		Print this message again
	q		Quit and update mailbox
	r		Reverse direction of scan through mailbox
	s  [file ...]	Save current message with header in each 'file'
	t  [user ...]	Send message from standard input to each 'user'
	w  [file ...]	Write current message without header in each 'file'
	x		Exit without updating mailbox
	newline		Print the next message
	-		Print the previous message
	EOF		Quit and update mailbox;  same as 'q' command
	?		Print a command summary
	!command	Pass 'command' to the shell to be executed
#man
man -- print online manual sections
Usage:	man [ -w ] [ topic ... ]
Options:
	-w	Print only file name where document resides
With no arguments, prints a list of available topics.
#mesg
mesg -- permit/deny messages from other users
Usage:	mesg [ state ]
States:
	n	Disallow messages
	y	Allow messages
With no arguments, mesg prints the state.
#misc
misc -- miscellaneous function library
#mkfs
mkfs -- make a new file system
Usage:	/etc/mkfs filesystem proto
If 'proto' is a number, it is the size in blocks of an empty file system;
otherwise, it is a prototype description file.
#mknod
mknod -- make a special file or named pipe
Usage:	/etc/mknod filename type major minor
	/etc/mknod filename p
The 'type' is 'b' for block special or 'c' for character special;
'major' and 'minor' are numbers.
The second form creates a pipe with the given filename.
#modemcap
modemcap -- modem description language
#mount
mount -- mount a file system
Usage:	/etc/mount [ special directory [ -ru ] ]
Options:
	-r	Mount device read-only
	-u	Update /etc/mtab entry but do not mount device
With no args, print currently mounted devices.
The "special" is the name of a device-special file and
the "directory" is the name of a directory on which to mount it.
File /bin/mount contains useful abbreviations for invoking /etc/mount.
#msg
msg -- send a brief message to other users
Usage:	msg user
	msg user ... message
In the first form, send one line read from the standard input to 'user'.
In the second, send the argument 'message' to the list of users;
if 'message' is '-', the message is one line read from the standard input.
#msgs
msgs -- read messages intended for all COHERENT users
Usage: [ -q ] [ number ]
#nm
nm -- print name list
Usage:	nm [ options ] [ file ... ]
Options:
	-a	Print all symbols
	-d	Print only definitions
	-g	Print only global symbols
	-n	Sort numerically (default: sort by name)
	-o	Prepend file or member name to each line
	-p	Print in symbol table order (no sort)
	-r	Reverse order of sort
	-u	Print undefined symbols
'file' may be an object file or an archive.
#ncheck
ncheck -- print file names corresponding to i-numbers
Usage:	ncheck [ options ] [ filesystem ... ]
Options:
	-a	Print names including '.' and '..'
	-i n... Only print names for listed i-numbers 'n...'
	-s	Print only special files and files with setuid mode
#newgrp
newgrp -- change to a new group
Usage:	newgrp group
#newusr
newusr -- add new user to COHERENT system
Usage:	/etc/newusr login "User Name" parentdir
Only the superuser can use newusr.
#nroff
nroff -- text processor
Usage:	nroff [ option ... ] [ file ... ]
Options:
	-d	Debugging mode
	-i	Read standard input after each 'file' has been read
	-mname	Read macro package /usr/lib/tmac.name
	-nN	Number first page of output 'N' (default: 1)
	-raN	Set number register 'a' to value 'N'
#od
od -- file dump
Usage:	od  [ options ]  [ file ]  [ [ + ] offset[.][b] ]
Options:
	-b	Dump bytes in the default base
	-c	Dump bytes as ASCII characters
	-d	Dump words in decimal
	-o	Dump words in octal
	-x	Dump words in hexadecimal
The default base is octal on the PDP-11 and hexadecimal on the i8086,
Z-8001, and M68000.
The offset must be preceded by '+' if 'file' is omitted.
The offset is decimal if '.' is present;
'b' implies 512-byte blocks instead of bytes.
#pr
pr -- paginate and print files
Usage:	pr [ options ] [ file ... ]
Options:
	+skip	Skip the first 'skip' pages of input before printing
	-cols	Print the input in 'cols' columns
	-h	The next argument is the header (replaces file name)
	-ln	Page size is set to 'n' lines (default: 66)
	-m	Print each input 'file' in a separate column
	-n	Number the output lines
	-sc	Separate each column with character 'c'
	-t	Suppress top and bottom margins and header
	-wn	Page width is set to 'n' columns (default: 80)
A 'file' named '-' means standard input.
#pwd
pwd -- print current working directory
Usage:	pwd
#passwd
passwd -- set/change login password
Usage:	passwd [ user ]
#phone
phone -- search telephone directory
Usage:	phone person ...
#prep
prep -- produce a word list
Usage:	prep [ options ]  [ file ... ]
Options:
	-d	Print number of each word output
	-f	Fold upper case to lower case
	-i file	Ignore all words in 'file' on output
	-o file	Output only words from 'file'
	-p	Print punctuation marks on separate lines (not numbered)
Text is taken from each input 'file' or the standard input if none.
Words consist of alphabetic characters and apostrophes.
#ps
ps -- print process status
Usage:	ps [ -afglmnrtwx ] [ -c system ] [ -k mem ]
Options:
	-a	Print all terminals' processes
	-c	Next argument is the system (default: '/coherent')
	-d	Print information about status of loadable drivers
	-f	Put '-' in null fields for placeholders
	-g	Give the group leader for this process
	-k	Next argument is the memory image (default: '/dev/mem')
	-l	Print long format
	-m	Print scheduling information
	-n	No header line
	-r	Give the real size of the process
	-t	Print CPU times
	-w	Wide column format (132 columns instead of default 80)
	-x	Print processes with no controlling tty
#quot
quot -- summarize file system usage
Usage:	quot [ -c ] [ -f ] [ -n ] [ -t ] filesystem ... 
Normally prints number of blocks used in filesystem by each user.
Options:
	-c	Print file size, number of files of size,
		and cumulative total blocks up to size
	-f	Print number of files in addition to number of blocks per user
	-n	Input (i-number, file system) pairs one per line;
		output owners and file names
		(e.g.: ncheck fs | sort +0n | quot -n fs)
	-t	Print totals (where applicable)
The options '-c', '-n' and other options are disjoint.
#rm
rm -- remove files
Usage:	rm [ options ] file ...
Options:
	-f	Force; remove unwritable files, suppress error
	        messages and prompts.
	-i	Ask interactively before removing each file
	-r	Recursively remove all structure of directories
	-t	Test--perform all checks but do not remove any files
	-v	Verbose--report the disposition of each file
#rmdir
rmdir -- remove directory
Usage:	rmdir [ -f ] directory ...
Option:	-f	Force override of empty and rmdir checks for superuser
#ranlib
ranlib -- create index for library
Usage:	ranlib library ...
#read
read -- assign values to shell variables
Usage:	read name ...
read reads a line from the standard input and assigns each token
to the corresponding shell variable 'name'.
The shell sh executes read directly.
#restor
restor -- restore file system
Usage:	restor command [ dump_device ] [ filesystem ] [ file ... ]
Commands:
	f	Next argument is the dump device name
	r	Mass restore (also 'R')
	t	Print taken and since dates of the dump
	v	Verbose (print commentary during mass restore)
	x	Selective extract of argument files (also 'X')
#rev
rev -- reverse text in lines of files
Usage:	rev [ file ... ]
#size
size -- print size of an object file
Usage:	size  [ file ... ]
#sleep
sleep -- stop executing for a specified time
Usage:	sleep seconds
#sort
sort -- sort lines of text
Usage:	sort [ options ] [ [ +beg [ -end ] ] ... [ file ... ]
Options:
	-c	Check if input is already ordered
	-m	Merge already-sorted input files
	-o name	Place output on file 'name' rather than standard output
	-tc	Tab character is 'c'
	-T dir	Use directory 'dir' for temporary files
	-u	Only output records for which keys are unique
Key options:
	-b	Skip leading blanks in fields
	-d	Dictionary ordering for keys
	-f	Fold upper case into lower case in key comparison
	-i	Ignore control characters in key comparison
	-n	Numeric comparison
	-r	Reverse sort ordering
Position:
	+m.nf	Key starts 'm' fields into record and 'n' characters
		into that field;  'f' may contain optional flags from
		key options above which apply only to that positional
	-m.nf	Optional ending position of key (same form as above)
If no 'file' is given, the standard input is sorted.
#strip
strip -- strip symbol table and relocation information from object file
Usage:	strip file ...
#sa
sa -- process accounting
Usage:	sa [ options ] [ file ]
Options:
	-a	Commands seen once or unprintable called '***other'
	-b	Sort by average CPU time per call
	-c	Print CPU time as percentage of all CPU time used
	-j	Print average times per call, not totals
	-l	Separate user and system times
	-m	Information per user, not per command
	-n	Sort by number of calls
	-r	Reverse sort
	-s	Condense the information
	-t	Print CPU time as percentage of real time
	-u	Print user and command directly from raw file
	-vN	If called no more than 'N' times, put it into '**junk**'
The default 'file' is '/usr/adm/acct'.
#scat
scat -- segmented concatenation
Usage:	scat [ [ options ] [ file ... ] ] ...
Options:
	-1	Do not stop at EOF if exactly one file was specified
	-bn	Begin output at line n
	-c	Mark control characters (overrides -t)
	-cs	Like -c, but map space ' ' to underscore '_', and
		prefix underscore with '\'
	-ct	Like -c, but map tabs to spaces
	-in	Skip n columns on output
	-ln	Set screen length to n lines
	-n	Number input lines
	-r	Remote--no paging
	-s	Squash empty lines
	-Sn	Seek n bytes into input before processing
	-t	Truncate lines to line length (default: wraparound)
	-wn	Set screen width to n columns
	-x	Expand tabs
Responses to pause for pagination:
	RETURN	Next page
	SPACE	Next line
	/	Next half page
	f	Print file names and line number
	n	Next file
	q	Quit
#sed
sed -- stream editor
Usage:	sed [ -n ] [ -e commands ] [ -f script ] ... file ...
Options:
	-e	Direct commands follow
	-f	File name of command script follows
	-n	No implicit output
#set
set -- set shell option flags and positional parameters
Usage:	set [ -ceiknstuvx [ name ... ] ]
Options:
	-c string
		Read shell commands from 'string'
	-e	Exit on any error if shell is not interactive
	-i	Shell is interactive; print prompt strings
	-k	Place all keyword args into environment
	-n	Read commands do not execute them
	-s	Read commands from standard input, write output
		to standard output
	-t	Read and execute one command rather than entire file
	-u	If actual value of shell variable is blank, report an error
	-v	Print each line as it is read
	-x	Print each command and its args as it is executed
	-	Cancel the -x and -v options.
The positional parameters $1, $2... are assigned to the 'name' list if present.
The shell sh executes set directly.
#sh
sh -- command language interpreter
Usage:	sh [ option ...] token ...
Options:
	-c cmds	Read commands from 'cmds'
	-e	Exit on any error if noninteractive
	-i	Interactive even if no tty attached
	-k	Place all keyword args into global environment
	-n	Read commands but do not execute them
	-s	Read commands from stdin, write output to stderr
	-t	Read and execute one command only
	-u	Report error if actual value of shell variable is null
	-v	Print each line as read
	-x	Print each command and argument as executed
	-	Cancel -v and -x options
The following reserved tokens may not be used in the first
position of the command unless quoted:
	case do done elif else fi for in then until while { } ( )
If the first token is not reserved, it is treated as the name of a command.
The remaining tokens are treated as arguments.
The characters * ? [ ] specify patterns that match file names.
To quote characters or strings, these escape characters are provided:
	'...' "..." \\
Each 'token', unless quoted, is checked for substitutions.
#shift
shift -- shift positional parameters
Usage:	shift
The shell sh executes shift directly.
#shutdown
shutdown -- Shut down the COHERENT system
Usage: /etc/shutdown
Only the superuser can execute shutdown.
#spell
spell -- find spelling errors
Usage:	spell [ -a ] [ -b ] [ file ... ]
Options:
	-a	Use American variant of the dictionary (default)
	-b	Use British variant of the dictionary
#split
split -- split a large file into smaller files
Usage:	split [ -nlines ] [ infile [ outfile ] ]
'infile' of '-' or no 'infile' means standard input.
'outfile' defaults to 'x'.
#stty
stty -- set/print terminal modes
Usage:	stty [ option ... ]
Options:
9600		Baud rate--any valid terminal speed accepted
0		Hang up phone immediately
[break | eof | erase | interrupt | kill | quit | start | stop] c
		Set specified character to given 'c'
all     -a      Display all modes
cbreak	-cbreak	Enable (disable) break after every input character
crt	-crt	Enable (disable) crt character erasing
echo	-echo	Enable (disable) input character echoing
even	-even	Enable (disable) even parity
excl	-excl	Enable/disable exclusive use
flush	-flush	Flush/do not flush input queues
hup	-hup	Enable (disable) hang up on last close
nl	-nl	Disable (enable) newline mapping
odd	-odd	Enable (disable) odd parity
print		Print terminal attributes
raw	-raw	Enable/disable raw mode (also 'cooked', 'rawin', 'rawout')
tabs	-tabs	Disable (enable) tab expansion
tandem	-tandem	Enable (disable) tandem (start/stop) mode
#su
su -- substitute user id, become superuser
Usage:	su [ user [ command ]]
Default 'user' is 'root'; default 'command' is 'sh'.
#sum
sum -- print checksum of a file
Usage:	sum [ file ... ]
#sync
sync -- flush system buffers
Usage:	sync
#touch
touch -- update modification time of a file
Usage:	touch [ -c ] file ...
Option:	-c	Do not create 'file' if it does not exist
#tail
tail -- print the end of a file
Usage:	tail [ +number[bcl] ] [ file ]
	tail [ -number[bcl] ] [ file ]
Options:
	+	'number' is from beginning of file
	-	'number' is from end of file
	b	'number' is in blocks
	c	'number' is in characters (bytes)
	l	'number' is in lines (default)
#tar
tar -- tape archive manager
Usage: tar [crtux][0-7bflmvwU] [blocks] [archive] file ...
The directives are:
	c - Create a new tape, overwriting any old contents.
	r - Replace (append) the named files on the tape.
	t - Write a table of contents of the tape to the standard output.
	u - Update the tape (replace mode).
	x - Extract the named files from the tape.
The options are:
	0-7 - A single octal digit specifies the tape unit.
	B - Next argument is the blocking factor.
	f - Next argument is the tape archive name.
	l - Report broken links.
	m - Restore the mtime for each extracted file.
	v - Verbose flag.
	w - Interactive mode.
	U - Tape was written on a foreign (non-Coherent) system.
#tee
tee -- branch pipe output
Usage:	tee  [ -a ] [ -i ]  [ file ... ]
Options:
	-a	Append to each output 'file'
	-i	Ignore interrupts
#termcap
termcap -- terminal description language
#test
test -- evaluate conditional expression
Usage:	test expression ...
Expression:
	-d file		'file' exists and is a directory
	-f file		'file' exists and is not a directory
	-n string	'string' is of nonzero length
	-r file		'file' exists and is readable
	-s file		'file' exists and has nonzero size
	-t [fd]		File descriptor fd (default 1) is a terminal
	-w file		'file' exists and is writable
	-z string	'string' is of zero length
	string		'string' is not zero-length
	s1 = s2		's1' and 's2' are equal
	s1 != s2	's1' and 's2' are not equal
	n1 -eq n2	Numbers 'n1' and 'n2' are equal
	n1 -ne n2	'n1' and 'n2' are unequal
	n1 -gt n2	'n1' is greater than 'n2'
	n1 -ge n2	'n1' is greater than or equal to 'n2'
	n1 -lt n2	'n1' is less than 'n2'
	n1 -le n2	'n1' is less than or equal to 'n2'
	! exp		Negate the truth value of expression 'exp'
	exp1 -a exp2	Expressions 'exp1' and 'exp2' are both true
	exp1 -o exp2	Expression 'exp1' or 'exp2' is true
	( exp )		Grouping
#time
time -- time the execution of a command
Usage:	time [ command ]
If no 'command', print the date.
#times
times -- print total user and system times
Usage:	times
The shell sh executes times directly.
#tr
tr -- translate characters
Usage:	tr [ -cds ] string1 [ string2 ]
Options:
	-c	Complement the characters in 'string1'
	-d	Delete characters found in 'string1' (no 'string2' needed)
	-s	Squeeze multiple output mappings onto one character
Both strings may contain ranges.  Characters may have '\\nnn' form.
#trap
trap -- execute command on receipt of signal
Usage:	trap [ command ] [ n ... ]
The shell subsequently executes 'command' on receipt of signal 'n ...'.
If the 'command' is omitted, resets traps on given signals to original values.
If the 'command' is the null string, the given signals are ignored.
If 'n' is 0, the shell executes 'command' when it exits.
With no arguments, prints the currently set traps.
The shell sh executes trap directly.
#troff
troff -- text processor
Usage:	troff [ option ... ] [ file ... ]
Options:
	-d	Debugging mode
	-f name Write temporary file in directory 'name'.
	-i	Read standard input after each 'file' has been read
	-mname	Read macro package /usr/lib/tmac.name
	-nN	Number first page of output 'N' (default: 1)
	-raN	Set number register 'a' to value 'N'
	-x	Do not eject to bottom of final page
#true
true -- unconditional success
Usage:	true
Does nothing and returns exit status 0 (success).
#tsort
tsort -- topological sort
Usage:	tsort [ file ]
#tty
tty -- print the user's terminal name
Usage:	tty
#ttystat
ttystat -- get terminal status
Usage:	/etc/ttystat [ -d ] port
Option:	-d	Print status of port on standard output.
Returns exit status 1 if specified port is enabled, 0 if disabled.
Prints nothing unless -d option specified.
#typo
typo -- detect possible typographical and spelling errors
Usage:	typo [ -nrs ] [ file ... ]
Options:
	-n	Do not use built-in English statistics or dictionary
	-r	Raw; do not remove nroff commands from the input
	-s	Produce 'digrams' and 'trigrams' files (maintenance only)
#uniq
uniq -- remove/count repeated lines in a sorted file
Usage:	uniq [ options ] [ infile [ outfile] ]
Options:
	-c	Print duplication count with lines
	-d	Print only duplicated lines
	-n	Skip 'n' fields during comparison
	+n	Skip 'n' characters (after skipping fields)
	-u	Print only non-repeated lines
#umount
umount -- unmount a file system
Usage:  /etc/umount special
File /bin/umount contains useful abbreviations for invoking /etc/umount.
#uncompress
Uncompress a compressed file
Usage: uncompress [ -w tempfile ] [ file ... ]
#units
units -- measurement conversion
Usage:	units [ -u ]
Option:	-u	Update binary file only
Units works interactively.
#unmkfs
unmkfs -- create a prototype file system
Usage: unmkfs [-prefix] directory nblocks [file]
#until
until -- execute commands repeatedly
Usage:	until sequence1 [ do sequence2 ] done
Both 'do' and 'done' must be the first token on a line or preceded by ';'.
The shell sh executes until directly.
#update
update -- Update file systems periodically
Usage:	/etc/update
#uucico
uucico -- transmit data to or from a remote site
Usage:	/usr/lib/uucp/uucico [ -r1 ] [ -ssite ] [ -Ssite]
#uucp
uucp -- ready files for transmission to other systems
Usage:	uucp [ -bcCdmn ] source ... dest
#uudecode
uudecode -- decode a binary file sent from a remote system
Usage:	uudecode [ file ]
#uuencode
uuencode -- encode a binary file for transmission to a remote system
Usage:	uuencode [ source ] remotedest
#uuinstall
uuinstall -- install UUCP
Usage:	uuinstall
#uuname
uuname -- list uucp names of known systems
Usage:	uuname [ -l ]
#uutouch
uutouch -- touch a file to trigger uucico poll
Usage:	uutouch system
#uuxqt
uuxqt -- execute commands requested by a remote system
Usage:	uuxqt
#wc
wc -- count words, lines, and characters in files
Usage:	wc [ -clw ] [ file ... ]
Options:
	-c	Print count of characters
	-l	Print count of lines
	-w	Print count of words
If no 'file' is given, it uses the standard input;
if more than one 'file' is given, it also prints a total.
#wait
wait -- await completion of background process
Usage:	wait [ pid ]
If no 'pid' is given, awaits completion of all background processes.
The shell executes wait directly
#wall
wall -- send a message to all logged in users
Usage:	/etc/wall
Should be invoked only by superuser.
#while
while -- execute commands repeatedly
Usage:	while sequence1 [ do sequence2 ] done
Both 'do' and 'done' must be the first token on a line or preceded by ';'.
The shell sh executes while directly.
#who
who -- print who is logged in
Usage:	who [ file ] [ am i ]
#write
write -- conduct interactive conversation with another user
Usage:	write user [ tty ]
#yacc
yacc -- parser generator
Usage:	yacc [ options ] file
	cc y.tab.c [ -ly ]
Options:
	-d	Enable debugging output (implies '-v')
	-hdr	Next argument is name of header file (default: 'y.tab.h')
	-l	Next argument is name of listfile (default: 'y.output')
	-st	Print statistics on standard output
	-v	Verbose (extra output in listfile)
After each of the following, the next argument is a number to reset table size:
	-nterms	Nonterminal symbols (default: 100)
	-prods	Productions or rules (default: 175)
	-states	States (default: 300)
	-terms	Terminal symbols (default: 300)
	-types	Types (default: 10)
#yes
yes -- print infinitely many responses
Usage:	yes [ answer ]
The default 'answer' is 'y'.
#zcat
Concatenate a compressed file
Usage: zcat [ file ... ]
@
