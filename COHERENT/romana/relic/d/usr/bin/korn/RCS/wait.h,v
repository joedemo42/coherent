head     1.1;
access   ;
symbols  ;
locks    bin:1.1;
comment  @ * @;


1.1
date     91.04.12.15.54.31;  author bin;  state Exp;
branches ;
next	;


desc
@init ver pulled from Norm's cpu
@



1.1
log
@Initial revision
@
text
@/*
 * POSIX <sys/wait.h>
 */

#if __STDC__
#define	ARGS(args)	args
#else
#define	ARGS(args)	()
#endif

#if 1
typedef int pid_t;		/* belong in sys/types.h */
#endif

/* waitpid options */
#define WNOHANG		1	/* don't hang in wait */
#define WUNTRACED	2	/* tell about stopped, untraced children */

#define	WSTOPPED	0x7F	/* process is stopped */

#define WIFSTOPPED(x)	(((x)&0xFF) == 0x7F)
#define WIFSIGNALED(x)	(((x)&0xFF) != 0x7F && ((x)&0x7F) != 0)
#define WIFEXITED(x)	(((x)&0xFF) != 0x7F && ((x)&0x7F) == 0)
#define	WIFCORED(x)	(!!((x)&0x80)) /* non-standard */
#define	WEXITSTATUS(x)	((x)>>8&0xFF)
#define	WTERMSIG(x)	((x)&0x7F)
#define	WSTOPSIG(x)	((x)>>8&0xFF)

pid_t wait ARGS((int *statp));
#if _BSD
pid_t wait3 ARGS((int *statp, int options, Void *));
/* todo: does not emulate pid argument */
#define	waitpid(pid, sp, opts)	wait3(sp, opts, (Void*)NULL)
#else
pid_t waitpid ARGS((pid_t pid, int *statp, int options));
#endif

@
