head     1.2;
branch   ;
access   ;
symbols  ;
locks    bin:1.2;
comment  @ * @;


1.2
date     91.09.30.13.06.22;  author bin;  state Exp;
branches ;
next     1.1;

1.1
date     91.04.03.18.41.53;  author bin;  state Exp;
branches ;
next     ;


desc
@initial version provided by cef
@


1.2
log
@cef updated for better handling of 8bit chars
@
text
@/*
 * Copyright (c) 1981 Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms are permitted
 * provided that the above copyright notice and this paragraph are
 * duplicated in all such forms and that any documentation,
 * advertising materials, and other materials related to such
 * distribution and use acknowledge that the software was developed
 * by the University of California, Berkeley.  The name of the
 * University may not be used to endorse or promote products derived
 * from this software without specific prior written permission.
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
 * WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#ifndef COHERENT
#ifndef lint
static uchar sccsid[] = "@@(#)mvprintw.c	5.4 (Berkeley) 6/30/88";
#endif /* not lint */
#endif /* not COHERENT */

# include	"curses.ext"

/*
 * implement the mvprintw commands.  Due to the variable number of
 * arguments, they cannot be macros.  Sigh....
 *
 */

mvprintw(y, x, fmt /*, args */ )
reg int		y, x;
uchar		*fmt;
{
	uchar	buf[128];

	if (move(y, x) != OK)
		return ERR;
	(void) sprintf(buf, "%r", &fmt);
	return waddstr(stdscr, buf);
}

mvwprintw(win, y, x, fmt /*, args */)
reg WINDOW	*win;
reg int		y, x;
uchar		*fmt;
{
	uchar	buf[128];

	if (wmove(win, y, x) != OK)
		return ERR;
	(void) sprintf(buf, "%r", &fmt );
	return waddstr(win, buf);
}
@


1.1
log
@Initial revision
@
text
@d20 1
a20 1
static char sccsid[] = "@@(#)mvprintw.c	5.4 (Berkeley) 6/30/88";
d34 1
a34 1
char		*fmt;
d36 1
a36 1
	char	buf[128];
d47 1
a47 1
char		*fmt;
d49 1
a49 1
	char	buf[128];
@
