head     1.2;
access   ;
symbols  ;
locks    bin:1.2;
comment  @ * @;


1.2
date     91.05.13.13.55.24;  author bin;  state Exp;
branches ;
next	1.1;

1.1
date     91.03.28.18.32.00;  author bin;  state Exp;
branches ;
next	;


desc
@initial version provided by cef
@


1.2
log
@style changes by cef at steve's request
@
text
@/*
 * Case insensative string compare.
 */
strcmpl(s1, s2)
register unsigned char *s1, *s2;
{
    register c, d;

    for (;;) {
	switch (c = *s1++ - (d = *s2++)) {
	case 0:
		if (!d)
			break;
		continue;
	case ('A' - 'a'):
		if ((d < 'a') || (d > 'z'))
			break;
		continue;
	case ('a' - 'A'):
		if ((d < 'A') || (d > 'Z'))
			break;
		continue;
	}
	return (c);
    }
}

#ifdef TEST
#include "misc.h"
main()
{
    char s1[40], s2[40];

    for (;;) {
	ask(s1, "string1");
	ask(s2, "string2");
	printf("strcmpl(%s, %s) == %d\n", s1, s2, strcmpl(s1, s2));
    }
}
#endif
@


1.1
log
@Initial revision
@
text
@d10 1
a10 1
	switch(c = *s1++ - (d = *s2++)) {
d12 1
a12 1
		if(!d)
d16 1
a16 1
		if((d < 'a') || (d > 'z'))
d20 1
a20 1
		if((d < 'A') || (d > 'Z'))
d24 1
a24 1
	return(c);
@
