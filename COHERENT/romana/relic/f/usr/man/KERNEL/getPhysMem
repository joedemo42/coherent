ggeettPPhhyyssMMeemm() -- Memory-Manipulation Routine

cchhaarr *
ggeettPPhhyyssMMeemm(_n_u_m_B_y_t_e_s)
iinntt _n_u_m_B_y_t_e_s;

When the  kernel starts  up, it reserves  a block of  physically contiguous
memory  (of size  PPHHYYSS_MMEEMM) for  one or  more device  drivers to  use.  Any
device  driver  can  request some  of  this  memory;  to  do so,  it  calls
ggeettPPhhyyssMMeemm()  from within  its  load routine.   _n_u_m_B_y_t_e_s  gives the  number
number of bytes it needs.

If it can meet the request, ggeettPPhhyyssMMeemm() returns the virtual address of the
start  of  the  region  allocated.   This  region  has  contiguous  virtual
addresses  within  kernel  data  space,  as  well  as  contiguous  physical
addresses.  If  it cannot grant  the request, ggeettPPhhyyssMMeemm()  returns 0.  Use
routine vvttoopp() to determine the physical address of the region.

_S_e_e _A_l_s_o
mmeemmoorryy-mmaanniippuullaattiioonn rroouuttiinneess, vvttoopp()
