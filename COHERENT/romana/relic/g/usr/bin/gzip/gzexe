:
#!/bin/sh
# gzexe: compressor for Unix executables.
# Use this only for binaries that you do not use frequently.
#
# The compressed version is a shell script which decompresses itself after
# skipping $skip lines of shell commands.  We try invoking the compressed
# executable with the original name (for programs looking at their name).
# We also try to retain the original file permissions on the compressed file.

# Warning: the first line of this file must be either : or #!/bin/sh
# The : is required for some old versions of csh.

x=`basename $0`
if test $# = 0; then
  echo compress executables. original file foo is renamed to foo~
  echo usage: ${x} [-d] files...
  echo   "   -d  decompress the executables"
  exit 1
fi

tmp=gz$$
trap "rm -f $tmp; exit 1" 1 2 3 5 10 13 15

decomp=0
res=0
test "$x" = "ungzexe" && decomp=1
if test "$1" = "-d"; then
  decomp=1
  shift
fi

for i do
  if test ! -f "$i" ; then
    echo ${x}: $i not a file
    res=1
    continue
  fi

  cp -p "$i" $tmp 2>/dev/null || cp "$i" $tmp
  if test -w $tmp 2>/dev/null; then
    writable=1
  else
    writable=0
    chmod u+w $tmp 2>/dev/null
  fi
  if test $decomp -eq 0; then
    sed 1q $0 > $tmp
    sed "s,foo,$i," >> $tmp <<'EOF'
skip=18
if tail +$skip $0 | gzip -cd > /tmp/gztmp$$; then
  chmod 755 /tmp/gztmp$$
  if ln /tmp/gztmp$$ /tmp/foo 2>/dev/null; then
    trap '/bin/rm -f /tmp/gztmp$$ "/tmp/foo"; exit $res' 0
    (sleep 5; /bin/rm -f /tmp/gztmp$$ "/tmp/foo") 2>/dev/null &
    /tmp/foo ${1+"$@"}; res=$?
  else
    trap '/bin/rm -f /tmp/gztmp$$; exit $res' 0
    (sleep 5; /bin/rm -f /tmp/gztmp$$) 2>/dev/null &
    /tmp/gztmp$$ ${1+"$@"}; res=$?
  fi
else
  echo Cannot decompress $0
  exit 1
fi; exit $res
EOF
    if gzip -cv9 "$i" >> $tmp; then
      /bin/rm -f "$i~"
      mv "$i" "$i~" || {
        echo ${x}: cannot backup $i as $i~
	rm -f $tmp
	res=1
	continue;
      }
      mv $tmp $i || cp -p $tmp $i 2>/dev/null || cp $tmp $i
      if test $writable -eq 0; then
	chmod u-w $i 2>/dev/null
      fi
    else
      /bin/rm -f $tmp
      echo ${x}: compression not possible for $i, file unchanged.
      res=1
    fi

  else #decompression
    skip=18
    if sed -e 1d -e 2q "$i" | grep "^skip=" >/dev/null; then
      eval `sed -e 1d -e 2q "$i"`
    fi
    if tail +$skip $i | gzip -cd > $tmp; then
      /bin/rm -f "$i~"
      mv "$i" "$i~" || {
        echo ${x}: cannot backup $i as $i~
	rm -f $tmp
	res=1
	continue;
      }
      mv $tmp "$i" || cp -p $tmp "$i" 2>/dev/null || cp $tmp "$i" || {
        echo ${x}: cannot create $i
	rm -f $tmp
        res=1
        continue
      }
      rm -f $tmp
      if test $writable -eq 0; then
	chmod u-w $i 2>/dev/null
      fi
    else
      echo ${x}: $i probably not in gzexe format, file unchanged.
    fi
  fi
done
exit $res
