head     1.4;
branch   ;
access   ;
symbols  ;
locks    ;
comment  @ * @;


1.4
date     93.07.16.10.16.52;  author bin;  state Exp;
branches ;
next     1.3;

1.3
date     93.03.02.07.42.37;  author bin;  state Exp;
branches ;
next     1.2;

1.2
date     92.10.22.14.21.36;  author bin;  state Exp;
branches ;
next     1.1;

1.1
date     92.07.07.12.24.08;  author bin;  state Exp;
branches ;
next     ;


desc
@@


1.4
log
@Kernel 79 w/streams
@
text
@/* (-lgl
 * 	COHERENT 386 Device Driver Kit release 2.0
 * 	Copyright (c) 1982, 1992 by Mark Williams Company.
 * 	All rights reserved. May not be copied without permission.
 -lgl) */

#ifndef __DIRENT_H__
#define __DIRENT_H__

#include <common/feature.h>
#include <common/ccompat.h>

#include <common/_uid.h>
#include <common/_daddr.h>
#include <common/__off.h>

#if	_I386

struct dirent {
	n_ino_t		__NON_POSIX (d_ino);	/* i-node number */
	__daddr_t	__NON_POSIX (d_off);	/* offset in actual directory*/
	unsigned short	__NON_POSIX (d_reclen);	/* record length */
	char		d_name [1];
};

typedef struct {
	int		__NON_POSIX (dd_fd);	/* file descriptor */
	int		__NON_POSIX (dd_loc);	/* offset in block */
	int		__NON_POSIX (dd_size);	/* amount of valid data */
	char	      *	__NON_POSIX (dd_buf);	/* -> directory block */
} DIR;			/* stream data from opendir() */


#if	! _POSIX_SOURCE

#define	DIRBUF		2048		/* buffer size for fs-indep. dirs */
	/* must in general be larger than the filesystem buffer size */

#define	MAXNAMLEN	14		/* maximum filename length */

#endif	/* ! _POSIX_SOURCE */

#else	/* if ! _I386 */

#if	! DIRSIZ
# define	DIRSIZ		14	/* Size of directory name */
#endif

struct dirent {
	ino_t	 d_ino;			/* Inode number */
	char	 d_name[DIRSIZ];	/* Name */
};

#endif	/* ! _I386 */


__EXTERN_C_BEGIN__

DIR	      *	opendir		__PROTO ((__CONST__ char * _dirname));
struct dirent *	readdir		__PROTO ((DIR * _dirp));
void		rewinddir	__PROTO ((DIR * _dirp));
void		closedir	__PROTO ((DIR * _dirp));

#if	! _POSIX_SOURCE

__off_t		telldir		__PROTO ((DIR * _dirp));
void		seekdir		__PROTO ((DIR * _dirp, __off_t _loc));

#endif

__EXTERN_C_END__


#endif	/* ! defined (__DIRENT_H__) */
@


1.3
log
@hal: newupdates for kernel 73, several
changes by nigel for __COHERENT__
@
text
@d10 2
a11 1
#ifdef _I386
d13 6
d20 4
a23 4
	long	d_ino;	/* i-node number */
	daddr_t	d_off;	/* offset in actual directory*/
	unsigned short	d_reclen;  /*record length*/
	char	d_name[1];
d26 6
a31 1
#define	MAXNAMLEN	14		/* maximum filename length */
d33 3
d39 1
a39 7
typedef struct
	{
	int	dd_fd;			/* file descriptor */
	int	dd_loc;			/* offset in block */
	int	dd_size;		/* amount of valid data */
	char	*dd_buf;		/* -> directory block */
	}	DIR;			/* stream data from opendir() */
d41 1
a41 6
extern DIR		*opendir();
extern struct dirent	*readdir();
extern void		rewinddir();
extern int		closedir();
extern daddr_t		telldir();
extern void		seekdir();
d43 7
a49 2
#define DIRSIZ	14		/* Size of directory name */
struct direct {
d54 1
a54 9
#else
/*
 *-------------------- 286 version ----------------
 */
/*
 * Rely on COHERENT's sys/dir.h to define type DIR and structure direct with
 * fields d_ino of type ino_t and d_name of type char [].
 */
#include <sys/types.h>
a55 2
#define DIRSIZ	14		/* Size of directory name */
#define	DIR	char *		/* Directory type */
d57 1
a57 7
/*
 * Directory entry structure.
 */
struct direct {
	ino_t	 d_ino;			/* Inode number */
	char	 d_name[DIRSIZ];	/* Name */
};
d59 4
a62 5
/*
 * Implement dirent as a macro, making struct dirent equivalent to COHERENT's 
 * struct direct.
 */
#define dirent direct
d64 5
d70 5
a74 1
#endif
@


1.2
log
@cleaned up by hal with kernel 66
@
text
@d2 1
a2 1
 * 	COHERENT Version 4.0
d7 2
a8 2
#ifndef DIRENT_H
#define DIRENT_H 1
@


1.1
log
@Initial revision
@
text
@a5 3
/*
 * POSIX (IEEE 1003.1) compatible dirent.h header file.
 */
d12 6
a17 1
#include <sys/dirent.h>
a31 1

d39 6
d53 1
a53 1
#include <sys/dir.h>
d55 3
d59 8
@
