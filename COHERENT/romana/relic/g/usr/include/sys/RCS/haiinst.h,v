head     1.2;
branch   ;
access   ;
symbols  ;
locks    ;
comment  @ * @;


1.2
date     93.08.10.13.29.07;  author bin;  state Exp;
branches ;
next     1.1;

1.1
date     93.07.20.11.42.04;  author bin;  state Exp;
branches ;
next     ;


desc
@@


1.2
log
@Kernel 82 header update
@
text
@@


1.1
log
@Initial revision
@
text
@a0 44
/***********************************************************************
 *  haiinst.h    --  Configuration Device driver for haiscsi.
 *
 *  This driver is an information server for the SCSI bus.  Through
 *  it you can do any SCSI Commands you wish on any target you wish
 *  Asyncronously.  The intended use for this is to allow a user
 *  level configuration program to get the information they need to
 *  patch and produce a new kernel at install time.  Use outside of
 *  that relm is completely undefined.
 *
 *  Copyright (c) 1993 Christopher Sean Hilton. All rights reserved.
 *
 *  Last Modified: Thu Jun 24 13:54:09 1993 by [chris]
 *
 *  $Id: haiinst.h,v 1.0 93/06/27 18:23:29 chris Exp Locker: chris $
 */

#ifndef HAICFG

#define HAICFG		(0x48414900)	/* "HAI" (Big Endian) */
#define HAICFG_INQ	(HAICFG | 0)	/* Inquiry command */
#define HAICFG_MDSNS0	(HAICFG | 1)	/* Group 0 mode sense command */
#define HAICFG_MDSLT0	(HAICFG | 2)	/* Group 0 mode select command */
#define HAICFG_MDSNS2	(HAICFG | 3)	/* Group 2 mode sense command */
#define HAICFG_MDSLT2	(HAICFG | 4)	/* Group 2 mode select command */
#define HAICFG_USERCDB	(HAICFG | 5)	/* User defined CDB */

#pragma align 1
typedef struct cfg_io_s *cfg_io_p;

typedef struct cfg_io_s {
	unsigned short	status; 	/* Status that the command returned with */
	unsigned short	hastat; 	/* Host Adapter status */
	unsigned char	target; 	/* Id this command is addressed to */
	unsigned char	lun;		/* Lun this command... */
	unsigned short	tries;		/* Number of retries allowed */
	unsigned short	timeout;	/* Amount of time to allow (seconds) */
	unsigned short	xferdir;	/* Transfer direction for this command */
	size_t		buflen; 	/* Length of the buffer */
	char		buf[0]; 	/* Is this compatable with C++? */
} cfg_io_t;

#pragma align
#endif
@
