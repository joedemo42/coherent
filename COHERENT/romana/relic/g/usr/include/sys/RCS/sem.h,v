head     1.7;
branch   ;
access   ;
symbols  ;
locks    ;
comment  @ * @;


1.7
date     93.07.16.19.25.41;  author bin;  state Exp;
branches ;
next     1.6;

1.6
date     93.04.20.09.57.36;  author bin;  state Exp;
branches ;
next     1.5;

1.5
date     93.04.09.08.25.21;  author bin;  state Exp;
branches ;
next     1.4;

1.4
date     93.03.11.08.44.34;  author bin;  state Exp;
branches ;
next     1.3;

1.3
date     93.03.02.07.50.58;  author bin;  state Exp;
branches ;
next     1.2;

1.2
date     92.12.18.14.05.21;  author bin;  state Exp;
branches ;
next     1.1;

1.1
date     92.07.07.12.25.39;  author bin;  state Exp;
branches ;
next     ;


desc
@@


1.7
log
@*** empty log message ***
@
text
@/* (-lgl
 * 	COHERENT Version 4.0
 * 	Copyright (c) 1982, 1993 by Mark Williams Company.
 * 	All rights reserved. May not be copied without permission.
 -lgl) */
/*
 * /usr/include/sys/sem.h
 *
 * IPC Semaphore Facility
 *
 * Revised: Mon Apr 19 13:52:49 1993 CDT
 */
#ifndef __SYS_SEM_H__
#define __SYS_SEM_H__

#include <sys/ipc.h>
#include <common/_time.h>

/*
 * Permission Definitions.
 */
#define	SEM_A	0200		/* alter permission */
#define	SEM_R	0400		/* read permission */

/*
 * Semaphore Operation Flags.
 */
#define SEM_UNDO 010000		/* set up adjust on exit entry */

/*
 * Semctl Command Definitions.
 */
#define	GETNCNT	3		/* get semncnt */
#define	GETPID	4		/* get sempid  */
#define	GETVAL	5		/* get semval  */
#define	GETALL	6		/* get all semval's */
#define	GETZCNT 7		/* get semzcnt */
#define	SETVAL	8		/* set semval  */
#define	SETALL	9		/* set all semval's */

/*
 * Structure Definitions.
 */

/*
 * There is one semaphore structure for each semaphore in the system.
 */
struct sem {
	unsigned short	semval;		/* semaphore value */
	short		sempid;		/* pid of last operation */
	unsigned short	semncnt;	/* # awaiting semval > cval */
	unsigned short	semzcnt;	/* # awaiting semval = 0 */
};

/*
 * There is one semaphore id data structure for each set of semaphores
 * in the system.
 */
struct semid_ds {
	struct ipc_perm	sem_perm;	/* semaphore permission struct */
	struct sem	*sem_base;	/* pointer to first semaphore in set */
	unsigned short	sem_nsems;	/* # of semaphores in set */
	time_t		sem_otime;	/* last semop time */
	time_t		sem_ctime;	/* last change time */
};

/*
 * There is one link list of undo structures per process.
 */
struct sem_undo {
	struct sem_undo *un_np;		/* ptr to next active undo structure */
	short		un_aoe;		/* adjust on exit values */
	short		un_num;		/* semaphore # */
	int		un_id;		/* semid */
};

/*
 * User semaphore template for semop system calls.
 */
struct sembuf {
	unsigned short	sem_num;	/* semaphore # */
	short		sem_op;		/* semaphore operation */
	short		sem_flg;	/* operation flags */
};

/*
 * Ioctl commands issued to Semaphore device driver (Coherent 286 specific).
 */
#define	SEMIOC	('S'<<8)
#define	SEMCTL	(SEMIOC|0)
#define	SEMGET	(SEMIOC|1)
#define	SEMOP	(SEMIOC|2)

#endif /* __SYS_SEM_H__ */
@


1.6
log
@hal: kernel 77: semaphore changes for vlad
@
text
@d17 1
a17 1
#include <sys/_time.h>
@


1.5
log
@Hal: paddr_t cleanup, added greek kbd,allow more than 1 text section for coff execs, added core.h, __paddr.h
@
text
@d2 2
a3 2
 * 	COHERENT Version 3.0
 * 	Copyright (c) 1982, 1990 by Mark Williams Company.
d11 1
a11 1
 * Revised: Thu Apr  8 15:28:34 1993 CDT
d20 1
a20 1
 *	Permission Definitions.
d26 1
a26 1
 *	Semaphore Operation Flags.
d28 1
a28 1
#define SEM_UNDO 010000	/* set up adjust on exit entry */
d31 1
a31 1
 *	Semctl Command Definitions.
d38 1
a38 1
#define	SETVAL	8		/* set semval */
d42 1
a42 1
 *	Structure Definitions.
d46 1
a46 1
 *	There is one semaphore structure for each semaphore in the system.
d49 1
a49 2

	unsigned short	semval;		/* semaphore text map address */
d56 2
a57 2
 *	There is one semaphore id data structure for each set of semaphores
 *		in the system.
d60 1
a60 2

	struct ipc_perm	sem_perm;	/* operation permission struct */
d68 1
a68 1
 *	There is one undo structure per process in the system.
a70 1

d72 3
a74 6
	short		un_cnt;		/* # of active entries */
	struct undo {
		short	un_aoe;		/* adjust on exit values */
		short	un_num;		/* semaphore # */
		int	un_id;		/* semid */
	} un_ent[1];			/* undo entries (one minimum) */
d78 1
a78 1
 *	User semaphore template for semop system calls.
a80 1

@


1.4
log
@Hal: kernel 74 changes
@
text
@d6 7
a15 3
/*
**	IPC Semaphore Facility
*/
d20 2
a21 3
**	Permission Definitions.
*/

d26 3
a28 2
**	Semaphore Operation Flags.
*/
a29 2
/* #define SEM_UNDO 010000 */	/* set up adjust on exit entry */

d31 2
a32 3
**	Semctl Command Definitions.
*/

d42 2
a43 2
**	Structure Definitions.
*/
d46 3
a48 2
**	There is one semaphore structure for each semaphore in the system.
*/
a49 2
struct sem {

d57 4
a60 3
**	There is one semaphore id data structure for each set of semaphores
**		in the system.
*/
a61 2
struct semid_ds {

d70 3
a72 2
**	There is one undo structure per process in the system.
*/
a73 2
struct sem_undo {

d84 3
a86 2
**	User semaphore template for semop system calls.
*/
a87 2
struct sembuf {

d94 2
a95 3
** Ioctl commands issued to Semaphore device driver (Coherent specific).
*/

d101 1
a101 1
#endif
@


1.3
log
@hal: newupdates for kernel 73, several
changes by Nigel for __COHERENT__
@
text
@a11 1
#ifndef _IPC_H
a12 1
#endif
a14 1

@


1.2
log
@hal: update w/kernel 71
@
text
@d6 2
a7 2
#ifndef _SEM_H
#define _SEM_H
d15 1
d17 1
@


1.1
log
@Initial revision
@
text
@d6 2
a7 2
#ifndef SEM_H
#define SEM_H
d12 3
a15 3
#include <sys/ipc.h>
#include <sys/types.h>

@
