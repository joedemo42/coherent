head     1.4;
branch   ;
access   ;
symbols  ;
locks    ;
comment  @ * @;


1.4
date     93.07.20.11.43.41;  author bin;  state Exp;
branches ;
next     1.3;

1.3
date     93.07.16.19.24.02;  author root;  state Exp;
branches ;
next     1.2;

1.2
date     93.04.09.08.25.55;  author bin;  state Exp;
branches ;
next     1.1;

1.1
date     93.03.02.07.51.36;  author bin;  state Exp;
branches ;
next     ;


desc
@@


1.4
log
@*** empty log message ***
@
text
@/*
 * /usr/include/sys/wait.h
 *
 * Support for wait() and waitpid() system calls.
 *
 * Revised Mon Mar 22 13:10:53 1993 CST
 */

#ifndef	__SYS_WAIT_H__
#define	__SYS_WAIT_H__

/*
 * This header is defined in the POSIX.1 standard ISO/IEC 9945-1:1990, and as
 * such client programs which include this header should not use any symbols
 * which end in "_t".
 */

/*
 * The contents of this header are also defined by the provisions of binary
 * compatibility standards such as the iBCS2 specification and the System V
 * ABI. The visibility of certain symbols defined by those standards may be
 * controlled by feature-test macros such as _SYSV3 for iBCS2, and _SYSV4 for
 * System V, Release 4.
 */

#include <common/ccompat.h>
#include <common/__pid.h>
#include <common/_wait.h>

#if	_SYSV4 && ! _SYSV3

# define	WEXITED		__WEXITED
# define	WTRAPPED	__WTRAPPED

# define	WSTOPFLG	__WSTOPFLG
# define	WCOREFLG	__WCOREFLG

# define	WCONTINUED	__WCONTINUED
# define	WNOWAIT		__WNOWAIT

# define	WIFCONTINUED(stat)	__WIFCONTINUED (stat)
# define	WCOREDUMP(stat)		__WCOREDUMP (stat)

#endif


#define	WUNTRACED	__WUNTRACED
#define	WNOHANG		__WNOHANG

#define	WIFEXITED(stat)		__WIFEXITED (stat)
#define	WEXITSTATUS(stat)	__WEXITSTATUS (stat)

#define	WIFSIGNALED(stat)	__WIFSIGNALED (stat)
#define	WTERMSIG(stat)		__WTERMSIG (stat)

#define	WIFSTOPPED(stat)	__WIFSTOPPED (stat)
#define	WSTOPSIG(stat)		__WSTOPSIG (stat)


__EXTERN_C_BEGIN__

__pid_t		wait		__PROTO ((int * _stat_loc));
__pid_t		waitpid		__PROTO ((__pid_t _pid, int * _stat_loc,
					  int _options));

__EXTERN_C_END__

#endif	/* ! defined (__SYS_WAIT_H__) */
@


1.3
log
@Hal: 2nd try at r79
@
text
@d1 68
@


1.2
log
@*** empty log message ***
@
text
@a0 75
/*
 * /usr/include/sys/wait.h
 *
 * Support for wait() and waitpid() system calls.
 *
 * Revised Mon Mar 22 13:10:53 1993 CST
 */

#ifndef	__SYS_WAIT_H__
#define	__SYS_WAIT_H__

/*
 * This header is defined in the POSIX.1 standard ISO/IEC 9945-1:1990, and as
 * such client programs which include this header should not use any symbols
 * which end in "_t".
 */

/*
 * The contents of this header are also defined by the provisions of binary
 * compatibility standards such as the iBCS2 specification and the System V
 * ABI. The visibility of certain symbols defined by those standards may be
 * controlled by feature-test macros such as _SYSV3 for iBCS2, and _SYSV4 for
 * System V, Release 4.
 */

#include <sys/ccompat.h>
#include <sys/__pid.h>


#define	__WSIGMASK		0x7F
#define	__WSTOPFLG		0x7F

#if	_SYSV4

# define	WEXITED		0x01
# define	WTRAPPED	0x02

# define	WSTOPFLG	__WSTOPFLG
# define	WCOREFLG	0x80

# define	WCONTINUED	0x08
# define	WNOWAIT		0x80

# define	WCOREDUMP(stat)	((stat) & WCOREFLG)

#endif


#define	WUNTRACED	0x04
#define	WNOHANG		0x40


#define	__WLOBYTE(stat)		((stat) & 0xFF)
#define	__WHIBYTE(stat)		(((stat) >> 8) & 0xFF)

#define	WIFEXITED(stat)		(__WLOBYTE (stat) == 0)
#define	WEXITSTATUS(stat)	(__WHIBYTE (stat))

#define	WIFSIGNALED(stat)	(__WLOBYTE (stat) > 0 && __WHIBYTE (stat) == 0)
#define	WTERMSIG(stat)		(__WLOBYTE (stat) & __WSIGMASK)

#define	WIFSTOPPED(stat)	(__WLOBYTE (stat) == __WSTOPFLG && \
				 __WHIBYTE (stat) != 0)
#define	WSTOPSIG(stat)		(__WHIBYTE (stat))


__EXTERN_C_BEGIN__

__pid_t		wait		__PROTO ((int * _stat_loc));
__pid_t		waitpid		__PROTO ((__pid_t _pid, int * _stat_loc,
					  int _options));

__EXTERN_C_END__

#endif	/* ! defined (__SYS_WAIT_H__) */
@


1.1
log
@hal: newupdates for kernel 73, several
changes by Nigel for __COHERENT__
@
text
@d1 8
@
