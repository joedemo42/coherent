

header files                 Overview                header files




A header file is a file of C code that contains definitions, dec-
larations, and structures commonly used in a given situation.  By
tradition, a  header file always  has the suffix  ``.h''.  Header
files are  invoked within  a C  program by the  command #iinncclluuddee,
which is  read by cpp, the C preprocessor;  for this reason, they
are also called ``include files''.

Header files  are one of the  most useful tools available  to a C
programmer.  They allow you to put  into one place all of the in-
formation  that  the different  modules  of  your program  share.
Proper  use of  header files  will make  your programs  easier to
maintain and to port to other environments.

COHERENT includes the following header files:
aacccceessss.hh       Check accessibility
aacccctt.hh         Format for process-accounting file
aaccttiioonn.hh       Describe parsing action and goto tables
ssyyss/aalllloocc.hh    Define the allocator
aarr.hh           Format for archive files
aasscciiii.hh        Define non-printable ASCII characters
aasssseerrtt.hh       Define aasssseerrtt()
ssyyss/bbuuff.hh      Buffer header
ccaannoonn.hh        Portable layout of binary data
ssyyss/cchhaarrss.hh    Character definitions
ssyyss/ccoonn.hh      Configure device drivers
ssyyss/ccoonnsstt.hh    Declare machine-dependent constants
ccttyyppee.hh        Header file for data tests
ccuurrsseess.hh       Declare/define ccuurrsseess routines
ssyyss/ddeeffttttyy.hh   Default tty settings
ssyyss/ddiirr.hh      Directory format
ddiirreenntt.hh       Define constant ddiirreenntt
dduummppttaappee.hh     Define data structures for dump tapes
eebbccddiicc.hh       Define constants for non-printable EBCDIC characters
eerrrrnnoo.hh        Error numbers used by errno()
ssyyss/ffbbllkk.hh     Define disk-free block
ssyyss/ffccnnttll.hh    Manifest constants for file-handling functions"
ssyyss/ffdd.hh       Declare file-descriptor structure
ssyyss/ffddiiooccttll.hh  Control floppy-disk I/O
ssyyss/ffddiisskk.hh    Fixed-disk constants and structures
ssyyss/ffiillssyyss.hh   Structures and constants for super block
ffppeerrrr.hh        Constants used with floating-point exception codes
ggrrpp.hh          Declare group structure
ssyyss/hhddiiooccttll.hh  Control hard-disk I/O
ssyyss/iinnoo.hh      Constants and structures for i-nodes
ssyyss/iinnooddee.hh    Constants and structures for memory-resident i-nodes
ssyyss/iioo.hh       Constants and structures used by I/O
ssyyss/iippcc.hh      Declarations for process communications
ll.oouutt.hh        Object file format
ssyyss/llppiiooccttll.hh  Definitions for line-printer I/O control
ssyyss/mmaacchhiinnee.hh  Machine-dependent definitions
ssyyss/mmaalllloocc.hh   Definitions for memory-allocation functions
mmaatthh.hh         Declare mathematics functions
ssyyss/mmddaattaa.hh    Define machine-specific magic numbers
mmnnttttaabb.hh       Structure for mount table


COHERENT Lexicon                                           Page 1




header files                 Overview                header files



mmoonn.hh          Read profile output files
ssyyss/mmoouunntt.hh    Define the mount table
mmpprreecc.hh        Multiple-precision arithmetic
ssyyss/mmssgg.hh      Definitions for message facility
ssyyss/mmssiigg.hh     Machine-dependent signals
mmttaabb.hh         Currently mounted file systems
ssyyss/mmttiiooccttll.hh  Magnetic-tape I/O control
mmttyyppee.hh        List processor code numbers
nn.oouutt.hh        Define n.out file structure
ssyyss/ppaarraamm.hh    Define machine-specific parameters
ppaatthh.hh         Define/declare constants and functions used with path
ssyyss/ppoollll.hh     Define structures/constants used with polling devices
ssyyss/pprroocc.hh     Define structures/constants used with processes
ppwwdd.hh          Declare password structure
ssyyss/sscchheedd.hh    Define constants used with scheduling
ssyyss/sseegg.hh      Definitions used with segmentation
ssyyss/sseemm.hh      Definitions used by semaphore facility
sseettjjmmpp.hh       Define setjmp() and longjmp()
ssggttttyy.hh        Definitions used to control terminal I/O
ssyyss/sshhmm.hh      Definitions used with shared memory
ssiiggnnaall.hh       Declare signals
ssyyss/ssttaatt.hh     Definitions and declarations used to obtain file status
ssttddddeeff.hh       Declare/define standard definitions
ssttddiioo.hh        Declarations and definitions for I/O
ssyyss/ssttrreeaamm.hh   Definitions for message facility"
ssttrriinngg.hh       Declare string functions
tteerrmmiioo.hh       Definitions used with terminal input and output
ttiimmee.hh         Give time-description structure
ssyyss/ttiimmeebb.hh    Declare timeb structure
ttiimmeeff.hh        Definitions for user-level timed functions
ssyyss/ttiimmeeoouutt.hh  Define the timer queue
ssyyss/ttiimmeess.hh    Definitions used with times() system call
ssyyss/ttttyy.hh      Define flags used with tty processing
ssyyss/ttyyppeess.hh    Declare system-specific data types
ssyyss/uupprroocc.hh    Definitions used with user processes
uuttmmpp.hh         Login accounting information
ssyyss/uuttssnnaammee.hh  Define utsname structure
vv77ssggttttyy.hh      UNIX Version 7-style terminal I/O

***** See Also *****

C language, #include, portability















COHERENT Lexicon                                           Page 2


