head     1.3;
access   ;
symbols  ;
locks    bin:1.3;
comment  @ * @;


1.3
date     92.06.10.21.35.22;  author bin;  state Exp;
branches ;
next	1.2;

1.2
date     92.06.10.00.23.08;  author bin;  state Exp;
branches ;
next	1.1;

1.1
date     92.06.10.00.23.08;  author bin;  state Exp;
branches ;
next	;


desc
@steve 6/9/92
Initial MWC RCS revision.
@


1.3
log
@steve 6/10/92
Rather than returning x below THRESHOLD, expand according to Taylor's Series.
@
text
@/*
 * libm/sin.c
 * Evaluate the sine function.
 */

#include <math.h>

#if	EMU87
#include "emumath.h"
#endif

#define	THRESHOLD	1.111111111111111111e-3

/*
 * When |x| is very small, use the series
 *	x - x**3 / 6 + x**5 / 120 - ...
 * to get an accurate result while avoiding loss of precision.
 * The THRESHOLD value above is determined empirically.
 */
static readonly double sintab[] ={
	 0.000000000000000000000000,
	 1.000000000000000000000000,
	 0.000000000000000000000000,
	-0.166666666666666666666666,
	 0.000000000000000000000000,
	 0.008333333333333333333333
};

double
sin(x) double x;
{
	if (fabs(x) < THRESHOLD)
		return _pol(x, sintab, 6);
	return cos(PI/2.0 - x);
}

/* end of sin.c */
@


1.2
log
@steve 6/9/92
Added code to return arg unchanged when less that THRESHOLD in absolute value
after Promula reported inaccuracy for very small arguments.
@
text
@d12 2
d15 4
a18 8
 * To get a correct result for very small |x|,
 * the code below just returns x for |x| < THRESHOLD.
 * We can derive a theoretical value for THRESHOLD from the series:
 *	sin(x)  = x - x^3/3! + x^5/5! - ...
 * so if |x| < sqrt(6 * DBL_EPSILON) then x^3/3! < x * DBL_EPSILON
 * and the low-order terms must be insignificant.
 * The threshold value below, arrived at empirically, is somewhat larger;
 * it is for IEEE fp, the DECVAX value must be slightly different but...
d20 8
a27 1
#define	THRESHOLD	2.1485600010223542e-8
d33 2
a34 2
		return x;
	return cos(x - PI/2.0);
@


1.1
log
@Initial revision
@
text
@d2 1
d5 1
d12 12
d25 1
a25 2
sin(x)
double x;
d27 3
a29 1
	return (cos(x-PI/2.0));
d31 2
@
