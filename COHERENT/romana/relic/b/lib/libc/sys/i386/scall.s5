# scall.s5 6/22/93
#ident libc-m32:scall.list %I%
#
# $1= func_name, $2=s_call number, $3= arg count, $4= flags
#	 flags : 0x01 -> rval in d1
#                0x02 -> arg = arg@, (arg count = 1)
#	
# _exit	1	1	# called by exit(), now in crts0.s
# fork	2	0
read	3	3
write	4	3
open	5	3
close	6	1
# wait	7	1	# pid of child returned in d0, status in d1
creat	8	2
link	9	2
unlink	10	1
chdir	12	1
_time	13	0	# called by time().
mknod	14	3
chmod	15	2
chown	16	3
# brk	17	1  	
stat	18	2
lseek	19	3 
getpid	20	0
getppid	20	0	1	# same as getpid, rval in d1. 
mount	21	4 
umount	22	1 
setuid	23	1 
getuid	24	0
geteuid	24	0	1	# same as getuid, rval in d1.
stime	25	1 	2	# arg = (long *), put *arg in d1. 
ptrace	26	4 
alarm	27	1 
fstat	28	2 
pause	29	0 
utime	30	2 
access	33	2 
nice	34	1 
statfs	35	4 
sync	36	0 
kill	37	2 
fstatfs	38	4 
_pgrp	39	1 	# called by getpgrp(), setpgrp() -> _pgrp(0|1)
dup	41	2 
# pipe() is hand writen,  and cannot be generated.
# pipe	42	0	# first fd returned in d0, second fd in d1.
times	43	1 
profil	44	4 
plock	45	1 
setgid	46	1 
getgid	47	0	
getegid	47	0	1	# same as getgid, rval in d1.
_msgsys	49	6	# called by msgget(), msgctl(), msgrcv(), msgsnd().
sysi86	50	5	# specific sys-call
acct	51	1 
_shmsys	52	4	# called by shmat(), shmctcl(), shmdt(), shmget().
_semsys	53	5	# called by semctl(), semget(), semop().
ioctl	54	3 
uadmin	55	3 
_utssys	57	3 	# called by uname(), ustat().
# execve	59	3   # called by execl(), execv(), execle(), execlp(), execvp
umask	60	1 
chroot	61	1 
fcntl	62	3 
ulimit	63	2 
rmdir	79	1 
mkdir	80	2 
getdents 81	4
poll	87	3
chsize	2600	2
ftime	2856	2
nap	3112	1
# end of scall.s5
