head     1.2;
access   ;
symbols  ;
locks    bin:1.2;
comment  @ * @;


1.2
date     91.10.31.22.53.09;  author bin;  state Exp;
branches ;
next	1.1;

1.1
date     91.10.31.22.44.28;  author bin;  state Exp;
branches ;
next	;


desc
@steve 10/31/91
Initial MWC RCS revision.
This corresponds to object in V320 libc.a/calloc().
@


1.2
log
@steve 10/31/91
Fixed bug reported by cef: now detects overflow of size * nmemb.
@
text
@/*
 * C general utilities library.
 * calloc()
 * ANSI 4.10.3.1.
 * Allocate and clear.
 */

#include <stdlib.h>
#include <string.h>

Void *
calloc(nmemb, size) size_t nmemb; register size_t size;
{
	register Void *bp;
	long lsize;

	lsize = (long)size * nmemb;
	size *= nmemb;
	if (lsize != (long)size)
		return (Void *)NULL;
	if ((bp = malloc(size)) != NULL)
		memset(bp, 0, size);
	return bp;
}

/* end of calloc.c */
@


1.1
log
@Initial revision
@
text
@a10 4
/*
 * This does not check that size*nmemb fits in a size_t.
 * The return type should be void *.
 */
d15 1
d17 1
d19 2
@
