head     1.2;
branch   ;
access   ;
symbols  ;
locks    bin:1.2; strict;
comment  @ * @;


1.2
date     93.01.05.16.26.55;  author bin;  state Exp;
branches ;
next     1.1;

1.1
date     93.01.05.16.26.35;  author bin;  state Exp;
branches ;
next     ;


desc
@steve 1/5/93
Initial MWC RCS revision.
@


1.2
log
@steve 1/5/93
Revised to avoid unlikely characters in generated filename.
@
text
@/*
 * libc/gen/mktemp.c
 * Produce a unique filename by replacing
 * the trailing 6 X's on the user's input string
 * with process id and a unique letter.
 * (It is assumed, but not checked, that the X's are present.)
 * Revised by Michael Griffin, 7-5-84; by steve, 1/5/93.
 * Avoids unsuitable characters in generator.
 * Repeats after 26+26+10+1=63 invocations by the same process.
 */

char *
mktemp(template) char *template;
{
	static char generator = 'a';
	register char *p;
	register int i, pid;


	for (p = template; *p; p++)
		;				/* scan to end of template */
	*--p = generator;			/* store generator */
	switch (generator)  {			/* bump generator */
	case 'z':	generator = 'A';		break;
	case 'Z':	generator = '0';		break;
	case '9':	generator = '_';		break;
	case '_':	generator = 'a';		break;
	default:	++generator;			break;
	}
	pid = getpid();
	for (i = 5; i-- > 0; ) {		/* store 5-digit ASCII pid */
		*--p = pid%10 + '0';
		pid /= 10;
	}
	return template;
}

/* end of libc/gen/mktemp.c */
@


1.1
log
@Initial revision
@
text
@d2 1
d7 3
a9 2
 * Revised by Michael Griffin, 7-5-84.  Avoids control characters in
 * generator.  Repeats after 91 invocations by the same process.
a11 2
static	char	generator = 'a';

d13 1
a13 2
mktemp(template)
char *template;
d15 1
d17 1
a17 1
	register i, pid;
d19 1
d21 8
a28 23
		;
	switch (generator)  {
		case '~':
			*--p = generator;
			generator = 'A';
			break;
		case '_':
			*--p = generator;
			generator = '!';
			break;
		case '*':
			*--p = ++generator;
			generator++;
			break;
		case '?':
			*--p = (generator = '@@');
			break;
		case '@@':
			generator = 'a';
			*--p = generator++;
			break;
		default:
			*--p = generator++;
d31 1
a31 1
	i = 5; do {
d34 2
a35 2
	} while (--i);
	return (template);
d37 2
@
