head     1.4;
branch   ;
access   ;
symbols  ;
locks    bin:1.4;
comment  @ * @;


1.4
date     93.02.10.16.57.56;  author bin;  state Exp;
branches ;
next     1.3;

1.3
date     93.01.22.09.55.51;  author bin;  state Exp;
branches ;
next     1.2;

1.2
date     90.04.23.22.23.28;  author bin;  state Exp;
branches ;
next     1.1;

1.1
date     90.04.23.22.22.42;  author bin;  state Exp;
branches ;
next     ;


desc
@Initial MWC RCS revision.
@


1.4
log
@*** empty log message ***
@
text
@/*
 * libc/stdio/fread.c
 * ANSI-compliant C standard i/o library.
 * fread()
 * ANSI 4.9.8.1.
 * Read nmemb items of given size from stream to ptr.
 */

#include <stdio.h>
#include <stdlib.h>

size_t
fread(ptr, size, nmemb, stream) const Void *ptr; size_t size, nmemb; register FILE *stream;
{
	register size_t nb;
	register int c;
	register unsigned char *p;

	if ((nb = size*nmemb) == 0)
		return nb;
	p = ptr;

	/* Read ungotten character if present. */
	if (stream->_ff2 & _FUNGOT) {		
		*p++ = (*stream->_f2p->_gt)(stream);
		if (--nb == 0)
			return 1;
	}

	/* If unbuffered, read() will work, otherwise use getc(). */
	/* getc() sets _FEOF and _FERR as required, read() does not. */
	 if (stream->_mode == _MODE_FBUF || stream->_mode == _MODE_LBUF)
		for (; nb && (c = getc(stream)) != EOF; nb--)
			*p++ = c;
	else if ((c = read(fileno(stream), p, nb)) > 0)
		nb -= c;
	else if (c == 0)
		stream->_ff1 |= _FEOF;
	else
		stream->_ff1 |= _FERR;

	/* Adjust seek after partial read. */
	if (nb != 0 && nb % size != 0)
		fseek(stream, (long)(nb % size - size), SEEK_CUR);

	return (size*nmemb-nb)/size;
}

/* end of libc/stdio/fread.c */
@


1.3
log
@steve handed updated 1/21/92
@
text
@d3 4
a6 2
 * Standard i/o library.
 * Read nitems of size from file fp to bp.
d10 1
d12 2
a13 6
int
fread(bp, size, nitems, fp)
register char	*bp;
unsigned int	size;
unsigned int	nitems;
register FILE	*fp;
d15 3
a17 2
	unsigned int	nb;
	register int	c;
d19 9
a27 4
	nb = size * nitems;
	if (fp->_ff&_FUNGOT) {
		*bp++ = (*fp->_gt)(fp);
		nb--;
d29 7
a35 4
	if (fp->_bp!=NULL || !(fp->_ff&_FSTBUF))
		for (; nb && (c=getc(fp))!=EOF; nb--)
			*bp++ = c;
	else if ((c=read(fileno(fp), bp, nb)) > 0)
d38 1
a38 1
		fp->_ff |= _FEOF;
d40 2
a41 1
		fp->_ff |= _FERR;
d44 3
a46 2
		fseek(fp, (long)(nb % size - size), SEEK_CUR);
	return ((size*nitems-nb)/size);
@


1.2
log
@steve 4/23/90
Integrated MSDOS source change into COHERENT stdio source.
The only change is in parameter types int -> unsigned int.
@
text
@d2 3
a4 2
 * Standard I/O Library
 * Read nitems of size from file fp
d16 1
a16 1
	unsigned int	nb = size*nitems;
d19 1
d33 3
d38 2
@


1.1
log
@Initial revision
@
text
@d11 2
a12 2
int	size;
int	nitems;
@
