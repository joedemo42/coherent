head     1.3;
branch   ;
access   ;
symbols  ;
locks    bin:1.3; strict;
comment  @ * @;


1.3
date     93.02.10.16.58.07;  author bin;  state Exp;
branches ;
next     1.2;

1.2
date     92.12.18.14.29.05;  author bin;  state Exp;
branches ;
next     1.1;

1.1
date     92.12.18.14.27.43;  author bin;  state Exp;
branches ;
next     ;


desc
@steve 12/18/92
Initial MWC RCS revision.
@


1.3
log
@*** empty log message ***
@
text
@/*
 * libc/stdio/gets.c
 * ANSI-compliant C standard i/o library.
 * gets()
 * ANSI 4.9.7.7.
 * Read string from stdin.
 * Do not retain newline.
 */

#include <stdio.h>

char *
gets(s) char *s;
{
	register c;
	register char *cp;

	cp = s;
	while ((c = getchar()) != EOF && c != '\n')
		*cp++ = c;
	if (c == EOF && (s == cp || ferror(stdin)))
		return NULL;		/* ANSI says leave *s unchanged */
	*cp = '\0';			/* else NUL-terminate */
	return s;
}

/* end of libc/stdio/gets.c */
@


1.2
log
@steve 12/18/92
Modified to leave array argument unchanged if EOF encountered before
any characters read, for ANSI compliance.
@
text
@d3 5
a7 2
 * Standard I/O Library.
 * Get string from standard input, deleting trailing '\n'.
d13 1
a13 1
gets(is) register char *is;
d15 2
a16 2
	register char	*s;
	register int	c;
d18 1
a18 1
	s = is;
d20 2
a21 2
		*s++ = c;
	if (c == EOF && s == is)
d23 2
a24 2
	*s = '\0';			/* else NUL-terminate */
	return is;
@


1.1
log
@Initial revision
@
text
@d2 3
a4 3
 * Standard I/O Library
 * Get string from standard input
 * deleting trailing '\n'
d10 1
a10 2
gets(is)
register char	*is;
d12 1
a12 1
	register char	*s = is;
d15 2
a16 1
	while ((c=getchar())!=EOF && c!='\n')
d18 4
a21 2
	*s = 0;
	return (c==EOF && s==is ? NULL : is);
d23 2
@
