head     1.3;
branch   ;
access   ;
symbols  ;
locks    bin:1.3;
comment  @ * @;


1.3
date     93.02.10.16.57.34;  author bin;  state Exp;
branches ;
next     1.2;

1.2
date     93.01.22.09.55.43;  author bin;  state Exp;
branches ;
next     1.1;

1.1
date     90.04.23.22.56.10;  author bin;  state Exp;
branches ;
next     ;


desc
@Initial MWC RCS revision.
@


1.3
log
@*** empty log message ***
@
text
@/*
 * libc/stdio/_stropen.c
 * ANSI-compliant C standard i/o library internals.
 * _stropen()
 * Open string stream.
 * Called by sprintf(), sscanf(), vsprintf().
 */

#include <stdio.h>
#include <limits.h>

extern	int	_fputstr();

/* length is -1 for output to string, strlen(string) for input from string. */
FILE *
_stropen(string, length, fp) char *string; int length; register FILE *fp;
{
	register _FILE2 *f2p;

	f2p = fp->_f2p;
	f2p->_bp = fp->_cp = string;
	f2p->_dp = f2p->_ep = f2p->_nm = NULL;
	fp->_mode = _MODE_STR;
	fp->_ff1 = fp->_ff2 = fp->_fd = f2p->_uc = 0;
	if (length < 0) {
		fp->_ff1 |= _FWONLY;
		fp->_cc = INT_MAX;
		f2p->_pt = &_fputstr;
		f2p->_gt = &_fgete;
	} else {
		fp->_ff1 |= _FRONLY;
		fp->_cc = length;
		f2p->_pt = &_fpute;
		f2p->_gt = &_fgetstr;
	}
	return fp;
}

/*
 * _fputstr() is static;
 * _fgetstr() (in _fgetstr.c) is not, because it must be visible to ungetc().
 */
static
int
_fputstr(c, fp) int c; register FILE *fp;
{
	return (*fp->_cp++ = (unsigned char)c);
}

/* end of libc/stdio/_stropen.c */
@


1.2
log
@steve handed updated 1/21/92
@
text
@d2 5
a6 2
 * Standard I/O Library Internals
 * open string for getc, putc
d10 1
a10 1
#include <sys/mdata.h>
d12 3
d16 1
a16 4
_stropen(string, length, fp)
char	*string;
int	length;
register FILE	*fp;
d18 1
a18 4
#if !RSX
	int	_fgeteof(),
		_fputeos(),
		_fputexs();
d20 17
a36 17
	fp->_bp = fp->_cp = string;
	fp->_gt = &_fgeteof;
	fp->_cc = -length;
	if (fp->_cc < -MAXINT) {	/* most negative int means unlimited */
		fp->_cc = MAXINT;
		fp->_pt = &_fputexs;
	} else
		fp->_pt = &_fputeos;
#else
	fp->v_flag = VF_FIL;
	fp->v_r0 = -length;
	fp->v_r1 = string;
	fp->v_rblk = 1L;	/* seek block > eof block */
	fp->v_efbk = 0L;	/* => eof at end of string */
	fp->v_uget = -1;
#endif
	return (fp);
d39 4
a42 1
#if !RSX
d45 1
a45 3
_fputeos(c, fp)
unsigned char	c;
register FILE	*fp;
d47 1
a47 2
	fp->_cc = 0;
	return (EOF);
d50 1
a50 10
static
int
_fputexs(c, fp)
unsigned char	c;
register FILE	*fp;
{
	fp->_cc = MAXINT;
	return (*fp->_cp++ = c);
}
#endif
@


1.1
log
@Initial revision
@
text
@d7 1
a7 1
#include <mdata.h>
@
