head     1.3;
branch   ;
access   ;
symbols  ;
locks    bin:1.3;
comment  @ * @;


1.3
date     93.02.10.16.58.01;  author bin;  state Exp;
branches ;
next     1.2;

1.2
date     90.04.23.21.53.30;  author bin;  state Exp;
branches ;
next     1.1;

1.1
date     90.04.23.21.53.09;  author bin;  state Exp;
branches ;
next     ;


desc
@Initial MWC RCS revision.
@


1.3
log
@*** empty log message ***
@
text
@/*
 * libc/stdio/ftell.c
 * ANSI-compliant C standard i/o library.
 * ftell()
 * ANSI 4.9.9.4.
 * Find logical file position on stream.
 */

#include <stdio.h>
#include <errno.h>

#define	EFGETPOS	EINVAL

long
ftell(stream) register FILE *stream;
{
	register long offset;
	register _FILE2 *f2p;

	f2p = stream->_f2p;

	if ((offset=lseek(fileno(stream), 0L, SEEK_CUR)) == -1L) {
		errno = EFGETPOS;
		return offset;
	}
	if (f2p->_bp!=NULL)
		offset += stream->_cp - f2p->_dp;
	if (stream->_ff2&_FUNGOT)
		--offset;
	return offset;
}

/* end of libc/stdio/ftell.c */
@


1.2
log
@steve 4/23/90
Integrated MSDOS stdio changes into COHERENT libc source.
Use SEEK_CUR instead of explicit constant, adjust for ungot character.
@
text
@d2 5
a6 3
 * Standard I/O Library
 * Tell logical (vs physical) file position
 * in units compatible with fseek
d10 1
d12 2
d15 1
a15 2
ftell(fp)
register FILE	*fp;
d17 2
a18 2
	extern	long	lseek();
	long	offset;
d20 9
a28 5
	if ((offset=lseek(fileno(fp), 0L, SEEK_CUR)) == -1L)
		return (-1L);
	if (fp->_bp!=NULL)
		offset += fp->_cp - fp->_dp;
	if (fp->_ff&_FUNGOT)
d30 1
a30 1
	return (offset);
d32 2
@


1.1
log
@Initial revision
@
text
@d16 1
a16 1
	if ((offset=lseek(fileno(fp), 0L, 1)) == -1L)
d18 1
a18 1
	else if (fp->_bp!=NULL)
d20 2
@
