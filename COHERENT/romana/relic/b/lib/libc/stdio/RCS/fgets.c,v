head     1.3;
branch   ;
access   ;
symbols  ;
locks    bin:1.3; strict;
comment  @ * @;


1.3
date     93.02.10.16.57.49;  author bin;  state Exp;
branches ;
next     1.2;

1.2
date     92.12.18.14.28.30;  author bin;  state Exp;
branches ;
next     1.1;

1.1
date     92.12.18.14.27.58;  author bin;  state Exp;
branches ;
next     ;


desc
@steve 12/18/92
Initial MWC RCS revision.
@


1.3
log
@*** empty log message ***
@
text
@/*
 * libc/stdio/fgets.c
 * ANSI-compliant C standard i/o library.
 * fgets()
 * ANSI 4.9.10.2.
 * Get string from stream.
 * Read up to n-1 characters, including newline.
 */

#include <stdio.h>

char *
fgets(s, n, stream) char *s; register int n; FILE *stream;
{
	register c;
	register char *cp;

	cp = s;
	while (--n > 0 && (c = getc(stream)) != EOF)
		if ((*cp++ = c) == '\n')
			break;
	if (c == EOF && (cp == s || ferror(stream)))
		return NULL;		/* ANSI says leave *cp unchanged */
	*cp = '\0';			/* else NUL-terminate */
	return s;
}

/* end of libc/stdio/fgets.c */
@


1.2
log
@steve 12/18/92
Modified to leave array argument unchanged if EOF encountered before
any characters read, for ANSI compliance.
@
text
@d3 5
a7 2
 * Coherent Standard I/O Library.
 * Read a string from input file pointer, leaving the trailing '\n'.
d13 1
a13 1
fgets(is, lim, ifp) char *is; register int lim; FILE *ifp;
d15 2
a16 2
	register int	c;
	register char	*s;
d18 3
a20 3
	s = is;
	while (--lim > 0 && (c = getc(ifp)) != EOF)
		if ((*s++ = c) == '\n')
d22 4
a25 4
	if (c == EOF && s == is)
		return NULL;		/* ANSI says leave *s unchanged */
	*s = '\0';			/* else NUL-terminate */
	return is;
@


1.1
log
@Initial revision
@
text
@d2 3
a4 4
 * Coherent Standard I/O Library
 * fgets -- read a string from input
 * file pointer leaving the trailing
 * newline character.
d10 1
a10 4
fgets(as, lim, iop)
char *as;
register lim;
FILE *iop;
d12 2
a13 2
	register c;
	register char *s;
d15 2
a16 2
	s = as;
	while (--lim > 0 && (c = getc(iop)) != EOF)
d19 4
a22 2
	*s = 0;
	return (c==EOF && s==as ? NULL : as);
d24 2
@
