Copyright (C) 1990-1992 Mark Adler, Richard B. Wales, Jean-loup Gailly,
Kai Uwe Rommel and Igor Mandrichenko.
Permission is granted to any individual or institution to use, copy, or
redistribute this software so long as all of the original files are included
unmodified, that it is not sold for profit, and that this copyright notice
is retained.

This file is a complete list of files mentioned in the above copyright.  Some
of the files in this list explicitly state in their text that they are public
domain or not copyrighted.  These files can be distributed separately and are
marked below with asterisks.

file            what it is
----            ----------
Readme          What zip is; general information.
Where           where Zip/UnZip and encryption/decryption support can be found
algorith.doc    Description of the deflation algorithm
bits.c          Output variable-length bit strings.
contents        This file.
deflate.c       Deflation compression method
fileio.c        System dependent routines (most of them anyway).
globals.c       Global variables.
history         List of changes in the versions leading up to this one.
infozip.who     List of contributors to the portable Zip project.
install.doc     Documentation for Zip compilation and installation
makecrc.c       * Generate the CRC table in util.c and shrink.c.
makefile        Unix make file.
match.s         Optimized 386 version of longest_match() (Unix & OS/2)
mktime.c        Version of mktime for systems without it (currently unused)
revision.h      Contains the program version number and revision date.
tailor.h        * Tailors the compilation to the system being compiled on.
trees.c         Encode source values using variable-length binary code trees.
util.c          Miscellaneous utility routines.
zip.1           Source for the Zip man page (zip.doc).
zip.c           Main routine for Zip.
zip.doc         Documentation for Zip (zip.1 processed).
zip.h           Header for all Zip modules.
ziperr.h        Error messages in Zip.
zipfile.c       Zip file format handler.
zipnote.c       Main routine for ZipNote.
zipsplit.c      Main routine for ZipSplit.
zipup.c         Applies deflate or store methods to compress an entry.
atari/atari.c         Atari ST specific routines
atari/makefile.st     Turbo C makefile
atari/stzip.lnk       Linker command file for zip
atari/stzip.prj       Turbo C project file
atari/stzipn.lnk      Linker command file for zipnote
atari/stzips.lnk      Linker command file for zipsplit
atari/tc.cfg          Turbo C configuration file
mac/macfile.c         Macintosh specific routines
mac/macstat.c         Macintosh specific routines
mac/macstat.h         Macintosh specific header file
msdos/doturboc.bat    Batch file for compiling under Turbo C 2.0.
msdos/makefile.bor    MSDOS Borland C++ make file.
msdos/makefile.gcc    MSDOS DJGCC make file.
msdos/makefile.msc    MSDOS Microsoft C make file.
msdos/match.asm       Optimized 8086 version of longest_match().
msdos/tcconfig.tc     TurboC 2.0 configuration file
msdos/zip.prj         Project file for Borland (Turbo) C++.
msdos/zipnote.prj     Project file for Borland (Turbo) C++.
msdos/zipsplit.prj    Project file for Borland (Turbo) C++.
nt/makefile.nt        Makefile for Windows NT
os2/makefile.os2      OS/2 make file.
os2/match32.asm       Optimized 386 version of longest_match() (*untested*)
os2/os2zip.c          * Directory routines for OS/2.
os2/os2zip.h          * Definitions of functions in os2zip.c.
os2/zip.def           OS/2 def file for Zip.
vms/VMSmunch.c        file manipulation, adapted from Joe Meadows' FILE
vms/VMSmunch.h        definitions for VMSmunch.c
vms/descrip.mms       VMS makefile
vms/make_gcc.com      VMS command file for compilation with gcc.
vms/make_vaxc.com     VMS command file for compilation with Vax C.
vms/makefile.vms      VMS makefile for use with Todd Aven's MAKE/VMS
vms/vaxclib.opt       VMS option file
vms/vms.c             VMS specific code
vms/vms_zip.rnh       VMS manual page

All of the files are in Unix (LF only) format except for the msdos and os2
files.  On MSDOS and OS/2 systems, you can use the -a option of unzip to
convert the source files to CRLF format.  This is only necessary if you wish
to edit the files -- they will compile as is with Microsoft C and
Turbo/Borland C++ 1.0 or later.  However, you will have to convert the files
(using unzip -a) to the CRLF format to compile with the older Turbo C 1.0 or
2.0. In this case, do not convert the binary file turboc.cfg.
You should be able to find unzip the same place you found this (see the
file 'where').
