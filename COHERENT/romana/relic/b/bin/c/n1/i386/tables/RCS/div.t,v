head     1.3;
branch   ;
access   ;
symbols  ;
locks    bin:1.3; strict;
comment  @@;


1.3
date     93.03.02.12.41.35;  author bin;  state Exp;
branches ;
next     1.2;

1.2
date     93.01.07.13.57.53;  author bin;  state Exp;
branches ;
next     1.1;

1.1
date     92.10.05.11.52.48;  author bin;  state Exp;
branches ;
next     ;


desc
@@


1.3
log
@steve: fix to handle: cp = (char *) (((int) cp1) % ((int) cp2));
@
text
@//////////
/ n1/i386/tables/div.t
//////////

/////////
/
/ Division (/).
/ Should use unsigned divide when left operand is signed and right is unsigned,
/ but the parser generates the appropriate conversions to make it unnecessary.
/ The dividend is zero or sign extended.
/ No flags are set.
/
/////////

DIV:

/ Signed integer.
%	PEFFECT|PVALUE
	DWORD		EDXEAX	EAX	*	EAX
		TREG		FS32
		ADR		LONG
			[ZCDQ]
			[ZIDIV]	[AR]

/ Unsigned integer.
%	PEFFECT|PVALUE
	DWORD		EDXEAX	EAX	*	EAX
		TREG		FU32
		ADR		LONG
			[ZSUB]	[REGNO EDX],[REGNO EDX]
			[ZDIV]	[AR]

//////////
/ Floating point.
//////////

/ DECVAX or IEEE software floating point.
/ Double / double.
%	PEFFECT|PVALUE|P_SLT|PDECVAX|PIEEE
	FF64		EDXEAX	EDXEAX	*	TEMP
		TREG		FF64
		ADR|IMM		FF64
			[ZPUSH]	[HI AR]
			[ZPUSH]	[LO AR]
			[ZCALL]	[GID _drdiv]
			[ZADD]	[REGNO ESP],[CONST 8]

/ Hardware coprocessor (NDP) floating point.
%	PVALUE|P_SLT|PNDP
	FLOAT		FPAC	FPAC	*	FPAC
		TREG		FF64
		ADR		NDPARG
			[TR ZFDIVD] [AR]

//////////
/ end of n1/i386/tables/div.t
//////////
@


1.2
log
@steve: merged NDP code
@
text
@d19 1
a19 1
	LONG		EDXEAX	EAX	*	EAX
d27 1
a27 1
	LONG		EDXEAX	EAX	*	EAX
@


1.1
log
@Initial revision
@
text
@a36 2
#ifndef	NDPDEF

a47 4
#endif

#ifdef	NDPDEF

a54 2
#endif

@
