head     1.2;
branch   ;
access   ;
symbols  ;
locks    bin:1.2; strict;
comment  @@;


1.2
date     93.03.02.12.41.33;  author bin;  state Exp;
branches ;
next     1.1;

1.1
date     92.10.05.11.52.55;  author bin;  state Exp;
branches ;
next     ;


desc
@@


1.2
log
@steve: fix to handle: cp = (char *) (((int) cp1) % ((int) cp2));
@
text
@//////////
/ n1/i386/tables/rem.t
//////////

/////////
/
/ Remainder (%).
/ Should use unsigned divide when left operand is signed and right is unsigned,
/ but the parser generates the appropriate conversions to make it unnecessary.
/ Almost the same as divide, but the result comes back in EDX.
/ No flags are set.
/ There is no need to handle doubles in this table,
/ as the operation is not defined on doubles in C.
/
/////////

REM:

/ Signed integer.
%	PEFFECT|PVALUE
	DWORD		EDXEAX	EAX	*	EDX
		TREG		FS32
		ADR		LONG
			[ZCDQ]
			[ZIDIV]	[AR]

/ Unsigned integer.
%	PEFFECT|PVALUE
	DWORD		EDXEAX	EAX	*	EDX
		TREG		FU32
		ADR		LONG
			[ZSUB]	[REGNO EDX],[REGNO EDX]
			[ZDIV]	[AR]

//////////
/ end of n1/i386/tables/rem.t
//////////
@


1.1
log
@Initial revision
@
text
@d21 1
a21 1
	LONG		EDXEAX	EAX	*	EDX
d29 1
a29 1
	LONG		EDXEAX	EAX	*	EDX
@
