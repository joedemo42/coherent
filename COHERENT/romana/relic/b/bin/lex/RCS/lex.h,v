head     1.2;
branch   ;
access   ;
symbols  ;
locks    bin:1.2; strict;
comment  @ * @;


1.2
date     93.07.02.12.39.47;  author bin;  state Exp;
branches ;
next     1.1;

1.1
date     92.08.03.08.55.54;  author bin;  state Exp;
branches ;
next     ;


desc
@@


1.2
log
@Steve: various fixes for 4.2.0
@
text
@/*
 * lex/lex.h
 */

#include <sys/mdata.h>
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include "lextype.h"

#ifdef MSDOS
#define OUTFILE "lex_yy.c"
#else
#define	OUTFILE	"lex.yy.c"
#endif

/* Manifest constants. */
#define	ARRSZ	1000			/* maximum size of automaton */
#define	NCBLK	16	/* number of chars in a quantum of stringspace */

/*
 * Macros for manipulating bit-packed character classes.
 */
#define	classindex(n)	((n) / NBCHAR * (MAXUCHAR+1))
#define	classbit(n)	(1 << ((n) & (NBCHAR-1)))

/*
 * Check for octal digit.
 */
#define	isoctl(c)	('0' <= (c) && (c) <= '7')

/*
 * Symbol storage.
 */
struct	def {
	struct	def *d_next;
	char	*d_name;
	int	d_data;
};

/*
 * Types of input lines in the specification.
 */
enum	{
	LN_DFLT,	LN_LSPC,	LN_CTXT,	LN_SCON,
	LN_LCOM,	LN_RCOM,	LN_DLIM,	LN_OPTN,
	LN_EOFL
};

/*
 * Globals.
 */
extern	int	nxt;
extern	int	yylval;
extern	int	ltype;
extern	int	inquotes;
extern	int	indefs;
extern	int	actn;
extern	int	clas;
extern	int	nfa[ARRSZ][2];
extern	struct	def *defstart;
extern	struct	def *ctxstart;
extern	struct	def *scnstart;
extern	unsigned char *classptr;
extern	FILE	*filein;
extern	FILE	*fileout;
extern	char	opnerr[];
extern	char	outmem[];
extern	char	noactn[];
extern	char	illchr[];
extern	char	illnln[];
extern	char	illrng[];
extern	char	illoct[];
extern	char	unddef[];
extern	char	undctx[];
extern	char	undstc[];
extern	char	illstc[];
extern	char	regsyn[];
extern	char	rulsyn[];
extern	char	actsyn[];
extern	char	unmopr[];
extern	char	reperr[];
extern	char	eoferr[];

/*
 * Function definitions.
 */
extern	char	*alloc();
extern	char	*ralloc();
extern	char	*getident();

/* end of lex.h */
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * lex.h
d4 1
d7 1
d17 4
d22 1
a22 1
 * maximum size of automaton
d24 2
a25 1
#define	ARRSZ	1000
d28 1
a28 1
 * number of chars in a quantum of stringspace
d30 1
a30 1
#define	NCBLK	16
d33 1
a33 1
 * macros for manipulating bit-packed character classes
a34 11
#define	classindex(n)	((n)/NBCHAR*(MAXUCHAR+1))
#define	classbit(n)	(1<<((n)&(NBCHAR-1)))

/*
 * check for octal digit
 */
#define	isoctl(c)	('0'<=(c)&&(c)<='7')

/*
 * symbol storage
 */
d38 1
a38 1
	short	d_data;
d42 1
a42 1
 * types of input lines in the specification
d45 3
a47 2
	LN_DFLT,LN_LSPC,LN_CTXT,LN_SCON,
	LN_LCOM,LN_RCOM,LN_DLIM,LN_OPTN,LN_EOFL
d51 1
a51 1
 * external declarations
d53 8
a60 8
extern	short	nxt;
extern	short	yylval;
extern	short	ltype;
extern	short	inquotes;
extern	short	indefs;
extern	short	actn;
extern	short	clas;
extern	short	nfa[ARRSZ][2];
d84 4
d91 2
a92 2
extern	char	*malloc();
extern	char	*realloc();
@
