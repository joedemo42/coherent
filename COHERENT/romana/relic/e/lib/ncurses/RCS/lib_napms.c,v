head     1.5;
branch   ;
access   ;
symbols  ;
locks    bin:1.5; strict;
comment  @ * @;


1.5
date     93.04.12.14.13.54;  author bin;  state Exp;
branches ;
next     1.4;

1.4
date     93.03.18.13.27.38;  author bin;  state Exp;
branches ;
next     1.3;

1.3
date     93.03.03.09.45.15;  author bin;  state Exp;
branches ;
next     1.2;

1.2
date     93.02.02.18.16.19;  author bin;  state Exp;
branches ;
next     1.1;

1.1
date     93.01.06.09.24.17;  author bin;  state Exp;
branches ;
next     ;


desc
@@


1.5
log
@Udo: third color update
@
text
@/*********************************************************************
*                         COPYRIGHT NOTICE                           *
**********************************************************************
*        This software is copyright (C) 1992 by Udo Munk             *
*                                                                    *
*        Permission is granted to reproduce and distribute           *
*        this file by any means so long as no fee is charged         *
*        above a nominal handling fee and so long as this            *
*        notice is always included in the copies.                    *
*                                                                    *
*        Other rights are reserved except as explicitly granted      *
*        by written permission of the author.                        *
*                Udo Munk					     *
*                Oberstr. 21					     *
*                4040 Neuss 1					     *
*                Germany					     *
*                                                                    *
*                udo@@umunk.GUN.de				     *
*********************************************************************/

/*
**	lib_napms.c
**
**	Sleep for some millisecounds
**
** $Log:	RCS/lib_napms.v $
 * Revision 1.0  92/11/26  21:47:38  munk
 * Initial version
 * 
**
*/

#ifdef RCSHDR
static char RCSid[] =
	"$Header:   RCS/lib_napms.v  Revision 1.0  92/11/26  21:47:38  munk  Exp$";
#endif

#include <poll.h>

int napms(timeout)
int timeout;
{
	int		n;
	struct pollfd	fda[1];
	
	if (timeout < 1)
		return(0);
	fda[0].fd = -1;
	n = poll((struct pollfd*) &fda[0], 1, timeout);
	return(n < 0 ? n : timeout); 
}
@


1.4
log
@Udo: 1st color update 3/18
@
text
@@


1.3
log
@udo: color code added
@
text
@@


1.2
log
@Udo update, added color code
@
text
@d26 1
a26 1
** $Log:	RCS/lib_set_term.v $
@


1.1
log
@vlad: update from Udo
@
text
@@
