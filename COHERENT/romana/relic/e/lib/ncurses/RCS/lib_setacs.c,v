head     1.6;
branch   ;
access   ;
symbols  ;
locks    bin:1.6; strict;
comment  @ * @;


1.6
date     93.04.12.14.14.06;  author bin;  state Exp;
branches ;
next     1.5;

1.5
date     93.03.18.13.27.48;  author bin;  state Exp;
branches ;
next     1.4;

1.4
date     93.03.03.09.45.26;  author bin;  state Exp;
branches ;
next     1.3;

1.3
date     93.02.02.18.16.27;  author bin;  state Exp;
branches ;
next     1.2;

1.2
date     93.01.06.09.24.30;  author bin;  state Exp;
branches ;
next     1.1;

1.1
date     92.11.13.15.40.16;  author bin;  state Exp;
branches ;
next     ;


desc
@@


1.6
log
@Udo: third color update
@
text
@/*********************************************************************
*                         COPYRIGHT NOTICE                           *
**********************************************************************
*        This software is copyright (C) 1992 by Udo Munk             *
*                                                                    *
*        Permission is granted to reproduce and distribute           *
*        this file by any means so long as no fee is charged         *
*        above a nominal handling fee and so long as this            *
*        notice is always included in the copies.                    *
*                                                                    *
*        Other rights are reserved except as explicitly granted      *
*        by written permission of the author.                        *
*                Udo Munk					     *
*                Oberstr. 21					     *
*                4040 Neuss 1					     *
*                Germany					     *
*                                                                    *
*                udo@@umunk.GUN.de				     *
*********************************************************************/

/*
**	lib_setacs.c
**
**	Set up the alternate character set map for the terminal
**
** $Log:	RCS/lib_set_term.v $
 * Revision 1.0  92/10/26  22:35:55  munk
 * Initial version
 * 
**
*/

#ifdef RCSHDR
static char RCSid[] =
	"$Header:   RCS/lib_setacs.v  Revision 1.0  92/10/26  22:35:55  munk  Exp$";
#endif

#include "curses.h"
#include "term.h"

setup_acs()
{
	register char *p;

	/* initialize acs_map with ASCII defaults for possible chars */
	acs_map['l'] = acs_map['m'] = acs_map['k'] = acs_map['j'] = '+';
	acs_map['u'] = acs_map['t'] = acs_map['v'] = acs_map['w'] = '+';
	acs_map['q'] = '-';
	acs_map['x'] = '|';
	acs_map['n'] = '+';
	acs_map['o'] = '_';
	acs_map[','] = '<';
	acs_map['+'] = '>';

	/* now get the alternate characters from acs_chars and fill map */
	p = acs_chars;
	do {
		switch (*p) {
		case 'l':
			acs_map['l'] = *++p & 0377 | A_ALTCHARSET;
			break;
		case 'm':
			acs_map['m'] = *++p & 0377 | A_ALTCHARSET;
			break;
		case 'k':
			acs_map['k'] = *++p & 0377 | A_ALTCHARSET;
			break;
		case 'j':
			acs_map['j'] = *++p & 0377 | A_ALTCHARSET;
			break;
		case 'u':
			acs_map['u'] = *++p & 0377 | A_ALTCHARSET;
			break;
		case 't':
			acs_map['t'] = *++p & 0377 | A_ALTCHARSET;
			break;
		case 'v':
			acs_map['v'] = *++p & 0377 | A_ALTCHARSET;
			break;
		case 'w':
			acs_map['w'] = *++p & 0377 | A_ALTCHARSET;
			break;
		case 'q':
			acs_map['q'] = *++p & 0377 | A_ALTCHARSET;
			break;
		case 'x':
			acs_map['x'] = *++p & 0377 | A_ALTCHARSET;
			break;
		case 'n':
			acs_map['n'] = *++p & 0377 | A_ALTCHARSET;
			break;
		case 'o':
			acs_map['o'] = *++p & 0377 | A_ALTCHARSET;
			break;
		case 's':
			acs_map['s'] = *++p & 0377 | A_ALTCHARSET;
			break;
		case '`':
			acs_map['`'] = *++p & 0377 | A_ALTCHARSET;
			break;
		case 'a':
			acs_map['a'] = *++p & 0377 | A_ALTCHARSET;
			break;
		case 'f':
			acs_map['f'] = *++p & 0377 | A_ALTCHARSET;
			break;
		case 'g':
			acs_map['g'] = *++p & 0377 | A_ALTCHARSET;
			break;
		case '~':
			acs_map['~'] = *++p & 0377 | A_ALTCHARSET;
			break;
		case ',':
			acs_map[','] = *++p & 0377 | A_ALTCHARSET;
			break;
		case '+':
			acs_map['+'] = *++p & 0377 | A_ALTCHARSET;
			break;
		case '.':
			acs_map['.'] = *++p & 0377 | A_ALTCHARSET;
			break;
		case '-':
			acs_map['-'] = *++p & 0377 | A_ALTCHARSET;
			break;
		case 'h':
			acs_map['h'] = *++p & 0377 | A_ALTCHARSET;
			break;
		case 'i':
			acs_map['i'] = *++p & 0377 | A_ALTCHARSET;
			break;
		case '0':
			acs_map['0'] = *++p & 0377 | A_ALTCHARSET;
			break;
		default:
			p++;
		}
	} while (*p && *++p);
}
@


1.5
log
@Udo: 1st color update 3/18
@
text
@a53 1
	acs_map['0'] = ' ' | A_REVERSE;
@


1.4
log
@udo: color code added
@
text
@@


1.3
log
@Udo update, added color code
@
text
@@


1.2
log
@vlad: update from Udo
@
text
@@


1.1
log
@cef update from Udo for pads and color.
@
text
@d45 1
a45 1
	/* initialize acs_map with ASCII defaults */
d54 1
a54 4
	acs_map['0'] = acs_map['h'] = acs_map['a'] = ' ' | A_REVERSE;
	acs_map['s'] = acs_map['`'] = acs_map['f'] = ' ';
	acs_map['g'] = acs_map['~'] = acs_map['.'] = acs_map['-'] = ' ';
	acs_map['i'] = ' ';
@
