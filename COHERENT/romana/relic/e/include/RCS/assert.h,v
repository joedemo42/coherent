head     1.3;
branch   ;
access   ;
symbols  ;
locks    ;
comment  @ * @;


1.3
date     93.03.11.08.41.30;  author bin;  state Exp;
branches ;
next     1.2;

1.2
date     92.11.17.09.04.33;  author bin;  state Exp;
branches ;
next     1.1;

1.1
date     92.07.07.12.24.05;  author bin;  state Exp;
branches ;
next     ;


desc
@@


1.3
log
@Hal: kernel 74 changes
@
text
@/* (-lgl
 * 	COHERENT Version 4.1.0
 * 	Copyright (c) 1982, 1993 by Mark Williams Company.
 * 	All rights reserved. May not be copied without permission.
 -lgl) */
/*
 * assert.h
 * C diagnostics header.
 * Draft Proposed ANSI C Standard, Section 4.2, 12/7/88 draft.
 */

#ifndef	__ASSERT_H__
#define	__ASSERT_H__
extern	void	__assertfail();
#endif

#undef	assert

#if	NDEBUG
#define	assert(p)	((void)0)
#else
#define	assert(p)	((p) ? (void)0 : __assertfail(#p, __FILE__, __LINE__))
#endif

/* end of assert.h */
@


1.2
log
@steve: fixed bracketting which prevented multiple inclusions of assert.h.
@
text
@d2 2
a3 2
 * 	COHERENT Version 4.0.2
 * 	Copyright (c) 1982, 1992 by Mark Williams Company.
d12 2
a13 2
#ifndef	_ASSERT_H
#define	_ASSERT_H
@


1.1
log
@Initial revision
@
text
@d2 2
a3 2
 * 	COHERENT Version 3.2
 * 	Copyright (c) 1982, 1991 by Mark Williams Company.
d12 4
a15 2
#ifndef	ASSERT_H
#define	ASSERT_H	ASSERT_H
d17 2
d20 1
a20 1
#define	assert(p)
d22 1
a22 6
#include <stdio.h>
#define	assert(p)	if (!(p)) {\
				fprintf(stderr, "%s: %d: assert(%s) failed.\n",\
					__FILE__, __LINE__, #p);\
				exit(1);\
			}
a23 1
#endif
@
