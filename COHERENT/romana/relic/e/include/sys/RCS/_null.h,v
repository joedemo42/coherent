head     1.2;
branch   ;
access   ;
symbols  ;
locks    ;
comment  @ * @;


1.2
date     93.03.02.07.55.05;  author bin;  state Exp;
branches ;
next     1.1;

1.1
date     93.02.15.12.00.04;  author bin;  state Exp;
branches ;
next     ;


desc
@norm: added for gcc release
@


1.2
log
@hal: kernel 73 update and changes by
Nigel for __COHERENT__
@
text
@#ifndef	__SYS__NULL_H__
#define	__SYS__NULL_H__

/*
 * This internal header is designed to factor out the definition of NULL
 * from all other aspects of the STREAMS and device systems. In order to
 * be able to create a reasonable facsimile of the STREAMS and DDI/DDK
 * programming environments, many of the header files defined by those
 * documents in the System V environment have been defined. From the POSIX
 * and ISO C standards documents we learn that <sys/types.h> is the most
 * likely candidate, but that definitions also occur in <stdlib.h>, <stdio.h>
 * and many other places.
 */


/*
 * For Borland C++, the use of memory models requires that we define NULL
 * appropriately. There is a special Borland header for this, however.
 */

#ifndef	NULL

# ifdef	__BORLANDC__

#  include <_null.h>

# else

#  define  NULL	0

# endif

#endif

#endif	/* ! defined (__SYS__NULL_H__) */
@


1.1
log
@Initial revision
@
text
@a0 6
/* (-lgl
 * 	COHERENT Version 4.0.2
 * 	Copyright (c) 1982, 1992 by Mark Williams Company.
 * 	All rights reserved. May not be copied without permission.
 -lgl) */

d5 8
a12 1
 * Canonical definition for NULL.
a14 1
#ifdef	__cplusplus
d16 4
a19 1
# define	NULL		0
d21 1
a21 1
#elif	defined (COHERENT)
d23 1
a23 1
# define	NULL		((char *) 0)
d25 1
a25 1
#else
d27 1
a27 1
# error	The correct type for NULL is not known for your system.
d29 4
@
