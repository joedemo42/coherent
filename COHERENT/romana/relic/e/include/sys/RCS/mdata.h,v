head     1.3;
branch   ;
access   ;
symbols  ;
locks    ;
comment  @ * @;


1.3
date     93.03.02.07.50.40;  author bin;  state Exp;
branches ;
next     1.2;

1.2
date     92.10.12.08.40.51;  author bin;  state Exp;
branches ;
next     1.1;

1.1
date     92.07.07.12.25.33;  author bin;  state Exp;
branches ;
next     ;


desc
@@


1.3
log
@hal: newupdates for kernel 73, several
changes by Nigel for __COHERENT__
@
text
@/* (-lgl
 * 	COHERENT 386 Device Driver Kit release 2.0
 * 	Copyright (c) 1982, 1992 by Mark Williams Company.
 * 	All rights reserved. May not be copied without permission.
 -lgl) */

/*
 * /usr/include/sys/mdata.h
 * Magic machine numbers.
 * i80386.
 */

#ifndef	__SYS_MDATA_H__
#define	__SYS_MDATA_H__

/* Bits per type. */
#define	NBCHAR		8
#define	NBSHORT		16
#define	NBINT		32
#define	NBLONG		32
#define	NBFLOAT		32
#define	NBDOUBLE	64

/* Bits per pointer. */
#define	NBPCHAR		32
#define	NBPSHORT	32
#define	NBPINT		32
#define	NBPLONG		32
#define	NBPFLOAT	32
#define	NBPDOUBLE	32
#define	NBPSTRUCT	32
#define	NBPUNION	32

/*
 * Alignment.
 * The values listed below can be misleading.
 * Under iBCS2 alignment rules, struct or union alignment
 * depends on the member types rather than being a specific value.
 * #pragma directives may also change the alignment.
 */
/* Type alignment. */
#define	ALCHAR		1
#define	ALSHORT		2
#define	ALINT		4
#define	ALLONG		4
#define	ALFLOAT		4
#define	ALDOUBLE	4
#define	ALSTRUCT	4	/* actually max of alignments of members */
#define	ALUNION		4	/* actually max of alignments of members */

/* Pointer alignment. */
#define	ALPCHAR		4
#define	ALPSHORT	4
#define	ALPINT		4
#define	ALPLONG		4
#define	ALPFLOAT	4
#define	ALPDOUBLE	4
#define	ALPSTRUCT	4
#define	ALPUNION	4

/* Ranges. */
#define	MAXCHAR		127
#define	MINCHAR		(-128)
#define	MAXUCHAR	255
#define	MAXSHORT	32767
#define	MINSHORT	(-32768)
#define	MAXUSHORT	65535
#define	MAXINT		2147483647
#define	MININT		(-2147483648)
#define	MAXUINT		4294967295
#define	MAXLONG		2147483647L
#define	MINLONG		(-2147483648L)
#define	MAXULONG	4294967295L

/* Fixed point representation. */
#define	TCINT		1
#define	OCINT		0
#define	SMINT		0

/* Base2 logarithms of bits per type. */
#define	LOGCHAR		3
#define	LOGSHORT	4
#define	LOGINT		5
#define	LOGLONG		5

#endif

/* end of /usr/include/sys/mdata.h */
@


1.2
log
@update by steve for 386
@
text
@d2 1
a2 1
 * 	COHERENT Version 4.1
d6 1
d13 2
a14 2
#ifndef	_MDATA_H
#define	_MDATA_H
@


1.1
log
@Initial revision
@
text
@d2 2
a3 2
 * 	COHERENT Version 3.0
 * 	Copyright (c) 1982, 1990 by Mark Williams Company.
d7 1
d9 1
a9 1
 * Intel 8086.
d12 2
a13 2
#ifndef	MDATA_H
#define	MDATA_H	MDATA_H
d15 7
a21 7
/* Bits per type */
#define	NBCHAR	  8
#define	NBINT	  16
#define	NBLONG	  32
#define	NBFLOAT	  32
#define	NBDOUBLE  64
#define NBSHORT	  16
d23 9
a31 9
/* Bits per pointer */
#define	NBPCHAR	  16
#define	NBPINT	  16
#define NBPLONG	  16
#define NBPFLOAT  16
#define NBPDOUBLE 16
#define NBPSHORT  16
#define NBPSTRUCT 16
#define NBPUNION  16
d33 16
a48 9
/* Alignments, types */
#define	ALCHAR	  01
#define ALINT	  02
#define ALLONG	  02
#define ALFLOAT	  02
#define ALDOUBLE  02
#define ALSHORT	  02
#define ALSTRUCT  02
#define ALUNION   02
d50 9
a58 9
/* Alignments, pointers */
#define	ALPCHAR	  02
#define	ALPINT	  02
#define ALPLONG   02
#define ALPFLOAT  02
#define ALPDOUBLE 02
#define ALPSHORT  02
#define ALPSTRUCT 02
#define ALPUNION  02
d60 13
a72 9
/* Ranges */
#define	MAXCHAR	127
#define	MAXUCHAR 255
#define	MAXINT	32767
#define	MAXUINT	(65535L)
#define	MAXLONG	(2147483647L)
#define	MAXULONG (4294967295L)
#define	MININT	(-32768L)
#define MINLONG (-2147483648L)
d74 4
a77 4
/* Fixed point representation */
#define	TCINT	1
#define	OCINT	0
#define	SMINT	0
d79 5
a83 4
/* Base2 logarithms of bits per type */
#define	LOGCHAR	3
#define	LOGINT	4
#define	LOGLONG	5
d86 2
@
