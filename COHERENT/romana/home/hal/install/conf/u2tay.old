# /conf/upd2tay.post
# Mon Nov  8 13:55:42 1993 CST

/bin/echo "\fWe will now convert your existing uucp configuration files to
the format used by Taylor uucp. This is not a destructive process.
Before existing files are overwritten, you will be given the opportunity
to save them to a tarred archive.

The conversion process builds new Taylor uucp configuration
files from the data in your existing files, saves your old uucp files
to a tarred archive and finally copys the new files into place.
The conversion of your existing data files may have problems if you are
using undocumented features of the existing uucp facilities.
For example, if you have multiple entries for a single uucp site in L.sys,
you may not achieve the expected results with this conversion.
If you run shell scripts to swap different L-devices files,
e.g. to use multiple modems on your system, this conversion process
will only deal with the current L-devices file;
the data from the other L-devies files will not be accounted for.

If you notice messages that indicate potential problems during conversion,
write them down. If necessary, you can always re-run this shell
script (/conf/upd2tay.post).
"
/bin/echo -n "Hit <Enter> to continue..."
read x
/bin/echo '\f'
echo "Testing permissions on /usr/lib/uucp..."
if test -w /usr/lib/uucp
	then
	echo "Permissions appear to be acceptable."
else
	echo "Permissions are not correct! Setting correct permissions."
	chmog 755 uucp uucp /usr/lib/uucp
fi

echo "Testing for existence of Taylor configuration files..."
if test -f /usr/lib/uucp/sys
	then
	echo "The file /usr/lib/uucp/sys Already exists. Aborting UUCP conversion process"
	echo "\nHit <Enter> to continue...\c"
	read N
	exit 0
fi


if test -f /usr/lib/uucp/port
	then
	echo "The file /usr/lib/uucp/port already exists. Aborting UUCP conversion process."
	echo "\nHit <Enter> to continue...\c"
	read N
	exit 0
fi


if test -f /usr/lib/uucp/dial
	then
	echo "The file /usr/lib/uucp/dial already exists. Aborting UUCP conversion process."
	echo "\nHit <Enter> to continue...\c"
	read N
	exit 0
fi

sleep 4
clear

echo "
Now for the tricky part. This implementation of Taylor uucp does not use
the files /usr/lib/uucp/L.sys nor /usr/lib/uucp/Permissions. Instead, the
contents of these two files are merged into the single file /usr/lib/uucp/sys.

This conversion process makes several assumptions. Please read them
carefully.

	1) In the Permissions file, if you have specified NOWRITE and 
	   NOREAD parameters, they follow the READ and WRITE parameters.

	2) There is only 1 ACU entry in /usr/lib/uucp/L-devices.

	3) If an L.sys entry occupies more than 1 line, the line
	   continuation character (backslash) is followed immediately 
	   by a newline.

	4) A single L.sys entry occupies no more than 2 lines.

If you want to check your existing uucp configuration files against the
items just listed, you may abort the update process now with <ctrl><c>.
"

echo "Do you wish to continue with the UUCP conversion? (y/n)\c"
read N
case $N in
	n|N)	echo "You can run this script at a later";
	   	echo "time by invoking /conf/upd2tay.post";
		exit 0;
		;;
	*)	echo "Now converting L.sys         running: /conf/taylor/cvlsys.";
		/conf/taylor/cvlsys;
		;;
esac

echo "Hit <Enter> to continue.\c"
read N
clear
echo "
We will now convert /etc/modemcap to the /usr/lib/uucp/dial file
format required by Taylor uucp package. This will not alter the
contents of /etc/modemcap. It will build /usr/lib/uucp/dial from
/etc/modemcap's contents.
"
echo "Now converting modemcap       running: /conf/taylor/cvmodem."

/conf/taylor/cvmodem

echo "Hit <Enter> to continue.\c"
read N
clear
echo "
The next step will be to convert the information in /usr/lib/uucp/L-devices
into the port information required by Taylor uucp. The data in L-devices
will not be altered, it will be used to build the file /usr/lib/uucp/port.
"
echo "Now converting L-devices 	    running: /conf/taylor/cvldev."

/conf/taylor/cvldev

echo "Hit <Enter> to continue.\c"
read N
clear
echo "
This is your ONLY chance to save your existing UUCP programs that would 
otherwise be overwritten by this update process. If you are running this 
script for the umpteenth time and have already saved your old files, there 
is no need to save them again, since they wouldn't exist anyway.

The files that will be saved are:     ==================================
	uucico		uuxqt	      =	Please note that we are not    =
	uucp		uux	      =	overwriting L.sys, Permissions =
	uucheck		uuinstall     =	nor L-devices. They will be    =
				      =	left in place.                 =
				      ==================================

They will be copied to the directory /tmp/tayupd and then tarred, compressed
and moved to /conf/taylor/olduucp.tar.z.
"

TMP=/tmp/tayupd/usr

echo "Do you wish to save your old uucp files ('q' to quit) (y/n/q)?\c"

read N
case $N in
	n|N)	echo "Okay... we will procede with copying the new files into place.";
		;;
	y|Y)	mkdir -r $TMP/lib/uucp $TMP/lib/uucheck;
		mkdir $TMP/bin;
		cp -d /usr/bin/uucp $TMP/bin/;
		cp -d /usr/bin/uux $TMP/uux;
		cp -d /usr/bin/uuinstall $TMP/bin/;		
		rm /usr/bin/uuinstall;
		cpdir -ade /usr/lib/uucheck $TMP/lib/uucheck;
		cp -d /bin/uucheck $TMP/bin;
		rm /bin/uucheck;
		cp -d /usr/lib/uucp/uucico $TMP/lib/uucp/;
		cp -d /usr/lib/uucp/uuxqt $TMP/lib/uucp/;
		cp -d /usr/lib/uucp/uumkdir $TMP/lib/uucp/;
		cp -d /usr/lib/uucp/uumvlog $TMP/lib/uucp/;
		rm /usr/lib/uucp/uumkdir;
		rm /usr/lib/uucp/uumvlog;
		tar cvf /tmp/olduucp.tar /tmp/tayupd;
		/usr/bin/gzip /tmp/olduucp.tar;
		cp /tmp/olduucp.tar.Z /conf/taylor/;
		echo "Removing saved directory.";
		rm /tmp/olduucp.tar.Z;
		rm -r /tmp/tayupd;
		echo "Files saved to /conf/taylor/olduucp.tar.z."
		;;
	q|Q)	exit 0;
		;;
esac

echo "Copying new files into place."
cpdir -ade /tmp/tay_new_files/usr /usr
rm -r /tmp/tay_new_files
echo "Hit <Enter> to continue.\c"
read N

echo "
You have now installed the Coherent implementation of the Taylor uucp package.
You should review the information in the sys, dial and port
files in the directory /usr/lib/uucp before using the new uucp facilities.
"
echo "Hit <Enter> to continue...\c"
read N
clear
echo "
Important note: The manner in which Taylor uucp handles dialing via a
modem is vastly different from COHERENT uucp's method. Instead of relying
upon data in /etc/modemcap, Taylor uucp literally 'chats' with the modem
to set register values and to dial. When a connection has ended, Taylor
uucp can be configured to chat with the modem again to set registers or
perform other functions.

Because of this, you may encounter difficulty getting Taylor to dial out
during your initial attempts to use it. Please refer to the UUCP articles
in your new COHERENT manual for making dial file entries.
"

echo "Hit <Enter> to continue...\c"
read N
exit 0

# end of /conf/upd2tay.post
