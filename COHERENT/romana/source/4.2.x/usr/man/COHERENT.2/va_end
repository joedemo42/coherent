vvaa_eenndd() -- Variable Arguments

Tidy up after traversal of argument list
#iinncclluuddee <ssttddaarrgg.hh>
vvooiidd vvaa_eenndd(_l_i_s_t_p_t_r)
vvaa_lliisstt _l_i_s_t_p_t_r;

#iinncclluuddee <vvaarraarrggss.hh>
vvooiidd vvaa_eenndd(_l_i_s_t_p_t_r)
vvaa_lliisstt _l_i_s_t_p_t_r;

vvaa_eenndd() helps  to tidy up a  function after it has  traversed the argument
list for a  function that takes a variable number  of arguments.  It can be
used  with functions  that take  a  variable number  of arguments,  such as
pprriinnttff() or  ssccaannff(), to help write such functions  portably.  It should be
used with the routines vvaa_aarrgg()  and vvaa_ssttaarrtt() from within a function that
takes a variable number of arguments.

_l_i_s_t_p_t_r is of type vvaa_lliisstt(), which is declared in header ssttddaarrgg.hh. _l_i_s_t_p_t_r
must first have been initialized by macro vvaa_ssttaarrtt.

_E_x_a_m_p_l_e
For an example of this function, see the entry for ssttddaarrgg.hh.

_S_e_e _A_l_s_o
ssttddaarrgg.hh, vvaarraarrggss.hh
ANSI Standard, section 7.8.1.3

_N_o_t_e_s
There are  two different versions  of vvaa_eenndd(): the ANSI  version, which is
defined  in  <ssttddaarrgg.hh>;  and   the  UNIX  version,  which  is  defined  in
<vvaarraarrggss.hh>. For a discussion  of how these implementations differ, see the
entry for ssttddaarrgg.hh.

If vvaa_lliisstt() is not initialized by vvaa_ssttaarrtt(), or if vvaa_eenndd() is not called
before  a function  with  variable arguments  exits, then  the behavior  of
vvaa_eenndd() is undefined.
