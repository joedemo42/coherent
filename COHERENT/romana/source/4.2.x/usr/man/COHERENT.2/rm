rrmm -- Command

Remove files
rrmm [ -ffiirrttvv ] _f_i_l_e ...

rrmm removes  each _f_i_l_e. If  no other links  exist, rrmm frees  the data blocks
associated with the file.

To remove  a file,  a user  must have write  and execute permission  on the
directory in which the file resides, and must also have write permission on
the file itself.  The force option  -ff forces the file to be removed if the
user does not have write permission  on the file itself.  It suppresses all
error messages and prompts.

The interactive option -ii tells rrmm  to prompt for permission to delete each
_f_i_l_e.

The recursive removal option -rr  causes rrmm to descend into every directory,
search  for and  delete  files, and  descend  further into  subdirectories.
Directories  are removed  if the  directory  is empty,  is not  the current
directory, and is not the root directory.

The test option -tt performs all access testing but removes no files.

The verbose option -vv tells rrmm  to print each file rm and the action taken.
In  conjunction with  the -tt  option,  this allows  the extent  of possible
damage to be previewed.

_S_e_e _A_l_s_o
ccoommmmaannddss, llnn, rrmmddiirr

_N_o_t_e_s
Absence of  delete permission  in parent  directories is reported  with the
message  _f_i_l_e: ppeerrmmiissssiioonn  ddeenniieedd.  Write  protection  is not  inherited by
subdirectories; they must be protected individually.

Note  that unlike  the  similarly named  command  under MS-DOS,  COHERENT's
version of  rrmm will _n_o_t prompt  you if you request  a mass deletion.  Thus,
the command

    rm *

will silently  and immediately delete  all files in  the current directory.
_C_a_v_e_a_t _u_t_i_l_i_t_o_r!
