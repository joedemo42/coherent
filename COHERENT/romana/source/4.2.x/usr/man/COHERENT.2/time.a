ttiimmee -- Overview

COHERENT includes a number of routines that allow you to set and manipulate
time, as recorded on the system's  clock, into a variety of formats.  These
routines  should be  adequate for  nearly any  task that  involves temporal
calculations  or the  maintenance of  data gathered over  a long  period of
time.

All functions, global  variables, and manifest constants used in connection
with time are defined and described in the header files ttiimmee.hh and ttiimmeebb.hh.
In  brief, time  manipulates two  data elements: the  type ttiimmee_tt,  and the
structure ttmm.

ttiimmee_tt is  defined in the  header file <ttiimmee.hh>. COHERENT  follows the UNIX
standard and  initializes ttiimmee_tt to the number of  seconds since January 1,
1970, 0h00m00s GMT; this moment, in turn, is rendered as day 2,440,587.5 on
the Julian calendar.  This allows  accurate calculation of time as far back
as January 1, 4713 B.C.

The structure ttmm  is defined in the header file  <ttiimmee.hh>. It is defined as
follows:

struct tm {
     int tm_sec;    /* current time, seconds */
     int tm_min;    /* current time, minutes */
     int tm_hour;   /* current time, hour */
     int tm_mday;   /* day of the month, 1-31 */
     int tm_mon;    /* month, 1-12 */
     int tm_year;   /* year since 1900 */
     int tm_wday;   /* day of the week, Sunday = 0 */
     int tm_yday;   /* day in the current year */
     int tm_isdst;  /* is daylight-savings time now in effect? */
};

For  an example  of manipulating  this structure  in a  C program,  see the
Lexicon entry for llooccaallttiimmee().

_S_t_a_n_d_a_r_d _T_i_m_e _F_u_n_c_t_i_o_n_s
The COHERENT system includes the following functions to manipulate time:

aassccttiimmee()......Convert time structure to ASCII string cclloocckk()Get  processor
time ccttiimmee()...Convert system time to an ASCII string ddiiffffttiimmee()Return
difference between two times ggmmttiimmee()Convert   system   time  to   calendar
structure llooccaallttiimmee()Convert system time to calendar structure mmkkttiimmee() Turn
broken-down time into calendar time ssttrrffttiimmee()Format  locale-specific  time
ttiimmee().........Get the current time ttzzsseett()Set local time zone

To print out the local time, a program must perform the following tasks:

11. Read the system time with ttiimmee(). This function returns a ttiimmee_tt.

22. Pass the  ttiimmee_tt returned  by ttiimmee()  to the function  llooccaallttiimmee(). This
   function breaks it down into the ttmm structure,

33. Pass  llooccaallttiimmee()'s  output   to  aassccttiimmee(),  which  transforms  the  ttmm
   structure into an ASCII string.

44. Finally, pass the output of aassccttiimmee() to pprriinnttff(), to displays it on the
   standard output device.

See the entry for aassccttiimmee() for  an example C program that goes through the
above steps.

_S_p_e_c_i_a_l _T_i_m_e _F_u_n_c_t_i_o_n_s
COHERENT  includes a  number of  extensions to the  time functions  used by
standard  UNIX  systems.  These  are  designed to  increase  the scope  and
accuracy of time-handling, and to ease calculation of some time elements.

COHERENT  holds information  about your  time  locale in  the environmental
variable  TTIIMMEEZZOONNEE. This  variable is  described in  detail in  its Lexicon
article.  In brief, it consists of seven fields:

    1. Name of the local standard time zone
    2. Offset from Greenwich Mean Time, in minutes
    3. Name of the local daylight time zone
    4. Date when daylight-savings time begins
    5. Date when daylight-savings time ends
    6. Hour when daylight-savings time begins
    7. Hour when daylight-savings time ends

The  fields are  defined in  such a  way that  any form  of daylight-saving
adjustment can be handled correctly.  For example, the United States shifts
into daylight-savings  time on  the first  Sunday in April;  whereas Brazil
shifts into daylight-savings time on a set day each spring.

The function ttzzsseett() parses TTIIMMEEZZOONNEE into the following external variables:

ttiimmeezzoonnee  Seconds from GMT to give local time
ttzznnaammee[22][1166]Character array of names of standard and daylight times

For  details on  manipulations these  variable, see  the Lexicon  entry for
ttzzsseett().  The  library  lliibbmmiisscc.aa  contains  the following  functions  that
convert time from Julian to Gregorian form:

ttiimmee_ttoo_jjddaayy()Convert ttiimmee_tt to the Julian date
jjddaayy_ttoo_ttiimmee()Convert Julian date to ttiimmee_tt
ttmm_ttoo_jjddaayy()Convert ttmm structure to Julian date
jjddaayy_ttoo_ttmm()Convert Julian date to ttmm structure

COHERENT's time functions  assume that conversion to the Gregorian calendar
occurred October 1582, when it was first adopted in Rome.  However, various
nations adopted the Gregorian  calendar at different times; for example, it
was adopted in the British Empire (including its American colonies) only in
September 1752.   (This, by the  way, is the  date assumed by  the COHERENT
command ccaall, as  you would see if you typed  the command ccaall 99 11775522.) Users
in northern  and eastern Europe,  and in European-influenced  areas of Asia
(e.g.,  India)  may  wish  to  to  write their  own  functions  to  convert
historical data properly from the Julian to the Gregorian calendar.

_E_x_a_m_p_l_e
For an example of some time functions, see the entry for aassccttiimmee().

_S_e_e _A_l_s_o
ccaall, lliibbcc, lliibbmmiisscc

_N_o_t_e_s
COHERENT also  includes the system call ffttiimmee(),  which returns the current
system time.  Because the ANSI Standard eliminates ffttiimmee(), users are urged
to replace this system call with calls to ttiimmee().

UNIX System V defines ttiimmee_tt in header file <ssyyss/ttyyppeess.hh>, whereas COHERENT
defines it in  ttiimmee.hh. This should not affect the  porting of programs from
UNIX to  COHERENT, but it may  affect the porting of  programs in the other
direction.
