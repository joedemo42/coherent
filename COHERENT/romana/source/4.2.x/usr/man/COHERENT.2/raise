rraaiissee() -- General Function (libc)

Let a process send a signal to itself
#iinncclluuddee <ssiiggnnaall.hh>
iinntt rraaiissee(_s_i_g_n_a_l)
iinntt _s_i_g_n_a_l;

rraaiissee() sends  _s_i_g_n_a_l to the program that is  currently being executed.  If
called from within  a signal handler, the processing of  this signal may be
deferred until the signal handler exits.

_E_x_a_m_p_l_e
This example sets a signal, raises  it itself, then allows the signal to be
raised interactivly.  Finally, it clears the signal and exits.

#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <signal.h>

void gotcha(void);

void
setgotcha(void)
{
    if(signal(SIGINT, gotcha) == SIG_ERR) {
        printf("Couldn't set signal\n");
        abort();
    }
}

void
gotcha(void)
{
    char buf[10];

    printf("Do you want to quit this program? <y/n> ");
    fflush(stdout);
    gets(buf);

    if(tolower(buf[0]) == 'y')
        abort();

    setgotcha();
}

main(void)
{
    char buf[80];

    setgotcha();
    printf("Set signal; let's pretend we get one.\n");
    raise(SIGINT);

    printf("Returned from signal\n");
    printf("Try typing <ctrl-c> to signal <enter> to exit");
    fflush(stdout);
    gets(buf);

    if(signal(SIGINT, SIG_DFL) == SIG_ERR) {
        printf("Couldn't lower signal\n");
        abort();
    }

    printf("Signal lowered\n");
    exit(EXIT_SUCCESS);
}

_S_e_e _A_l_s_o
lliibbcc, ssiiggnnaall(), ssiiggnnaall.hh
ANSI Standard, section 7.7.2.1
