aalliiggnnmmeenntt -- Definition

AAlliiggnnmmeenntt refers to the  fact that some microprocessors require the address
of a  data entity  to be _a_l_i_g_n_e_d  to a numeric  boundary in memory  so that
_a_d_d_r_e_s_s modulo _n_u_m_b_e_r equals zero.   For example, the M68000 and the PDP-11
require  that   an  integer  be  aligned  along   an  even  address,  i.e.,
_a_d_d_r_e_s_s%22==00.

Generally speaking,  alignment is a  problem only if you  write programs in
assembly language.   For C programs,  COHERENT ensures that  data types are
aligned properly under foreseeable conditions.  You should, however, beware
of copying  structures and of casting  a pointer to cchhaarr to  a pointer to a
ssttrruucctt, for these could trigger alignment problems.

Processors react  differently to an  alignment problem.  On the  VAX or the
i8086, it  causes a program  to run more  slowly, whereas on  the M68000 it
causes a bus error.

_S_e_e _A_l_s_o
ddaattaa ttyyppeess, PPrrooggrraammmmiinngg CCOOHHEERREENNTT
