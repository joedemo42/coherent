ffiillee -- Definition

The way to access bits

The term ffiillee is used throughout the world of computing.  Because there are
several distinct  types of COHERENT ``files,''  understanding what COHERENT
means by a ``file'' can help you grasp how COHERENT works.

A  file is  a mass  of bits  that is  given a  name and  is stored  on some
physical medium (e.g., floppy disk, hard disk, RAM disk, or CD-ROM).  These
bits  may represent  data (e.g.,  ASCII or  EBCDIC characters)  or machine-
executable instructions.   COHERENT defines a number  of different types of
files.  A file's type defines its behavior.  Some common file types include
the following:

rreegguullaarr
     This  file points  to  a location  on  a disk,  which can  be read  or
     written.  The  location pointed  to can  contain data (e.g.,  text) or
     executable  instructions  in  the form  of  shell  commands or  binary
     instructions.  Regular files are sometimes called _o_r_d_i_n_a_r_y files.

ddiirreeccttoorryy
     A directory  holds the names  and addresses of  other files, including
     other directories.

ssppeecciiaall
     Special files  designate COHERENT devices.   A device can  represent a
     physical device,  such as a  floppy disk drive,  a printer port,  or a
     serial port.  It can also represent  a part of a physical device, such
     as a RAM disk (representing part of memory) or one partition of a hard
     disk.  It  can also  represent a logical  device that has  no physical
     counterpart, like the bit bucket /ddeevv/nnuullll.

     Special  files  come  in  two  flavors:  _c_h_a_r_a_c_t_e_r _s_p_e_c_i_a_l  and  _b_l_o_c_k
     _s_p_e_c_i_a_l.  The former access data in streams (that is, one character at
     a time), and so access devices like tape drives and serial ports.  The
     latter access one block at a time, and so access disk drives and other
     devices  that  return their  data  in  block-sized chunks.   (COHERENT
     defines a block as being 512 characters.)

FFIIFFOO This  is a  variety of  regular file that  contains semantics  to hook
     together two  processes, just like  a pipe `|' in  the COHERENT shell.
     See  the Lexicon  article nnaammeedd  ppiippee for details  on this  variety of
     file.

pprroocceessss
     This  kind of  file  corresponds one-to-one  with the  existence of  a
     process on a system.  It tends to be short-lived.

Files live  with a  _f_i_l_e _s_y_s_t_e_m,  which organizes the  files hierarchically
within  directories.  The  Lexicon entry  for the  command mmkkffss  gives some
technical information  on how  a file  system is constructed.   The Lexicon
entry for  the command mmoouunntt  gives some information  on how a  file system
relates to  device on which it  lives, and how different  file systems from
different partitions are hooked together  to form one large file system for
the entire computer.

The  same file  can have  (and  be accessed  by) more  than one  name.  The
Lexicon entry for the command llnn shows how you can link additional names to
a file.  The  entry for the system call uunnlliinnkk()  gives some details on the
relationship between a file and its names.

Finally, a file has _p_e_r_m_i_s_s_i_o_n_s associated with it.  Every file is owned by
someone; and the owner can restrict  access to the file if she wishes.  The
Lexicon entry  for the command llss describes  what permissions are available
for  a file.   The entry  for the  command cchhmmoodd shows  how you  can change
permissions on a  file.  The entry for the command  uummaasskk shows how you can
change the permissions that COHERENT gives by default to any files that you
create.

_S_e_e _A_l_s_o
cchhggrrpp, cchhmmoodd, cchhoowwnn, ddiirreeccttoorryy, FFIILLEE, ddeevviiccee ddrriivveerrss, llss, mmkkffss, nnaammeedd ppiippee,
ooppeenn(), PPrrooggrraammmmiinngg CCOOHHEERREENNTT, ssttrreeaamm, uummaasskk, UUssiinngg CCOOHHEERREENNTT
ANSI Standard, section 4.9.3
