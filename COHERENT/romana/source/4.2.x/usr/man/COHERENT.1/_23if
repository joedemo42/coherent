#iiff -- Preprocessing Directive

Include code conditionally

The preprocessing  directive #iiff tells  the preprocessor that  if _c_o_n_s_t_a_n_t-
_e_x_p_r_e_s_s_i_o_n is  true (i.e., that  it evalutes to  a value other  than zero),
then include the following lines of  code within the program until it reads
the next #eelliiff, #eellssee, or #eennddiiff directive.

The  _c_o_n_s_t_a_n_t-_e_x_p_r_e_s_s_i_o_n must  be  an integral  expression,  and it  cannot
include a  ssiizzeeooff operator, a cast, or an  enumeration constant.  All macro
substitutions  are  performed upon  the  _c_o_n_s_t_a_n_t-_e_x_p_r_e_s_s_i_o_n  before it  is
evaluated.  All integer constants are treated as long objects, and are then
evaluated.  If _c_o_n_s_t_a_n_t-_e_x_p_r_e_s_s_i_o_n includes character constants, all escape
sequences are converted into characters before evaluation.

If _c_o_n_s_t_a_n_t-_e_x_p_r_e_s_s_i_o_n  is an undefined symbol,  the preprocessor treats it
the same as it would a false statement.

_S_e_e _A_l_s_o
#eelliiff, #eellssee, #eennddiiff, #iiffddeeff, #iiffnnddeeff, CC pprreepprroocceessssoorr, ddeeffiinneedd
ANSI Standard, section 6.8.1
