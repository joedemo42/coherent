_eexxiitt() -- General Function (libc)

Terminate a program
#iinncclluuddee <uunniissttdd.hh>
vvooiidd _eexxiitt(_s_t_a_t_u_s) iinntt _s_t_a_t_u_s;

_eexxiitt() terminates  a program directly.   It returns _s_t_a_t_u_s  to the calling
program, and  exits.  Unlike the library function  eexxiitt(), _eexxiitt() does not
perform  extra termination  cleanup, such  as  flushing buffered  files and
closing open files.

_eexxiitt() should  be used only  in situations where  you do _n_o_t  want buffers
flushed or files closed.  For example, you may wish to call _eexxiitt() if your
program detects an irreparable error condition and you want to ``bail out''
to keep your data files from being corrupted.

_eexxiitt() should  also be used with  programs that do not  use STDIO.  Unlike
eexxiitt(), _eexxiitt()  does not  use STDIO.  This  will help you  create programs
that are extremely small when compiled.

_S_e_e _A_l_s_o
cclloossee(), eexxiitt(), lliibbcc, uunniissttdd.hh, wwaaiitt()
POSIX Standard, section 3.2.2

_N_o_t_e_s
If a program leaves mmaaiinn() by  an error condition, the contents of register
AX becomes the exit code.  Usually, these register contents are random.  If
you want  to test a program's  return code, you must  call eexxiitt() or rreettuurrnn
from within mmaaiinn().
