eexxeeccllppee() -- General Function (libc)

Execute a load module
eexxeeccllppee(_f_i_l_e, _a_r_g_0, _a_r_g_1, ..., _a_r_g_n, NNUULLLL, _e_n_v)
cchhaarr *_f_i_l_e, *_a_r_g_0, *_a_r_g_1, ..., *_a_r_g_n;
cchhaarr *_e_n_v[];

The function eexxeeccllppee() calls the COHERENT system call eexxeeccvvee() to execute a
program.  It initializes the new stack  of the process to contain a list of
strings that  are command arguments.  It  specifies arguments individually,
as a NULL-terminated list of _a_r_g parameters.

The argument  _e_n_v points  to an  array of pointers  to strings  that define
_f_i_l_e's environment.

Unlike the  related function  eexxeeccll(), eexxeeccllppee()  searches for _f_i_l_e  in all
directories named in the environmental variable PPAATTHH-- that is, the current
PPAATTHH, not the one contained within the environmented pointed to by _e_n_v.

For more information on program execution, see eexxeeccuuttiioonn.

_S_e_e _A_l_s_o
eennvviirroonn, eexxeeccuuttiioonn, eexxeeccll(), eexxeeccvveepp(), lliibbcc,

_D_i_a_g_n_o_s_t_i_c_s
eexxeeccllppee() does not return if successful.  It returns -1 for errors, such as
_f_i_l_e not  existing in  the directories named  in PPAATTHH, not  accessible with
execute permission, having a bad format, or too large to fit in memory.

eexxeeccllppee() is not part of the  SVID specification.  Therefore, it may not be
present on non-COHERENT operating systems.
