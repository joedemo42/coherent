eedd -- Command

Interactive line editor
eedd [-] [+ccmmooppssvv] [_f_i_l_e]

eedd is the COHERENT system's interactive line editor.

eedd is a line-oriented interactive text editor.  With it, you can locate and
replace text patterns, move or copy  blocks of text, and print parts of the
text.  eedd can  read text from input files and  can write all or part of the
edited text to other files.

eedd reads  commands from the  standard input, usually one  command per line.
Normally, eedd  does not prompt for commands.  If  the optional _f_i_l_e argument
is given,  eedd edits the  given file, as  if the _f_i_l_e  were read with  the ee
command described below.

eedd  manipulates a  copy of  the text  in memory rather  than with  the file
itself.  No changes to a file  occur until the user writes edited text with
the ww  command.  Large files can  be divided with sspplliitt  or edited with the
stream editor sseedd.

eedd remembers  some information to simplify its  commands.  The _c_u_r_r_e_n_t _l_i_n_e
is typically the line most recently  edited or printed.  When eedd reads in a
file, the last  line read becomes the current line.   The _c_u_r_r_e_n_t _f_i_l_e _n_a_m_e
is the last  file name specified in an ee  or ff command.  The _c_u_r_r_e_n_t _s_e_a_r_c_h
_p_a_t_t_e_r_n is the last pattern specified in a search specification.

eedd identifies  text lines by  integer line numbers, beginning  with one for
the first line.  Several special forms identify a line or a range of lines,
as follows:

_n    A decimal number _n specifies the _nth line of the text.

.    A period `.' specifies the current line.

$    A dollar sign `$' specifies the last line of the text.

+,-  Simple arithmetic may be performed on line numbers.

/_p_a_t_t_e_r_n/
     Search forward  from the current  line for the next  occurrence of the
     _p_a_t_t_e_r_n. If  eedd finds no  occurrence before the  end of the  text, the
     search  wraps to  the beginning  of the  text.  Patterns,  also called
     _r_e_g_u_l_a_r _e_x_p_r_e_s_s_i_o_n_s, are described in detail below.

?_p_a_t_t_e_r_n?
     Search backwards  from the current line to  the previous occurrence of
     the _p_a_t_t_e_r_n.  If eedd  finds no occurrence  before the beginning  of the
     text, the search wraps to the end of the text.

'_x   Lines marked with the kk_x command described below are identified by '_x.
     The _x may be any lower-case letter.

_n,_m  Line specifiers  separated by a  comma `,' specify the  range of lines
     between the two given lines, inclusive.

_n;_m  Line  specifiers separated  by a  semicolon `;'  specify the  range of
     lines between  the two given  lines, inclusive.  Normally,  eedd updates
     the current  line after it executes each command.   If a semicolon `;'
     rather  than a  comma separates  two line  specifiers, eedd  updates the
     current line before reading the second.

*    An asterisk `*' specifies all lines; it is equivalent to 11,$.

_C_o_m_m_a_n_d_s
eedd commands consist of a single letter, which may be preceded by one or two
specifiers  that give  the line  or  lines to  which the  command is  to be
applied.  The following command summary uses the notations [nn] and [nn[,mm]]
to refer to an optional line specifier and an optional range, respectively.
These  default to  the current  line when  omitted, except  where otherwise
noted.  A semicolon `;' may be  used instead of a comma `,' to separate two
line specifiers.

.    Print the  current line.   Also, a line  containing only a  period `.'
     marks the end of aappended, cchanged, or iinserted text.

[_n]  Print given line.  If no line  number is given (i.e., the command line
     consists only  of  a newline  character), print the  line that follows
     the current line.

[_n]= Print the specified line number (default: last line number).

[_n]& Print a screen of 23 lines; equivalent to nn,nn+_2_2_p.

! _l_i_n_e
     Pass the given _l_i_n_e to the shell sshh for execution.  eedd prompts with an
     exclamation point `!' when execution is completed.

?    Print a brief description of the most recent error.

[_n]aa Append  new text  after  line _n.  Terminate  new text  with line  that
     contains only a period `.'.

[_n[,_m]]cc
     Change specified  lines to new  text.  Terminate new text  with a line
     that contains only a period `.'.

[_n[,_m]]dd[pp]
     Delete specified lines.  If pp follows, print new current line.

ee [_f_i_l_e]
     Edit the specified _f_i_l_e (default: current file name).  An error occurs
     if there  are unsaved changes.  Reissuing the  command after the error
     message forces eedd to edit the _f_i_l_e.

EE [_f_i_l_e]
     Edit the specified _f_i_l_e (default: current file name).  No error occurs
     if there are unsaved changes.

ff [_f_i_l_e]
     Change  the current  file  name to  _f_i_l_e  and print  it.   If _f_i_l_e  is
     omitted, print the current file name.

[_n[,_m]]gg/[_p_a_t_t_e_r_n]/_c_o_m_m_a_n_d_s
     Globally  execute  _c_o_m_m_a_n_d_s  for  each  line  in the  specified  range
     (default:  all  lines) that  contains  the  _p_a_t_t_e_r_n (default:  current
     search pattern).  The _c_o_m_m_a_n_d_s may extend over several lines, with all
     but the last terminated by `\'.

[_n]ii Insert  text  before line  _n.  Terminate  new text  with  a line  that
     contains only a period `.'.

[_n[,_m]]jj[pp]
     Join specified lines into one line.   If _m is not specified, use range
     _n,_n+1. If no  range is specified, join the current  line with the next
     line.  With optional pp, print resulting line.

[_n]kk_x
     Mark given line with lower-case letter _x.

[_n[,_m]]ll
     List selected lines, interpreting non-graphic characters.

[_n[,_m]]mm[_d]
     Move selected lines to follow line _d (default: current line).

oo _o_p_t_i_o_n_s
     Change the given _o_p_t_i_o_n_s. The  _o_p_t_i_o_n_s may consist of an optional sign
     `+' or `-', followed by one  or more of the letters `_c_m_o_p_s_v'.  Options
     are explained below.

[_n[,_m]][pp]
     Print selected lines.  The pp is optional.

qq    Quit editing and exit.  An  error occurs if there are unsaved changes.
     Reissuing the command after the error message forces eedd to exit.

QQ    Quit editing and  exit.  Throw away all changes that  you have not yet
     saved to disk.

[_n]rr [_f_i_l_e]
     Read _f_i_l_e into current text after given line (default: last line).

[nn[,_m]]ss[_k]/[_p_a_t_t_e_r_n_1]/_p_a_t_t_e_r_n_2/[gg][pp]
     Search   for  _p_a_t_t_e_r_n_1  (default,   remembered  search   pattern)  and
     substitute _p_a_t_t_e_r_n_2  for _kth occurrence (default,  first) on each line
     of the given range.  If gg follows, substitute every occurrence on each
     line.  If pp follows, print the resulting current line.

[_n[,_m]]tt[_d]
     Transfer  (copy) selected  lines to  follow  line _d  (default, current
     line).

[_n]uu[pp]
     Undo  effect of  last substitute  command.   If optional  pp specified,
     print undone  line.  The specified  line must be  the last substituted
     line.

[_n[,_m]]vv/[_p_a_t_t_e_r_n]/_c_o_m_m_a_n_d_s
     Globally  execute  _c_o_m_m_a_n_d_s  for  each  line  in the  specified  range
     (default:  all lines)  _n_o_t  containing the  _p_a_t_t_e_r_n (default:  current
     search pattern).  The _c_o_m_m_a_n_d_s may extend over several lines, with all
     but the last terminated by `\'.   The vv command is like the gg command,
     except the sense of the search is reversed.

[_n[,_m]]ww [_f_i_l_e]
     Write selected  lines (default, all  lines) to _f_i_l_e  (default, current
     file name).  The previous contents of _f_i_l_e, if any, are lost.

[_n[,_m]]WW [_f_i_l_e]
     Write  specified  lines  (default,  all  lines)  to the  end  of  _f_i_l_e
     (default, current file name).  Like  ww, but appends to _f_i_l_e instead of
     truncating it.

_P_a_t_t_e_r_n_s
Substitution commands and  search specifications may include _p_a_t_t_e_r_n_s, also
called _r_e_g_u_l_a_r  _e_x_p_r_e_s_s_i_o_n_s. A non-special  character in a  pattern matches
itself.  Special characters include the following.

^    Match beginning of line,  unless it appears immediately after `[' (see
     below).

$    Match end of line.

*    Matches zero or more repetitions of preceding character.

.    Matches any character except newline.

[_c_h_a_r_s]
     Matches any one of the enclosed _c_h_a_r_s. Ranges of letters or digits may
     be indicated using `-'.

[^_c_h_a_r_s]
     Matches  any character  _e_x_c_e_p_t one  of the  enclosed _c_h_a_r_s.  Ranges of
     letters or digits may be indicated using `-'.

\_c   Disregard special meaning of character _c.

\(_p_a_t_t_e_r_n\)
     Delimit substring _p_a_t_t_e_r_n for use with \dd, described below.

The replacement  part _p_a_t_t_e_r_n_2 of  the substitute command may  also use the
following:

&    Insert characters matched by _p_a_t_t_e_r_n_1.

\dd   Insert substring  delimited by _dth  occurrence of delimiters  `\(' and
     `\)', where _d is a digit.

_O_p_t_i_o_n_s
The user may specify eedd options on the command line, in the environment, or
with the oo command.  The available options are as follows:

cc    Print character counts on ee, rr, and ww commands.

mm    Allow multiple commands per line.

oo    Print line counts instead of character counts on ee, rr, and ww commands.

pp    Prompt with an `*' for each command.

ss    Match lower-case  letters in a  _p_a_t_t_e_r_n to both  upper-case and lower-
     case text characters.

vv    Print verbose versions of error messages.

The cc option  is normally set, and all others  are normally reset.  Options
may be  set on the command  line with a leading `+'  sign.  The `-' command
line option resets the cc option.

Options may be set in the environment with an assignment, such as

    export ED=+cv

Options may be set with the `+' prefix or  reset with the `-' prefix.

_S_e_e _A_l_s_o
ccoommmmaannddss, eellvviiss, eexx, mmee, sseedd, vvii
_I_n_t_r_o_d_u_c_t_i_o_n _t_o _t_h_e _e_d _L_i_n_e _E_d_i_t_o_r

_D_i_a_g_n_o_s_t_i_c_s
eedd usually prints  only the diagnostic `?' on any  error.  When the verbose
option vv  is specified, the `?'  is followed by a  brief description of the
nature of the error.
