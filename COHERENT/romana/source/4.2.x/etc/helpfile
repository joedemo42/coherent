@#
# -- String-ize operator


@##
## -- Token-pasting operator


@#define
#define -- Define an identifier as a macro


@#elif
#elif -- Include code conditionally


@#else
#else -- Include code conditionally


@#endif
#endif -- End conditional inclusion of code


@#if
#if -- Include code conditionally


@#ifdef
#ifdef -- Include code conditionally


@#ifndef
#ifndef -- Include code conditionally


@#include
#include -- Read another file and include it

#include <file>
#include "file"

@#line
#line -- Reset line number

#line number newline
#line number filename newline
#line macros newline

@#pragma
#pragma -- Perform implementation-specific preprocessing


@#undef
#undef -- Undefine a macro

#undef identifier

@__DATE__
__DATE__ -- Date of translation


@__FILE__
__FILE__ -- Source file name


@__LINE__
__LINE__ -- Current line within a source file


@__STDC__
__STDC__ -- Mark a conforming translator


@__TIME__
__TIME__ -- Time source file is translated


@_exit
_exit() -- Terminate a program

#include <unistd.h>
void _exit(status) int status;

@_getwd
_getwd() -- Get current working directory name

char *_getwd(pathname)
char *pathname;

@_tolower
_tolower() -- Convert characters to lower case

#include <ctype.h>
int _tolower(c) int c;

@_toupper
_toupper() -- Convert characters to upper case

#include <ctype.h>
int _toupper(c) int c;

@a.out.h
a.out.h -- Include all COFF header files

#include <coff/a.out.h>

@abort
abort() -- End program immediately

#include <stdlib.h>
void abort()

@abs
abs() -- Return the absolute value of an integer

#include <stdlib.h>
int abs(n) int n;

@ac
ac -- Summarize login accounting information

ac [ -dp ] [ -w wfile ][ username ... ]

Options:
     -d        Itemize for each midnight-midnight period
     -p        Itemize by individual users
     -w wtmp   Obtain raw statistics from wtmp rather than /usr/adm/wtmp

If users are specified, only they are considered.
@accept
accept() -- Accept a connection on a socket

#include <sys/types.h>
#include <sys/socket.h>
int accept(socket, address, addrlen)
int socket, *addrlen; struct sockaddr *address;

@access
access() -- Check if a file can be accessed in a given mode

#include <unistd.h>
int access(filename, mode) char *filename; int mode;

@acct
acct() -- Enable/disable process accounting

#include <acct.h>
acct(file)
char *file;

@acct.h
acct.h -- Format for process-accounting file

#include <acct.h>

@accton
accton -- Enable/disable process accounting

/etc/accton [ file ]

Normally file is /usr/adm/acct.  If no file argument is included, disable
process accounting.
@acos
acos() -- Calculate inverse cosine

#include <math.h>
double acos(arg) double arg;

@add_history
add_history() -- Add a line to history buffer

void add_history(line)
char *line;

@address
address -- Definition


@Administering COHERENT
Administering COHERENT -- Overview


@alarm
alarm() -- Set a timer

#include <unistd.h>
alarm(n)
unsigned n;

@alias
alias -- Set an alias

alias [name[=value ...]]

ksh only.
@aliases
aliases -- File of users' aliases

/usr/lib/mail/aliases
$HOME/.aliases
$HOME/.forward

@alignment
alignment -- Definition


@alloc.h
alloc.h -- Define the allocator

#include <sys/alloc.h>

@alloca
alloca() -- Dynamically allocate space on the stack

alloca(memory)
int memory;

@almanac
almanac -- Print an almanac entry for this date

almanac [month day]

@ANSI
ANSI -- Standards for information


@apropos
apropos -- Find manual pages on a given topic

apropos topic [ topic ... ]

@ar
ar -- The librarian/archiver

ar option [modifier][position] archive [member ...]

Options:
     d         Delete given members
     m         Move member to indicated position (default, end)
     p         Print members
     q         Quick append, put members at end with no checking
     r         Replace each member specified in the archive
     t         Print a table of members (default, all)
     x         Extract the specified members (default, all)
Modifiers:
     a         Place new member after position in archive
     b         Place new member before position in archive
     c         Suppress message when new archive is created
     i         Insert new member before position in archive
     k         Preserve modify time of file (with options r, q, or x)
     l         Use current directory for temporaries (default, /tmp)
     s         Update ranlib header even if not present (with options r or m)
     u         Update: replace members only if newer than those in archive
     v         Print extra information when used with certain options
@ar.h
ar.h -- Format for archive files

#include <ar.h>

@arcoff.h
arcoff.h -- COFF archive-file header

#include <coff/arcoff.h>

@arena
arena -- Definition


@argc
argc -- Argument passed to main()

int argc;

@argv
argv -- Argument passed to main()

char *argv[];

@ARHEAD
ARHEAD -- Append options to beginning of ar command line

export ARHEAD=options

@array
array -- Definition


@ARTAIL
ARTAIL -- Append options to end of ar command line

export ARTAIL=options

@as
as -- i80386 assembler

as [-o outfile] [-bfglnpwxX] infile

Options:
     -Dname=string
               Initialize string variable name to string.
     -Ename=value
               Initialize numeric variable name to value.
     -a        Set alignment for data objects
     -b        Reverse bracket sense; that is, use () for expressions and []
               for code.
     -f        Reverse order of operands from  assembler form to that of Intel
               documentation or 80286 version of as.
     -g        Make undefined symbols .globl.
     -l        Generate output listing.
     -n        Turn off the insertion of nops to correct 80386 errors.
     -o outfile
               Name the file into which the relocatable object is written
     -p        Don't use `%' on register names; e.g., use ax, not %ax.
     -Q        Quiet: Suppress all error messages, no matter how awful an error
               they indicate
     -w        Disable warning messages.
     -x        Remove all non-global symbols from the common symbol output.
     -X        Remove all non-global symbols starting with .L from the common
               symbol output.

Options and file names can be interspersed on the command line.

as assembles files written in the 80286 dialect of as or -style assembly
language.  It generates relocatable object modules that can be linked with
objects compiled by the  C compiler.  It also contains a number of features not
available with the 80286 dialect of as, including macro assembly.
@ASCII
ASCII -- Definition


@asctime
asctime() -- Convert time structure to ASCII string

#include <time.h>
#include <sys/types.h>
char *asctime(tmp)
struct tm *tmp;

@asfix
asfix -- Convert assembly-language programs into as 80386 format

asfix < oldfile > newfile

@ASHEAD
ASHEAD -- Append options to beginning of as command line

export ASHEAD=options

@asin
asin() -- Calculate inverse sine

#include <math.h>
double asin(arg) double arg;

@ASKCC
ASKCC -- Force prompting for CC names

ASKCC=YES/NO

@assert
assert() -- Check assertion at run time

#include <assert.h>
void assert(outcome)
int outcome;

@assert.h
assert.h -- Define assert()

#include <assert.h>

@ASTAIL
ASTAIL -- Append options to end of as command line

export ASTAIL=options

@asy
asy -- Device driver for asynchronous serial lines


@asymkdev
asymkdev -- Create nodes for asynchronous devices

/conf/asymkdev [-u] [async_file [outfile]]

@asypatch
asypatch -- Patch a kernel file for an asynchronous configuration

/conf/asypatch [-v] <kernel_name> <async_file

@at
at -- Drivers for hard-disk partitions


@at
at -- Execute commands at given time

at [ -v ] [ -c command ] time [ [ day ] week ] [ file ]
at [ -v ] [ -c command ] time month day [ file ]

Options:
     -c        Following argument gives command
     -v        Print time for which command is set

If file is given, read commands from it.  If neither file nor -c is given, read
commands from stdin.
@atan
atan() -- Calculate inverse tangent

#include <math.h>
double atan(arg) double arg;

@atan2
atan2() -- Calculate inverse tangent

#include <math.h>
double atan2(num, den) double num, den;

@ATclock
ATclock -- Read or set the AT realtime clock

/etc/ATclock [yy[mm[dd[hh[mm[.ss]]]]]]

With an argument, ATclock sets your computer's realtime clock.  With no
argument, it reads it.
@atexit
atexit() -- Register a function to be called when the program exits

#include <stdlib.h>
int atexit(void (function)
void (*function)();

@atof
atof() -- Convert ASCII strings to floating point

#include <stdlib.h>
double atof(string) char * string;

@atoi
atoi() -- Convert ASCII strings to integers

#include <stdlib.h>
int atoi(string) char *string;

@atol
atol() -- Convert ASCII strings to long integers

#include <stdlib.h>
long atol(string) char *string;

@atrun
atrun -- Execute commands at a preset time


@auto
auto -- Note an automatic variable


@awk
awk -- Pattern-scanning language

awk [-y][-Fc][-f progfile][prog][file ...]

Options:
     -Fc       Set field separator character to c (default, blank, and tab)
     -f        progfile is the awk program; otherwise, first non-option
               argument is awk program
     -y        Dual case match (as in grep)

If no file is present, the stdin is used.  File `-' means stdin.
@backups
backups -- Strategies for backing up


@bad
bad -- Maintain list of bad blocks

bad [-acdl] device [ block ... ]

Options:
     a         Add blocks
     c         Clear bad-block list
     d         Delete blocks
     l         List blocks
@badscan
badscan -- Build bad block list

/etc/badscan [ -v ] [ -o proto ] [ -b boot ] device size
/etc/badscan [ -v ] [ -o proto ] [ -b boot ] device xdevice

Options:
     -b boot   Insert bootstrap boot into proto
     -o proto  Write prototype into file proto
     -v        Print estimate of time remaining

Scan device of size bytes (or size given in hard disk partition table xdevice)
for bad blocks, write prototype to stdout.
@banner
banner -- Print large letters

banner [ argument ... ]

Print each argument as one line of large-text output.  If no arguments, print
each line from stdin as a line of large output.
@basename
basename -- Strip path information from a file name

basename file [ suffix ]

@bc
bc -- Interactive calculator with arbitrary precision

bc [ -l ] [ file ... ]

Option:
     -l        Use the extended bc library

If no file is specified, bc reads stdin.
@bind
bind() -- Bind a name to a socket

#include <sys/types.h>
#include <sys/socket.h>
int bind (socket, name, namelen)
int socket, namelen; struct sockaddr *name;

@bit
bit -- Definition


@bit-fields
bit-fields -- Definition


@bit map
bit map -- Definition


@block
block -- Technical Information


@boot
boot -- Boot block for hard-disk partition/nine-sector diskette


@boot.fha
boot.fha -- Boot block for floppy disk


@booting
booting -- How booting works


@boottime
boottime -- File that holds time system was last booted


@brc
brc -- Perform maintenance chores, single-user mode

/etc/brc

@break
break -- Exit from shell construct

break [ n ]

Exit from n (default, one) for, until, or while constructs.  The shell executes
break directly.
@break
break -- Exit from loop or switch statement


@brk
brk() -- Change size of data area

#include <unistd.h>
brk(addr)
char *addr;

@bsearch
bsearch() -- Search an array

#include <stdlib.h>
char *bsearch(key, array, number, size, comparison)
char *key, *array;
size_t number, size;
int (*comparison)();

@buf.h
buf.h -- Buffer header

#include <sys/buf.h>

@buffer
buffer -- Definition


@build
build -- Install  onto a hard disk

/etc/build

@builtin
builtin -- Execute a command as a built-in command

builtin command [ arg ... ]

ksh only.
@byte
byte -- Definition


@byte ordering
byte ordering -- Machine-dependent ordering of bytes


@c
c -- Print multi-column output

c [ -lN ] [ -wN ] [ -012 ]

Options:
     -lN       Set the page length to N lines
     -wN       Set the page width to N columns
     -0        Order fields horizontally across the page
     -1        Order fields vertically down each column (default)
     -2        Special case of -1
@cabs
cabs() -- Complex absolute value function

#include <math.h>
double cabs(z) struct { double r, i; } z;

@cal
cal -- Print a calendar

cal [ month ] [ year ]

@calendar
calendar -- Reminder service

calendar [ -a ] [ -ffile ]... [ -d[date] ] [ -w[date] ] [ -m[month] ]

Options:
     -a        Search calendars of all users and send mail
     -ffile    Search each file in order given
     -d[date]  Print all entries matching date
     -w[date]  Print entries in the week beginning with date
     -m[month] Print entries in the given month

The default calendar is $HOME/.calendar.  The default date is today.
@calling conventions
calling conventions -- Definition


@calloc
calloc() -- Allocate dynamic memory

#include <stdlib.h>
char *calloc(count, size)
unsigned count, size;

@cancel
cancel -- Cancel a print job

cancel [user] [job [ ... job]] [-all]

@canon.h
canon.h -- Portable layout of binary data

#include <canon.h>
#include <sys/types.h>

@captoinfo
captoinfo -- Convert termcap data to terminfo form

captoinfo [filename]

@case
case -- Execute commands conditionally according to pattern

case token in [pattern [|pattern] ...) sequence ;;] ... esac

The shell executes case directly.
@case
case -- Introduce entry in switch statement


@cast
cast -- Definition


@cat
cat -- Concatenate the contents of a file to the standard output

cat [ -u ][ file ... ]

Option:
     -u        Do not buffer output in 512-byte blocks

File `-' indicates the standard input.  If no file is specified, cat reads
stdin.
@caveat utilitor
caveat utilitor -- Definition


@cc
cc -- C compiler

cc [compiler options] file .... [linker options]

Options:
     -A
                option: Invoke  automatically should any errors be found during
               compilation, to allow user to edit source and then recompile
     -B        Backup option: Use alternate versions of various compiler phases
     -c        Compile only -- no load
     -Dname[=value]
               Tell cpp to define name with value
     -E        Run cpp only and send its output to stdout
     -f        Link in routines to format floating-point output
     -g        Generate debugging information
     -Iname    Tell cpp to look for header files in directory name
     -K        Keep intermediate files
     -Ldirectory
               Tell the linker ld to search directory for its libraries before
               it searches the directories named in the environmental variable
               LIBPATH
     -lname    Pass /lib/libname.a to linker ld
     -Mstring  Use alternative machine versions
     -O        Run peephole optimizer of C compiler
     -q[p01ab2s]
               Quit after specified pass
     -Q        Quiet: suppress all error messages, no matter how awful an error
               they indicate
     -S        Place C compiler assembler output in a .s file
     -Tsize    Tell cc to use buffers of sizen bytes each, instead of its
               default 64-kilobytes buffers.  cc reads the environmental
               variable TMPDIR to find where you want it to write its temporary
               files.
     -t[p01ab2sdlrt]
               Take specified compiler phases.
     -Uname    Tell cpp to remove any initial definition of name
     -V        Run verbosely
     -Vname    Toggle variant Vname

Compiles files ending .c; assembles files ending in .s; passes other options
and files to the linker ld.
@cc0
cc0 -- Definition


@cc1
cc1 -- Definition


@cc2
cc2 -- Definition


@cc3
cc3 -- Definition


@CCHEAD
CCHEAD -- Append options to beginning of cc command line

export CCHEAD=options

@CCTAIL
CCTAIL -- Append options to end of cc command line

export CCTAIL=options

@cd
cd -- Change directory

cd directory

If no directory specified, $HOME is assumed.  The shell executes cd directly.
@cdmp
cdmp -- Dump COFF files into a readable form

cdmp [-adlrs] filename

Options:
     -a        Suppress auxiliary symbol entries
     -d        Suppress data dumps
     -l        Suppress line numbers
     -r        Suppress relocation entries
     -s        Suppress symbol entries
@ceil
ceil() -- Set numeric ceiling

#include <math.h>
double ceil(z) double z;

@cgrep
cgrep -- Pattern search for C source programs

cgrep [-clnsA] [-r new] expression file ...

Options:
     -A        Build error list for interactive editing using , like -A option
               to the cc command.
     -c        Print all C comments
     -l        Return file where expression found
     -n        Prefix each line containing expressions with its number in its
               source file
     -r        Replaces each expression with new
     -s        Print all C strings
@char
char -- Data type


@chase
chase -- Highly amusing video game

/usr/games/chase [ -c ] [ speed ]

Options:
     -c        Color video card
     speed     Speed of game: the lower the number, the faster the speed
               (default, 10)
@chdir
chdir() -- Change working directory

#include <unistd.h>
chdir(directory) char *directory;

@check
check -- Check file system

check [-s] filesystem ...

Option:
     -s        Salvage as much as possible, given the problems detected
@checklist
checklist -- File systems to check when booting

/etc/checklist

@chgrp
chgrp -- Change the group owner of a file

chgrp group file ...

@chmod
chmod -- Change the modes of a file

chmod +modes file
chmod -modes file


Mode may be octal or a comma-separated symbolic list: [which]howperm...[,...]
which:
     a         User, group, and other permissions
     g         Group permissions
     o         Other permissions
     u         User permissions

Missing which implies that `a', `g', `o', and `u' can be combined.
how:
     =         Set permissions
     +         Add permissions
     -         Take away permissions
perm:
     g         Current group permissions
     o         Current other permissions
     r         Read
     s         Setuid on execution
     t         Sticky bit (save text)
     u         Current user permissions
     w         Write
     x         Execute
@chmod
chmod() -- Change file-protection modes

#include <sys/stat.h>
chmod(file, mode)
char *file; int mode;

@chmog
chmog -- Change mode, owner, and group simultaneously

chmog mod own grp file ...

@chown
chown -- Change the owner of files

chown owner file ...

@chown
chown() -- Change ownership of a file

#include <unistd.h>
chown(file, uid, gid)
char *file; short uid, gid;

@chreq
chreq -- Change priority, lifetime, or printer for a job

chreq [-dprinter] [-llifetime] [-ppriority] job

Options:
     -dprinter Move job to the queue for printer
     -llifetime
               Change the lifetime of job, where lifetime is one of T
               (temporary), S (short-term), or L (long-term)
     -ppriority
               Change priority of job to priority, which is one of 0 (highest
               priority) to 9 (lowest priority)
@chroot
chroot -- Change root directory

chroot directory program ...

@chroot
chroot() -- Change the root directory

#include <unistd.h>
int chroot(path)
char *path;

@chsize
chsize() -- Change the size of a file

int chsize(fd, size);
int fd; long size;

@ckermit
ckermit -- Interactive inter-system communication and file transfer

ckermit [-abcdefghiklpqrstwx] [ file ... ]

Options
     -a filename
               Give an alternate name to file
     -b baudrate
               Set the baud rate of the device to baudrate
     -c        Connect
     -d        Use debug mode
     -e n      Set the length of the packet to n
     -f        Send a ``finish'' command to a remote server
     -g file   Ask a remote system to send file
     -h        Print help
     -i        Specify that the file being transferred is binary
     -k        Passively receive files
     -l device Name the serial device to be used
     -n        Like -c, but used after a protocol transaction has occurred
     -p x      Set parity to x
     -q        Quiet mode -- no messages
     -r        Receive files
     -s file   Send file
     -t        Specify half duplex
     -w        Write-protect -- avoid file-name collisions for incoming files
     -x        Begin server operation
@C keywords
C keywords -- Overview


@C language
C language -- Overview


@clear
clear -- Clear the screen

clear

@clearerr
clearerr() -- Present stream status

#include <stdio.h>
clearerr(fp) FILE *fp;

@clist.h
clist.h -- Character-list structures

#include <sys/clist.h>

@clock
clock -- Read the system clock

/dev/clock

@clock
clock() -- Get processor time

#include <time.h>
clock_t clock();

@close
close() -- Close a file

#include <unistd.h>
int close(fd) int fd;

@closedir
closedir() -- Close a directory stream

#include <dirent.h>
int closedir(dirp)
DIR *dirp;

@clri
clri -- Clear i-node

/etc/clri filesystem inumber ...

@cmos
cmos -- Device for reading CMOS


@cmp
cmp -- Compare bytes of two files

cmp [-ls] file1 file2 [skip1 skip2]

Options:
     -l        Print byte number and bytes at each difference
     -s        Return status (print nothing)

If file1 is `-', use stdin.  If skip1 and skip2 are present, they are the
number of bytes to skip before comparing file1 and file2, respectively.
@coff.h
coff.h -- Format for COFF objects

#include <coff.h>

@coffnlist
coffnlist() -- Symbol table lookup, COFF format

#include <coff.h>
coffnlist(fn, nlp, names, count)
char *fn;
SYMENT *nlp;
char *names;
int count;

@coh_intro
coh_intro -- Tour the  file system

/etc/coh_intro [ > outfile ]

@COHERENT
COHERENT -- Principles of the  System


@coherent.h
coherent.h -- Miscellaneous useful definitions

#include <sys/coherent.h>

@cohtune
cohtune -- Set a variable within a device driver

cohtune driver tagfield "tagfield = value"

@col
col -- Remove reverse and half-line motions

col [ -bdfx ][ -pn ]

Options:
     -b        Output device cannot backspace
     -d        Double spaced output
     -f        The output device can handle half lines (has precedence over -d)
     -pn       Set page buffer to n lines (default, 128)
     -x        Suppress conversion of white space to tabs on output
@comm
comm -- Print common lines

comm [ -123 ] file1 file2

Options:
     -1        Suppress column 1
     -2        Suppress column 2
     -3        Suppress column 3

Column 1 has lines unique to file1; column 2 has lines unique to file2; column
3 has lines common to both files.  Both files should be sorted.
@commands
commands -- Overview


@compress
compress -- Compress a file

compress [ -dfvc ] [ -bnum ] [ file ... ]

Options:
     -bnum     Set compression to num
     -c        Send output to stdout
     -d        Decompress, rather than compress
     -f        Force output file, even if no space saved by compression
     -v        Verbose mode
@con.h
con.h -- Configure device drivers

#include <sys/con.h>

@connect
connect() -- Connect to a socket

#include <sys/types.h>
#include <sys/socket.h>
int connect(socket, name, namelen)
int socket, namelen; struct sockaddr *name;

@console
console -- Console device driver


@const
const -- Qualify an identifier as not modifiable


@const.h
const.h -- Declare machine-dependent constants

#include <sys/const.h>

@continue
continue -- Terminate current iteration of shell construct

continue [ n ]

Terminate current iteration of n (default, one) for, until, or while
constructs.  The shell executes continue directly.
@continue
continue -- Force next iteration of a loop


@controls
controls -- Data base for the lp print spooler

/usr/spool/mlp/controls

@conv
conv -- Numeric base converter

conv [number]

If no number is given, reads one number per line from stdin.
@copy
copy -- Copy a group of files or directories

copy [-nmorv] source [... source] destination

Options:
     -m        Set the modification time of each duplicate file to the
               modification time of the file from which it was copied
     -n        Copy a source file only if it is new
     -o        Preserve the ownership of each source file
     -r        Copy a directory recursively
     -v        Print verbose messages
@core
core -- Format of a core-dump file

#include <sys/core.h>

@core.h
core.h -- Declare structure of a core file

#include <sys/core.h>

@cos
cos() -- Calculate cosine

#include <math.h>
double cos(radian) double radian;

@cosh
cosh() -- Calculate hyperbolic cosine

#include <math.h>
double cosh(radian) double radian;

@cp
cp -- Copy a file

cp [ -d ]  oldname newname
cp [ -d ]  file1 ... fileN directory

Option:
     -d        Preserve date (mtime) on destination files.
@cpdir
cpdir -- Copy directory hierarchy

cpdir [option ... ] dir1 dir2

Options:
     -a        Verbose file by file account on one line
     -d        Preserve last-modified date
     -e        Recover from errors and continue
     -r[n]     Recur n levels only (default, one)
     -sname    Suppress copy of name, which is relative to dir1
     -t        Test and report errors -- do not change anything
     -u        Update regular files if more recent
     -v        Verbose file by file account
@cpio
cpio -- Archiving/backup utility


@cpp
cpp -- C preprocessor

/lib/cpp [option...] [file...]

Options:
     -C        Do not suppress comments
     -DVARIABLE[=value]
               Define VARIABLE; if value is not defined, the default value is
               one
     -E        Strip file line-number information
     -I dir    Search dir for header files
     -o file   Write output into file
     -P        Remove file and line-number information
     -Q        Suppress all messages
     -UVARIABLE
               Undefine VARIABLE
     -V        Print verbose information
     -VCPLUS   Suppress C++-style on-line comments
@CPPHEAD
CPPHEAD -- Append options to beginning of cpp command line

export CPPHEAD=options

@CPPTAIL
CPPTAIL -- Append options to end of cpp command line

export CPPTAIL=options

@C preprocessor
C preprocessor -- Overview


@creat
creat() -- Create/truncate a file

#include <fcntl.h>
int creat(file, mode)
char *file; int mode;

@cron
cron -- Execute commands periodically

/etc/cron&

cron is invoked only once, usually from /etc/rc.  Thereafter, it sleeps in the
background, awaking periodically to check crontab files -- either the file
/usr/lib/crontab if it exists, or the files in directory
/usr/spool/cron/crontabs if /usr/lib/crontab does not exist.

Entries in a crontab file consist of commands preceded by five fields; these
represent minute (0-59), hour (0-23), day of the month (1-31), month (1-12),
and day of the week (1-7).  An asterisk `*' in a field means all possible
entries for that field.
@crontab
crontab -- Copy a command file into the crontab directory

/usr/bin/crontab [-l] [-r] [-f filename] [-m[ed]] [-uuser]

Option:
     -f filename
               Replace a user's command file.
     -l        List your command file.
     -m[ed]    Enable/disable sending mail upon failure of a command within a
               command file.
     -r        Remove user's command file.
     -uuser    Specify that the file being copied is to be applied to user.
               Only the superuser root can execute this option.
@crypt
crypt -- Encrypt/decrypt text

crypt [password]

Password is ten characters or fewer.  The same password encrypts and decrypts.
@crypt
crypt() -- Encryption using rotor algorithm

char *crypt(key, extra); char *key, *extra;

@ct
ct -- Controlling terminal driver


@ctags
ctags -- Generate tags and refs files for vi editor

ctags [-r] files...

@ctime
ctime() -- Convert system time to an ASCII string

#include <time.h>
#include <sys/types.h>
char *ctime(timep)
time_t *timep;

@ctype.h
ctype.h -- Header file for data tests

#include <ctype.h>

@cu
cu -- -compatible communications utility

cu [options] [system] [phone] [dir]

     -a port   Use named port
     -p port   Use named port
     -l line   Use named device (e.g. tty0)
     -s speed, -#
               Use given speed
     -c phone  Phone number to call
     -z system System to call
     -e        Set even parity
     -o        Set odd parity
     -h        Echo locally
     -t        Map carriage return to carriage return/linefeed
     -n        Prompt for telephone number
     -d        Set maximum debugging level
     -x activity
               Log a given activity, for debugging purposes
     -I file   Set configuration file to use
@curses.h
curses.h -- Define functions and macros in curses library

#include <curses.h>

@cut
cut -- Select portions of each line of its input

cut -clist [file ...]
cut -flist [-s] [-d char] [file ...]

Options:
     -c list   list specifies character positions
     -d char   Use char as field delimiter
     -f list   list specifies fields
     -s        Suppress lines without field delimiters
@cvmail
cvmail -- Convert mail from  3.X format to SV format

cvmail [-m filename] [filename]

@CWD
CWD -- Current working directory


@d_passwd
d_passwd -- Give passwords for devices

/etc/d_passwd

@daemon
daemon -- Definition


@data formats
data formats -- Definition


@data types
data types -- Definition


@date
date -- Print/set the date and time

date [-s] [-u] [[yymmdd]hhmm[.ss]]

Options:
     -s        Suppress daylight savings time conversion
     -u        Print (and enter) date in Greenwich Mean Time
@db
db -- Assembler-level symbolic debugger

db [-a symfile] [-cdefort] [[mapfile] program]

Options:
     -a symfile.
               Use symfile as the symbol file, instead of reading the
               executable's symbol table.
     -c        Map program as a core file
     -d        Map program as a system dump; mapfile defaults to /coherent
     -e        Next argument is object file and rest of command line is passed
               to the child process
     -f        Map program as binary data
     -k        Map program as a kernel process; mapfile defaults to /coherent
     -o        program is an object file
     -p prompt Change the command prompt from db: to prompt
     -r        Access all files read-only
     -s        Do not load symbol table.
     -t        Perform input and output via /dev/tty rather than stdin and
               stdout

By default, program is assumed to be an object file.  mapfile defaults to l.out
or a.out, and program defaults to core.
@dc
dc -- Desk calculator

dc [file]

Arbitrary precision desk calculator with registers, using reverse-Polish
notation.  Reads input from file if given, then from stdin.
@dcheck
dcheck -- Check directory consistency

dcheck [-s] [-i inumber...] filesystem ...

Options:
     -s        Cause dcheck to correct link counts automatically
     -i        Print information about each given i-number
@dd
dd -- Convert the contents of a file

dd [option=value] ...

Options:
     bs=n      Set I/O buffer size to n
     cbs=n     Set conversion buffer size to n
     conv=list Comma-separated list of conversions:
        ascii  Convert EBCDIC to ASCII
        ebcdic Convert ASCII to standard EBCDIC
        ibm    Convert ASCII to IBM print codes
        lcase  Map all letters to lower case
        noerror
               Continue if error occurs
        swab   Swap byte pairs
        sync   Pad input to ibs
        ucase  Map all letters to upper case
     count=n   Number of buffers to copy from input
     files=n   Number of files to copy (useful with tape)
     ibs=n     Input buffer size
     if=file   Set input file to file
     obs=n     Set output block size to n
     of=file   Set output file to file
     seek=n    Set seek position of output to n
     skip=n    Skip n input blocks
@decvax_d
decvax_d() -- Convert a double from IEEE to DECVAX format

int
decvax_d(ddp, idp)
double *ddp, *idp;

@decvax_f
decvax_f() -- Convert a float from IEEE to DECVAX format

int
decvax_f(dfp, ifp)
float *dfp, *ifp;

@default
default -- Default label in switch statement


@defined
defined -- Perform an action if a macro is defined


@deftty.h
deftty.h -- Define default tty settings

#include <sys/deftty.h>

@deroff
deroff -- Remove text formatting control information

deroff [-w] [-x] [file ...]

Options:
     -w        Divide the output into words, one per line
     -x        Extra knowledge of macro packages
@detab
detab -- Replace tab characters with spaces

detab [tabsize]

Option:
     tabsize   Set tabsize (2-256, inclusive)
@device drivers
device drivers -- Overview


@df
df -- Measure free space on disk

df [-fiv] [-tfilesys] (default format)
df [-ait] [directory ...] [filesystem ...] (old format)

Options:
     -a        Print information on all mounted file systems (old format only)
     -f        Suppress i-node information (default format only)
     -i        Give percentage of i-nodes used
     -t        Give number of blocks and i-nodes used on filesys
     -v        Give percentage of blocks used (default format only)

If no filesys is specified, then df prints information about the file system
that you are in.
@dial
dial -- File that describes how to dial a modem

/usr/lib/uucp/dial

@dialups
dialups -- Name every device that may need an additional password

/etc/dialups

@diff
diff -- Summarize differences between two files

diff [-bdefh] [-c symbol] file1 file2

Options:
     -b        Ignore trailing blanks; all strings of blanks are equal
     -c sym    Make cpp input conditionalized on sym
     -d        Use -h algorithm for large (>25,000 character) files
     -e        Make ed script
     -f        Make fake (non-usable) ed script
     -h        Half-hearted algorithm (works on long files)
     -s        Make sed script

If either file1 or file2 is `-', stdin is used.  If one file is a directory,
the other file under that directory is used.
@diff3
diff3 -- Summarize differences among three files

diff3 [-ex3] file1 file2 file3

Options:
     -e        Make ed script to change file2 and file to file1 (changes marked
               with ==== or ====3)
     -x        Above script with changes marked ==== (all different)
     -3        Above script with changes marked ====3 (file3 different)
@difftime
difftime() -- Calculate difference between two times

#include <time.h>
double difftime(newtime, oldtime)
time_t newtime, oldtime;

@directory
directory -- Definition


@dirent.h
dirent.h -- Define directory-related data elements

#include <dirent.h>

@dirname
dirname -- Extract a directory name

dirname string

@dirs
dirs -- Print the contents of the directory stack

dirs

sh only.
@disable
disable -- Disable a port

/etc/disable port...

@div
div() -- Perform integer division

#include <stdlib.h>
div_t div(numerator, denominator)
int numerator, denominator;

@do
do -- Introduce a loop


@domain
domain -- Set your system's mail domain

/etc/domain

@dos
dos -- Manipulate files on MS-DOS file systems

dos [-]dFflrtx[flags] [device] [file ...]

Commands:
     d         Delete specified files
     F         Build  file system (format)
     f         Force removal of readonly files on the DOS side
     l[label]  Label disk
     r         Replace files (default, all files in `.')
     t         List contents (default, all files)
     x         Extract specified files (default, all files)
Flags:
     a         ASCII data extract/replace (default, binary data)
     c         Read only; do not write changes to  file system
     k         Keep mtime on extract/replace (default, now)
     n         Newest files first in list (default, alphabetized)
     p         Piped extract/replace
     sdir      Suppress subdirectory dir
     v         Verbose
     [1-9]     Specify logical drive on extended  partition

The default device is /dev/dos.
@doscat
doscat -- Concatenate a file on an  file system

doscat device:[/directory/]file

@doscp
doscp -- Copy files to/from an  file system

doscp [-abkmrv] src dest

Options
     a         ASCII.  When copying from  to , convert the carriage-
               return/newline combination to newline characters; when copying
               from  to , do the opposite.
     b         Binary.  Do not convert newline conversion.
     k         Keep the time stamp on copied files.
     m         Move.  Same as a, described above.
     r         Same as b, described above.
     v         Verbose.  Describe each action as it is executed.
@doscpdir
doscpdir -- Copy a directory to/from an  file system

doscpdir [-akmv] src dest

Options
     a         ASCII.  When copying from  to , convert the carriage-
               return/newline combination to newline characters; when copying
               from  to , do the opposite.
     k         Keep the time stamp on copied files.
     m         Move.  Same as a, described above.
     v         Verbose.  Describe each action as it is executed.
@dosdel
dosdel -- Delete a file from an  file system

dosdel [-fv] device:/dir/file

Option
     f         Force removal of readonly files
     v         Verbose.  Describe each action as it is executed.
@dosdir
dosdir -- List contents of an  directory

dosdir [-nv] device:[dir/][file]

Options
     n         List files in order of creation (newest file last) rather than
               in alphabetical order.
     v         Verbose.  Describe each action as it is executed.
@dosformat
dosformat -- Build an MS-DOS file system

dosformat [-v] device:

Option
     v         Verbose.  Describe each action as it is executed.
@doslabel
doslabel -- Label an  floppy disk

doslabel [-v] device: label

Option
     v         Verbose.  Describe each action as it is executed.
@dosls
dosls -- List files on an  file system

dosls [-v] device:[/directory/][file]

Option:
     -v        Print output in long format, analogous to ls -l.
@dosmkdir
dosmkdir -- Create a directory in an  file system

dosmkdir device:directory

@dosrm
dosrm -- Remove a file from an  file system

dosrm device:[/directory/]file

@dosrmdir
dosrmdir -- Remove a directory from an  file system

dosrmdir device:directory

@double
double -- Data type


@dpac
dpac -- De-fragment a COHERENT file system

dpac [-q] raw_device

Option:
     -q        Run quietly.
@drvld.all
drvld.all -- Load loadable drivers at boot time

/etc/drvld.all

@du
du -- Summarize disk usage

du [-a] [-s] [directory ...]

Options:
     -a        Print an entry for each file
     -s        Print only a summary
@dump
dump -- File-system backup utility

dump [options] [argument ...]

Options:
     0-9       Set dump level (default, 9)
     b         Next argument is blocking factor (default, 20)
     d         Next argument is density in bpi (default, 1600)
     f         Next argument is output device name
     s         Next argument is tape length in feet (default, 2300)
     S         Next argument is floppy disk size in blocks
     u         Update /etc/ddate
     v         Verbose (display date and tape length)
@dumpdate
dumpdate -- Print dump dates

dumpdate [filesystem ...]

@dumpdir
dumpdir -- Print the directory of a dump

dumpdir [af [argument ...] ]

Options:
     a         List normally suppressed `.' and `..' names
     f         Next argument is dump device name (default, /dev/dump)
@dumptape.h
dumptape.h -- Define data structures used on dump tapes

#include <dumptape.h>

@dup
dup() -- Duplicate a file descriptor

#include <unistd.h>
int dup(fd) int fd;

@dup2
dup2() -- Duplicate a file descriptor

#include <unistd.h>
int dup2(fd, newfd) int fd, newfd;

@echo
echo -- Repeat/expand an argument

echo [-n] [argument ...]

Option:
     -n        Do not print terminal newline

Copies all command arguments to the standard output, with the following
special-character sequences being replaced with the equivalent ASCII character:
     \b        Backspace
     \c        Print line without a newline (like -n option)
     \f        Formfeed
     \n        Newline
     \r        Carriage return
     \t        Tab
     \v        Vertical tab
     \\        Backslash
     \nnn      nnn is octal value of desired character
@ecvt
ecvt() -- Convert floating-point numbers to strings

char *
ecvt(d, prec, dp, signp)
double d; int prec, *dp, *signp;

@ed
ed -- Interactive line editor

ed [-] [+cmopsv] [file]

Options:
     -         Suppress character counts on r, w, e commands
     -x        Encrypt file
     +c        Print character counts on r, w, e
     +m        Allow multiple commands per line
     +o        Print line counts instead of character counts
     +p        Prompt for each command with `*'
     +s        Lower case matches upper in patterns
     +v        Verbose error messages
@EDITOR
EDITOR -- Name editor to use by default

EDITOR=editor

@egrep
egrep -- Extended pattern search

egrep [-Abcefhily] [pattern] [file ...]

Options:
     -A        Build error list for interactive editing using , like -A option
               to the cc command
     -b        Each output line has block number of match
     -c        Print only a count of the matching lines
     -e        Next argument is pattern
     -f        Next argument is file with one pattern per line
     -h        Suppress printing of file names on matched lines
     -i        Ignore case when matching alphabetic characters in pattern
     -l        Print only names of files containing matches
     -n        Print line number of file with each matched line output
     -s        Suppress output, just return status
     -v        Negate the sense of match
     -y        Lower-case letters in pattern match upper- and lower-case

The pattern is a pattern roughly like that found in ed.  If no file is
specified, stdin is read.  egrep is like grep -a, but is an order of magnitude
faster.
@else
else -- Introduce a conditional statement


@elvis
elvis -- Clone of Berkeley-standard screen editor

elvis [ options ] [ +cmd ] [ file1 ... file27 ]

Options:
     -e        Begin in colon-command mode
     -i        Begin in input mode
     -r        Recover a previous edit
     -R        Read-only mode
     -t tag    Begin editing at tag
     -m        Use in error-handling mode
     -v        Begin in visual-command mode
     -w winsize
               Set option window to winsize
     +command  Execute command before editing
@em87
em87 -- Perform/emulate hardware floating-point operations


@emacs
emacs --  screen editor

emacs [-e errorfile] [-f bindfile] [textfile ...]

@enable
enable -- Enable a port

/etc/enable port...

@endgrent
endgrent() -- Close group file

#include <grp.h>
endgrent()

@endnetent
endnetent() -- Close network file

#include <netdb.h>
void endnetent();

@endprotoent
endprotoent() -- Close protocols file

#include <netdb.h>
void endprotoent();

@endpwent
endpwent() -- Close password file

#include <pwd.h>
endpwent()

@endservent
endservent() -- Close protocols file

#include <netdb.h>
void endservent();

@enum
enum -- Declare a type and identifiers


@ENV
ENV -- File read to set environment


@env
env -- Execute a command in an environment

env [-] [VARIABLE=value ...] [command args]

@environ
environ -- Process environment


@environmental variables
environmental variables -- Technical Information


@envp
envp -- Argument passed to main()

char *envp[];

@EOF
EOF -- Indicate end of a file

#include <stdio.h>

@epson
epson -- Prepare files for Epson printer

epson [ -cdfrw8 ] [ -b head ] [ -i n ] [ -o ofile ] [ -s n ] [ file ... ]

Options:
     b head    Print wide banner head at top of first page
     c         Compressed printing
     d         Print boldface with double strike, not emphasize mode
     f         Suppress formfeed after each file
     in        Indent output 'n' spaces
     o ofile   Send output to ofile (default, /dev/lp)
     r         Use only Roman character set (no italics)
     sn        Vertical spacing n (default, 1)
     w         Double-width printing
     8         Eight lines per inch (default, six)
@errno
errno -- External integer for return of error status

#include <errno.h>
extern int errno;

@errno.h
errno.h -- Error numbers used by errno()

#include <errno.h>

@eval
eval -- Evaluate arguments

eval [token ...]

The shell executes eval directly.
@ex
ex -- Berkeley-style line editor

ex [ options ] [ +cmd ] [ file1 ... file27 ]

Options:
     -r        Recover a previous edit
     -R        Read-only mode
     -t tag    Begin editing at tag
     -m        Use in error-handling mode
     +command  Execute command before editing
@exec
exec -- Execute command directly

exec [command]

The shell executes command by one of the exec() functions rather than through
the system call fork().  This normally terminates the current shell.  Current
shell I/O may be redirected by exec with no command.
@execl
execl() -- Execute a load module

#include <unistd.h>
execl(file, arg0, arg1, ..., argn, NULL)
char *file, *arg0, *arg1, ..., *argn;

@execle
execle() -- Execute a load module

#include <unistd.h>
execle(file, arg0, arg1, ..., argn, NULL, env)
char *file, *arg0, *arg1, ..., *argn, char *env[];

@execlp
execlp() -- Execute a load module

#include <unistd.h>
execlp(file, arg0, arg1, ..., argn, NULL)
char *file, *arg0, *arg1, ..., *argn;

@execlpe
execlpe() -- Execute a load module

execlpe(file, arg0, arg1, ..., argn, NULL, env)
char *file, *arg0, *arg1, ..., *argn;
char *env[];

@execution
execution -- Definition


@execv
execv() -- Execute a load module

#include <unistd.h>
execv(file, argv)
char *file, *argv[];

@execve
execve() -- Execute a load module

#include <unistd.h>
execve(file, argv, env)
char *file, *argv[], *env[];

@execvp
execvp() -- Execute a load module

#include <unistd.h>
execvp(file, argv)
char *file, *argv[];

@execvpe
execvpe() -- Execute a load module

execvp(file, argv, env)
char *file, *argv[], *env[];

@exit
exit -- Exit from a shell

exit [status]

The previous status is retained if none is specified.  exit sets the status but
does not terminate an interactive shell.  The shell executes exit directly.
@exit
exit() -- Terminate a program gracefully

#include <stdlib.h>
void exit(status) int status;

@EXIT_FAILURE
EXIT_FAILURE -- Indicate program failed to execute successfully

#include <stdlib.h>

@EXIT_SUCCESS
EXIT_SUCCESS -- Indicate program executed successfully

#include <stdlib.h>

@exp
exp() -- Compute exponent

#include <math.h>
double exp(z) double z;

@export
export -- Add a shell variable to the environment

export [name ...]
export [name=value]

@expr
expr -- Compute a command-line expression

expr argument ...

Options:
     n         Any integer with optional sign
     string    Used with comparisons and len operator
     +         Arithmetic operators (one of `+', `-', `*', `/', `%')
     !         Unary not
     -         Unary minus
     ==        Relational operators (one of `>', `<', `>=', `<=', `==', `!=')
     &         Logical AND of previous and next expression
     |         Logical OR of previous and next expression
     len       Length of string given by next argument
     e1:e2     Set to number of characters matching regular expression e2 in
               string e1; if e2 contains any `\(...\)' sequences, result is
               concatenation of matched parts
     ( e )     Parentheses for grouping
     {
               Evaluate e2 if e1 is true, e3 otherwise; e3 defaults to 0 if
               missing
@extern
extern -- Declare storage class


@fabs
fabs() -- Compute absolute value

#include <math.h>
double fabs(z) double z;

@factor
factor -- Factor a number

factor [ number ... ]

@false
false -- Unconditional failure

false

@fc
fc -- Edit and re-execute one or more previous commands

fc [-e editor] [-ln] [first [last]]

Options:
     -l        Print commands on stdout
     -e editor Use editor instead of the editor named in the evironmental
               variable FCEDIT
     -n        Suppress default command numbers

ksh only.
@FCEDIT
FCEDIT -- Editor used by fc command


@fclose
fclose() -- Close a stream

#include <stdio.h>
int fclose(fp) FILE *fp;

@fcntl
fcntl() -- Control open files

#include <fcntl.h>
int fcntl(fd, command, arg)
int fd, cmd, arg;

@fcntl.h
fcntl.h -- Manifest constants for file-handling functions

#include <fcntl.h>

@fcvt
fcvt() -- Convert floating-point numbers to strings

char *
fcvt(d, w, *dp, *signp)
double d; int w, *dp, *signp;

@fd
fd -- Floppy disk driver


@fd.h
fd.h -- Declare file-descriptor structure

#include <sys/fd.h>

@fdformat
fdformat -- Low-level format a floppy disk

/etc/fdformat [ option ... ] special

Options:
     -a        Print information on stdout during format
     -i n      Interleave factor n (0-7; default, 6)
     -o n      Skew factor n for sector numbering (default, 0)
     -v        Verify
     -w file   Copy file to formatted floppy disk track by track
@fdioctl.h
fdioctl.h -- Control floppy-disk I/O

#include <sys/fdioctl.h>

@fdisk
fdisk -- Hard-disk partitioning utility

/etc/fdisk [-r] [-c] [-b mboot] xdev ...

Options:
     -r        Read-only access
     -b        Add master boot code from file mboot
     -c        Specify disk geometry for non-standard drives

A hard disk can be split into a maximum of four partitions (logical devices).
@fdisk.h
fdisk.h -- Fixed-disk constants and structures

#include <sys/fdisk.h>

@fdopen
fdopen() -- Open a stream for standard I/O

#include <stdio.h>
FILE *fdopen(fd, type) int fd; char *type;

@feof
feof() -- Discover stream status

#include <stdio.h>
int feof(fp) FILE *fp;

@ferror
ferror() -- Discover stream status

#include <stdio.h>
int ferror(fp) FILE *fp;

@fflush
fflush() -- Flush output stream's buffer

#include <stdio.h>
int fflush(fp) FILE *fp;

@fgetc
fgetc() -- Read character from stream

#include <stdio.h>
int fgetc(fp) FILE *fp;

@fgetpos
fgetpos() -- Get value of file-position indicator

#include <stdio.h>
int
fgetpos(fp, position)
FILE *fp; fpos_t *position;

@fgets
fgets() -- Read line from stream

#include <stdio.h>
char *fgets(s, n, fp)
char *s; int n; FILE *fp;

@fgetw
fgetw() -- Read integer from stream

#include <stdio.h>
int fgetw(fp) FILE *fp;

@field
field -- Definition


@file
file -- The way to access bits


@file
file -- Guess a file's type

file file ...

@FILE
FILE -- Descriptor for a file stream

#include <stdio.h>

@file descriptor
file descriptor -- Definition


@fileno
fileno() -- Get file descriptor

#include <stdio.h>
int fileno(fp) FILE *fp;

@filsys.h
filsys.h -- Structures and constants for super block

#include <sys/filsys.h>

@filter
filter -- Definition


@find
find -- Search for files satisfying a pattern

find directory ... [expression ...]

Expression:
     -atime n  File has been accessed in n days
     -ctime n  File's i-node has been changed in n days
     -exec cmd Command cmd is successful
     -group gn File belongs to group gn
     -inum n   File has i-node n
     -links n  File has n links to it
     -mtime n  File has been modified within n days
     -name pattern
               File name matches pattern (shell conventions)
     -newerfile
               File has been modified since file
     -nop      Always true; does nothing
     -ok cmd   Like -exec, except it asks
     -perm octal
               File permissions are octal
     -print    Always true; prints current path name
     -size n   File is n blocks long
     -type c   File matches type (c may be [bcdfmp])
     -user uname
               uname owns file
     exp -a exp exp
               Both expressions are true
     exp -o exp exp
               One of the expressions is true
     ! exp     Expression is false
     (exp)     Parentheses for grouping

If no expression is specified, -print is assumed.
@fixterm
fixterm() -- Set the terminal into program mode

#include <curses.h>
fixterm()

@fl
fl -- Floppy-disk driver


@float
float -- Data type


@float.h
float.h -- Define constants for floating-point numbers


@floor
floor() -- Set a numeric floor

#include <math.h>
double floor(z) double z;

@floppy disks
floppy disks -- Technical Information


@fmap
fmap -- Measure fragmentation of the free list

fmap device

@fmod
fmod() -- Calculate modulus for floating-point number

#include <math.h>
double
fmod(number, divisor)
double number, divisor;

@fmt
fmt -- Adjust the length of lines in a file of text

fmt [-width] [textfile ... textfile]

@fnkey
fnkey -- Set/print function keys for the console

fnkey [ n [ string ] ]

Sets function key n to send string; if no string, set it to send nothing.  If
no arguments, fnkey prints the function keys.
@fnmatch
fnmatch() -- Match a string with a normal expression

#include <fnmatch.h>
int fnmatch(pattern, string, flags)
const char *pattern, *string; int flags;

@fnmatch.h
fnmatch.h -- Constants used with function fnmatch()

#include <fnmatch.h>

@fopen
fopen() -- Open a stream for standard I/O

#include <stdio.h>
FILE *fopen (name, type) char *name, *type;

@for
for -- Execute commands for tokens in list

for name [in token ...] do sequence done

If in clause is omitted, list of positional parameters to current script is
assumed.  Both do and done must be first token on line or preceded by `;'.  The
shell executes for directly.
@for
for -- Control a loop

for(initialization; endcondition; modification)

@fork
fork() -- Create a new process

#include <unistd.h>
fork()

@fortune
fortune -- Print randomly selected, hopefully humorous, text

/usr/games/fortune [ file ]

Option:
     file      Read a fortune from file, instead of the default file
               /usr/games/lib/fortunes
@.forward
.forward -- Set a forwarding address for mail


@fpathconf
fpathconf() -- Get a file variable by file descriptor

#include <unistd.h>
long fpathconf(fd, fd)
int fd, name;

@fperr.h
fperr.h -- Constants used with floating-point exception codes

#include <fperr.h>

@fprintf
fprintf() -- Print formatted output into file stream

#include <stdio.h>
int fprintf(fp, format, [arg1, .... argN])
FILE *fp; char *format;
[data type] arg1, ... argN;

@fputc
fputc() -- Write character into file stream

#include <stdio.h>
int fputc(c, fp)
char c; FILE *fp;

@fputs
fputs() -- Write string into file stream

#include <stdio.h>
int fputs(string, fp)
char *string; FILE *fp;

@fputw
fputw() -- Write an integer into a stream

#include <stdio.h>
int fputw(word, fp)
int word; FILE *fp;

@fread
fread() -- Read data from file stream

#include <stdio.h>
int fread(buffer, size, n, fp)
char *buffer; unsigned size, n; FILE *fp;

@free
free() -- Return dynamic memory to free memory pool

#include <stdlib.h>
void free(ptr) char *ptr;

@freopen
freopen() -- Open file stream for standard I/O

#include <stdio.h>
FILE *freopen (name, type, fp)
char *name, *type; FILE *fp;

@frexp
frexp() -- Separate fraction and exponent

#include <math.h>
double frexp(real, ep)
double real; int *ep;

@from
from -- Generate list of numbers, for use in loop

from start to stop [ by incr ]

start, stop, and incr (default, one) are decimal integers with optional `-'.
@fscanf
fscanf() -- Format input from a file stream

#include <stdio.h>
int fscanf(fp, format, arg1, ... argN)
FILE *fp; char *format;
[data type] *arg1, ... *argN;

@fsck
fsck -- Check and repair file systems interactively

/etc/fsck [ -fnqsSy ] [ -t tempfile ] [ filesystem ... ]

Options:
     -f        Fast check; check only if a block is claimed by more than one i-
               node, by an i-node and the free list, or more than once in the
               free list
     -n        Default reply of no to all queries
     -q        Quiet option; syppress file name warning messages
     -s        Force reconstruction of the free list for all unmounted file
               systems.
     -S        Same as -s, but works on mounted file systems as well
     -t        Use tempfile for temporary storage
     -y        Default reply of yes to all queries
@fseek
fseek() -- Seek on file stream

#include <stdio.h>
int fseek(fp, where, how)
FILE *fp; long where; int how;

@fsetpos
fsetpos() -- Set file-position indicator

#include <stdio.h>
int
fsetpos(fp, position)
FILE *fp; fpos_t *position;

@fstat
fstat() -- Find file attributes

#include <sys/stat.h>
fstat(descriptor, statptr) int descriptor; struct stat *statptr;

@fstatfs
fstatfs() -- Get information about a file system

#include <sys/types.h>
#include <sys/statfs.h>
int fstatfs (filedes, buffer, length, fstype)
int filedes;
struct statfs *buffer;
int length, fstype;

@ft
ft -- Archive floppy-tape driver


@ftell
ftell() -- Return current position of file pointer

#include <stdio.h>
long ftell(fp) FILE *fp;

@ftime
ftime() -- Get the current time from the operating system

#include <sys/timeb.h>
int ftime(tbp)
struct timeb *tbp;

@ftok
ftok() -- Generate keys for interprocess communication

#include <sys/types.h>
#include <sys/ipc.h>
key_t ftok(filename, procid)
char *filename;
char procid;

@function
function -- Definition


@fwrite
fwrite() -- Write into file stream

#include <stdio.h>
int fwrite(buffer, size, n, fp)
char *buffer; unsigned size, n; FILE *fp;

@fwtable
fwtable -- Build font-width table

fwtable [ -ptv ] [ infile [ outfile ] ]

Options:
     -p        infile is PostScript AFM file, not PCL bitmap font
     -t        infile is a Hewlett-Packard .tfm file, which describes a font
               that is built into the Hewlett-Packard LaserJet III
     -v        Write a brief font description to stderr
@gcd
gcd() -- Set variable to greatest common divisor

#include <mprec.h>
void gcd(a, b, c)
mint *a, *b, *c;

@gcvt
gcvt() -- Convert floating-point numbers to strings

char *
gcvt(d, prec, buffer)
double d; int prec; char *buffer;

@getc
getc() -- Read character from file stream

#include <stdio.h>
int getc(fp)
FILE *fp;

@getchar
getchar() -- Read character from standard input

#include <stdio.h>
int getchar()

@getcwd
getcwd() -- Get current working directory name

#include <unistd.h>
char *getcwd(buffer, size)
char *buffer;
int size;

@getdents
getdents() -- Read directory entries

#include <sys/dirent.h>
int getdents (fd, buffer, num)
int fd;
char *buffer;
unsigned num;

@getegid
getegid() -- Get effective group identifier

#include <unistd.h>
getegid()

@getenv
getenv() -- Read environmental variable

#include <stdlib.h>
char *getenv(VARIABLE) char *VARIABLE;

@geteuid
geteuid() -- Get effective user identifier

#include <unistd.h>
geteuid()

@getgid
getgid() -- Get real group identifier

#include <unistd.h>
getgid()

@getgrent
getgrent() -- Get group file information

#include <grp.h>
struct group *getgrent();

@getgrgid
getgrgid() -- Get group file information, by group id

#include <grp.h>
struct group *getgrgid(gid);
int gid;

@getgrnam
getgrnam() -- Get group file information, by group name

#include <grp.h>
struct group *getgrnam(gname);
char *gname;

@getgroups
getgroups() -- Read the supplemental group-access list

#include <unistd.h>
int getgroups(gidsetsize, grouplist)
int gidsetsize; gid_t *grouplist;

@getlogin
getlogin() -- Get login name

#include <unistd.h>
char *getlogin()

@getmsg
getmsg() -- Get the next message from a stream

#include <stropts.h>
int getmsg (fd, ctlptr, dataptr, flagsp)
int fd; struct strbuf *ctlptr, dataptr; int *flagsp;

@getnetbyaddr
getnetbyaddr() -- Get a network entry by address

#include <netdb.h>
struct netent *getnetbyaddr(network, type)
long network; int type;

@getnetbyname
getnetbyname() -- Get a network entry by address

#include <netdb.h>
struct netent *getnetbyname(name)
char *name;

@getnetent
getnetent() -- Fetch a network entry

#include <netdb.h>
struct netent *getnetent();

@getopt
getopt() -- Get option letter from argv

#include <unistd.h>
int getopt(argc, argv, optstring)
int argc;
char **argv;
char *optstring;
extern char *optarg;
extern int optind;

@getopts
getopts -- Parse command-line options

getopts optstring name [ opt ]

@getpass
getpass() -- Get password with prompting

char *getpass(prompt)
char *prompt;

@getpeername
getpeername() -- Get name of connected peer

int getpeername(socket, name, namelen)
int socket, *namelen; struct sockaddr *name;

@getpgrp
getpgrp() -- Get process-group identifier

#include <sys/types.h>
#include <unistd.h>
pid_t getpgrp();

@getpid
getpid() -- Get process identifier

#include <unistd.h>
getpid()

@getppid
getppid() -- Get process identifier of parent process

#include <unistd.h>
getppid()

@getprotobyname
getprotobyname() -- Get protocol entry by protocol name

#include <netdb.h>
struct protoent *getprotobyname(name);
char *name;

@getprotobynumber
getprotobynumber() -- Get protocol entry by protocol name

#include <netdb.h>
struct protoent *getprotobynumber(protocol);
int protocol;

@getprotoent
getprotoent() -- Get protocol entry

#include <netdb.h>
struct protoent *getprotoent();

@getpw
getpw() -- Search password file

getpw(uid, line)
short uid;
char *line;

@getpwent
getpwent() -- Get password file information

#include <pwd.h>
struct passwd *getpwent()

@getpwnam
getpwnam() -- Get password file information, by name

#include <pwd.h>
struct passwd *getpwnam(uname)
char *uname;

@getpwuid
getpwuid() -- Get password file information, by id

#include <pwd.h>
struct passwd *getpwuid(uid)
int uid;

@gets
gets() -- Read string from standard input

#include <stdio.h>
char *gets(buffer)
char *buffer;

@getservbyname
getservbyname() -- Get a service entry by port number

#include <netdb.h>
struct servent *getservbyname(name, protocol);
char *name, *protocol;

@getservbyport
getservbyport() -- Get a service entry by port number

#include <netdb.h>
struct servent *getservbyport(port, protocol);
int port; char *protocol;

@getservent
getservent() -- Get a service entry

#include <netdb.h>
struct servent *getservent();

@getsockname
getsockname() -- Get the name of a socket

int getsockname(socket, name, namelen)
int socket, *namelen; struct sockaddr *name;

@getsockopt
getsockopt() -- Get a socket option

#include <sys/types.h>
#include <sys/socket.h>
int getsockopt(socket, level, optname, optval, optlen)
int socket, level, optname, *optlen; void *optval;

@getty
getty -- Terminal initialization

/etc/getty type

@getuid
getuid() -- Get real user identifier

#include <unistd.h>
int getuid()

@getw
getw() -- Read word from file stream

#include <stdio.h>
int getw(fp) FILE *fp;

@GMT
GMT -- Definition


@gmtime
gmtime() -- Convert system time to calendar structure

#include <time.h>
#include <sys/types.h>
tm *gmtime(timep)
time_t *timep;

@gnucpio
gnucpio -- Archiving/backup utility

Copy-in mode: cpio {-o|--create} [-0acvABLV] [-C bytes] [-H format] [-M
message] [-O [[user@]host:]archive] [-F [[user@]host:]archive] [--
file=[[user@]host:]archive] [--format=format] [--message=message] [--null] [--
reset-access-time] [--verbose] [--dot] [--append] [--block-size=blocks] [--
dereference] [--io-size=bytes] [--version] < name-list [> archive]
Copy-out mode: cpio {-i|--extract} [-bcdfmnrtsuvBSV] [-C bytes] [-E file] [-H
format] [-M message] [-R [user][:.][group]] [-I [[user@]host:]archive] [-F
[[user@]host:]archive] [--file=[[user@]host:]archive] [--make-directories] [--
nonmatching] [--preserve-modification-time] [--numeric-uid-gid] [--rename] [--
list] [--swap-bytes] [--swap] [--dot] [--unconditional] [--verbose] [--block-
size=blocks] [--swap-halfwords] [--io-size=bytes] [--pattern-file=file] [--
format=format] [--owner=[user][:.][group]] [--no-preserve-owner] [--
message=message] [--version] [pattern...] [< archive]
Copy-through mode: cpio {-p|--pass-through} [-0adlmuvLV] [-R [user][:.][group]]
[--null] [--reset-access-time] [--make-directories] [--link] [--preserve-
modification-time] [--unconditional] [--verbose] [--dot] [--dereference] [--
owner=[user][:.][group]] [--no-preserve-owner] [--version] destination-
directory < name-list

Options:
     -a        Reset access time of input files after copying
     -B        Change size of a block
     -c        Write header information in ASCII rather than binary
     -d        Create directories as needed
     -fpattern Copy all files except those matching pattern
     -i        Read the standard input
     -l        Link files rather than copying them
     -m        Retain previous modification times
     -opattern Copy all files matching pattern
     -p        Read stdin for files names to copy to destination
     -r        Interactively rename files
     -t        Print table of contents of an existing archive
     -u        Copy files unconditionally
     -v        Verbose output
@goto
goto -- Unconditionally jump within a function


@grep
grep -- Pattern search

grep [-abcefhilnsvxy] [pattern] [file ...]

Options:
     -a        Extra metacharacters supported (`(...)', `|', `+', and `?')
     -b        Each output line has block number of match
     -c        Print only count of matching lines
     -e        Next argument is pattern
     -f        Next argument is file containing one pattern per line
     -h        Suppress printing of file names on matched lines
     -i        Ignore case when matching letters in pattern
     -l        Print only names of files containing matches
     -n        Print line number of file with each matched line output
     -s        Suppress output, just return status
     -v        Negate sense of match
     -x        Exact match (don't expand metacharacters)
     -y        Lower-case letters in pattern match only upper-case

The pattern is a regular expression roughly like that found in ed.  If no file
is specified, stdin is read.
@group
group -- Define groups of users


@grp.h
grp.h -- Declare group structure

#include <grp.h>

@gtar
gtar -- Archiving/backup utility

gtar options
Options:
Options:
     -A
     -A
     --catenate
     --catenate
     --concatenate
     --concatenate
               Append files to an archive Append files to an archive
     --atime-preserve
     --atime-preserve
               Don't change access times on dumped files Don't change access
               times on dumped files
     -b
     -b
     --block-size N
     --block-size N
               Block size of Nx512 bytes (default, N=20) Block size of Nx512
               bytes (default, N=20)
     -B
     -B
     --read-full-blocks
     --read-full-blocks
               Reblock as we read (for reading 4.2BSD pipes) Reblock as we read
               (for reading 4.2BSD pipes)
     --block-compress
     --block-compress
               Block the output of compression program for tapes Block the
               output of compression program for tapes
     -c
     -c
     --create
     --create  Create a new archive Create a new archive
     -C
     -C
     --directory dir
     --directory dir
               Change to directory dir Change to directory dir
     --checkpoint
     --checkpoint
               Print directory names while reading the archive Print directory
               names while reading the archive
     -d
     -d
     --diff
     --diff
     --compare
     --compare Find differences between archive and file system Find
               differences between archive and file system
     --delete
     --delete  Delete from the archive Delete from the archive
     --exclude file
     --exclude file
               Exclude file; file can be a regular expression Exclude file;
               file can be a regular expression
     -f file
     -f file
     --file file
     --file file
               Use archive file or device file (default, the standard input)
               Use archive file or device file (default, the standard input)
     --force-local
     --force-local
               Archive file is local even if has a colon Archive file is local
               even if has a colon
     -F script
     -F script
     --info-script script
     --info-script script
     --new-volume-script script
     --new-volume-script script
               Run script at end of each tape (implies -M option) Run script at
               end of each tape (implies -M option)
     -G
     -G
     --incremental
     --incremental
               Create/list/extract old GNU-format incremental backup
               Create/list/extract old GNU-format incremental backup
     -g file
     -g file
     --listed-incremental file
     --listed-incremental file
               Create/list/extract new GNU-format incremental backup
               Create/list/extract new GNU-format incremental backup
     -i
     -i
     --ignore-zeros
     --ignore-zeros
               Ignore blocks of zeros in archive (normally mean EOF) Ignore
               blocks of zeros in archive (normally mean EOF)
     --ignore-failed-read
     --ignore-failed-read
               Don't exit with non-zero status when an unreadable file is
               encountered Don't exit with non-zero status when an unreadable
               file is encountered
     -k
     -k
     --keep-old-files
     --keep-old-files
               Keep existing files; don't overwrite them from archive Keep
               existing files; don't overwrite them from archive
     -K file
     -K file
     --starting-file file
     --starting-file file
               Begin at file in the archive Begin at file in the archive
     -l
     -l
     --one-file-system
     --one-file-system
               Stay in local file system when creating an archive Stay in local
               file system when creating an archive
     -L N
     -L N
     --tape-length N
     --tape-length N
               Change tapes after writing Nx1024 bytes Change tapes after
               writing Nx1024 bytes
     -m
     -m
     --modification-time
     --modification-time
               Don't extract file modified time Don't extract file modified
               time
     -M
     -M
     --multi-volume
     --multi-volume
               Create/list/extract multi-volume archive Create/list/extract
               multi-volume archive
     -N date
     -N date
     --after-date date
     --after-date date
     --newer date
     --newer date
               Store only the files newer than date Store only the files newer
               than date
     --null
     --null    -T reads null-terminated names, disable -C -T reads null-
               terminated names, disable -C
     -o
     -o
     --old-archive
     --old-archive
     --portability
     --portability
               Write a V7 format archive, rather than ANSI format Write a V7
               format archive, rather than ANSI format
     -O
     -O
     --to-stdout
     --to-stdout
               Extract files to standard output Extract files to standard
               output
     -p
     -p
     --same-permissions
     --same-permissions
     --preserve-permissions
     --preserve-permissions
               Extract all protection information Extract all protection
               information
     -P
     -P
     --absolute-paths
     --absolute-paths
               Don't strip leading `/'s from file names Don't strip leading
               `/'s from file names
     --preserve
     --preserve
               Combine options -p and -s Combine options -p and -s
     -r
     -r
     --append
     --append  Append files to the end of an archive Append files to the end of
               an archive
     -R
     -R
     --record-number
     --record-number
               Show record number within archive with each message Show record
               number within archive with each message
     --remove-files
     --remove-files
               Remove files after adding them to the archive Remove files after
               adding them to the archive
     -s
     -s
     --same-order
     --same-order
     --preserve-order
     --preserve-order
               List of names to extract is sorted to match archive List of
               names to extract is sorted to match archive
     --same-owner
     --same-owner
               Create extracted files with the same ownership Create extracted
               files with the same ownership
     -S
     -S
     --sparse
     --sparse  Handle sparse files efficiently Handle sparse files efficiently
     -t
     -t
     --list
     --list    List the contents of an archive List the contents of an archive
     -T file
     -T file
     --files-from file
     --files-from file
               Get names to extract or create from file Get names to extract or
               create from file
     --totals
     --totals  Print total bytes written with -c Print total bytes written with
               -c
     -u
     -u
     --update
     --update  Only append files that are newer than copy in archive Only
               append files that are newer than copy in archive
     --use-compress-program program
     --use-compress-program program
               Filter the archive through program (which must accept -d) Filter
               the archive through program (which must accept -d)
     -v
     -v
     --verbose
     --verbose Verbosely list files processed Verbosely list files processed
     -V name
     -V name
     --label name
     --label name
               Create archive with volume name Create archive with volume name
     --version
     --version Print gtar version number Print gtar version number
     -w
     -w
     --interactive
     --interactive
     --confirmation
     --confirmation
               Ask for confirmation for every action Ask for confirmation for
               every action
     -W
     -W
     --verify
     --verify  Attempt to verify the archive after writing it Attempt to verify
               the archive after writing it
     -x
     -x
     --extract
     --extract
     --get
     --get     Extract files from an archive Extract files from an archive
     -X file
     -X file
     --exclude-from file
     --exclude-from file
               Exclude all files listed in file Exclude all files listed in
               file
     -z
     -z
     --gzip
     --gzip
     --ungzip
     --ungzip  Filter the archive through gzip Filter the archive through gzip
     -Z
     -Z
     --compress
     --compress
     --uncompress
     --uncompress
               Filter the archive through compress Filter the archive through
               compress

@gtty
gtty() -- Device-dependent control

#include <sgtty.h>
int gtty(fd, sgp)
int fd; struct sgttyb *sgp;

@guess
guess -- Extraordinarily amusing guessing game

/usr/games/guess

@gunzip
gunzip -- GNU utility to uncompress files

gunzip [ -cfhLrtvV ] [ file ... ]

Options:
     -c        Write output to the standard output
     -f        Force: decompress a file even if its has multiple links or the
               corresponding file already exists
     -h        Help: display a screenful of information about how to use this
               command
     -L        Display licensing information
     -r        Recurse: if a file is a directory, attempt to uncompress all
               files within it
     -t        Test the integrity of a compressed file
     -v        Give a verbose description of each action
     -V        Print the current version of this command
@gzip
gzip -- GNU utility to compress files

gzip [ -cdfhLrtvV19 ] [ file ... ]

Options:
     -c        Write output to the standard output
     -d        Decompress each file
     -f        Force: compress a file even if its has multiple links or the
               corresponding file already exists
     -h        Help: display a screenful of information about how to use this
               command
     -L        Display licensing information
     -q        Suppress all warning messages.
     -r        Recurse: if a file is a directory, attempt to compress all files
               within it
     -t        Test the integrity of a compressed file
     -v        Give a verbose description of each action
     -V        Print the current version of this command
     -[1-9]    Regular speed of compression, from 1 to 9, where 1 performs the
               fastest compression but most superficial compression, and 9 the
               slowest but most thorough compression
@hai
hai -- Host adapter-independent SCSI driver


@hard disk
hard disk -- Technical Information


@hash
hash -- Add a command to the shell's hash table

hash [-r] [command ... ]

Option:
     -r        Remove command from hash table

ksh only.
@hdioctl.h
hdioctl.h -- Control hard-disk I/O

#include <sys/hdioctl.h>

@head
head -- Print the beginning of a file

head [+n[bcl]] [file]
head [-n[bcl]] [file]

Options:
     +         Count from beginning of file
     -         Count from end of file
     b         Count in blocks
     c         Count in characters
     l         Count in lines
@header files
header files -- Overview


@help
help -- Print concise description of command

help [-dc] [-ffile] [-ifile] [-r] [command]...

Options
     -dc       Use character c as the delimiter between helpfile entries.
     -ffile    Read file as the helpfile, instead of the default /etc/helpfile.
     -ifile    Read file as the helpfile's index, instead of the default
               /etc/helpindex.
     -r        Rebuild the helpfile's index.

If command is omitted, print information about $LASTERROR.
@HOME
HOME -- User's home directory

HOME=home directory

@hp
hp -- Prepare files for Hewlett-Packard LaserJet printer

hp [ -acflr ] [ -imarg ] [ -ttop ] [ -plines ] [ file ... ]

Options:
     -a        Substitute ` ' for '
     -c        Toggle cartridge in place switch
     -f        Print pages in forward order (default)
     -l        Landscape mode
     -imarg    Indent to marg
     -plines   Page length is lines
     -r        Print pages in reverse order (for LaserJet I).
     -tmarg    Set top margin to marg
@hpd
hpd -- Spooler daemon for laser printer

/usr/lib/hpd

@hpr
hpr -- Spool a job for printing on the laser printer

hpr [-Bcemnr] [-b banner] [ -f fontnum] [file ...]

Options:
     -B        Suppress banner page and extra page at termination.  Must be
               used with a PostScript printer.
     -b        Next argument is the text of the banner
     -c        Make a copy of each file in spool area
     -e        Erase all fonts from printer's memory
     -f fontnum file1 ... fileN
               Load into printer memory the HP soft fonts in file1 through
               fileN; set font identifiers beginning with fontnum
     -m        Send a message when listing is complete
     -n        No message (default)
     -r        Remove files when they have been spooled
@hpskip
hpskip -- Abort/restart current job on Hewlett-Packard LaserJet

hpskip [-r]

Option:
     -r        Restart the current job

With no argument, terminate the current job.
@hypot
hypot() -- Compute hypotenuse of right triangle

#include <math.h>
double hypot(x, y) double x, y;

@i-node
i-node --  system file identifier


@icheck
icheck -- i-node consistency check

icheck [-s] [-b N ...] [ -v ] filesystem ...

Options:
     -b        The following numeric arguments give block numbers; all
               references to these blocks are printed, with type
     -s        Repair file system (requires write access)
     -v        Print summary of information about file system
@id
id -- Print user and group IDs and names

id

@idenable
idenable -- Enable or disable a device driver

/etc/conf/bin/idenable [-f file] [-de] driver

@idle
idle -- Device that returns system's idle time

/dev/idle

@idmkcoh
idmkcoh -- Build a new kernel

idmkcoh [ -o kernelfile ]

@idtune
idtune -- Set a tunable system value

/etc/conf/bin/idtune [-fm] switch value

@ieee_d
ieee_d() -- Convert a double from DECVAX to IEEE format

int
ieee_d(idp, ddp)
double *idp, *ddp;

@ieee_f
ieee_f() -- Convert a float from DECVAX to IEEE format

int
ieee_f(ifp, dfp)
float *ifp, *dfp;

@if
if -- Execute a command conditionally

if sequence1 then sequence2 [elif sequence3 then sequence4] ... [else sequence5] fi

Each then, elif, else, and fi must occur unquoted at the start of a line or
preceded by `;'.  The shell executes if directly.
@if
if -- Introduce a conditional statement


@IFS
IFS -- Characters recognized as white space


@index
index() -- Find a character in a string

#include <string.h>
char *index(string, c) char *string; char c;

@infocmp
infocmp -- De-compile a terminfo file

infocmp [file ... ]

@init
init -- System initialization

/etc/init

@initgroups
initgroups() -- Initialize the supplementary group-access list

#include <sys/types.h>
#include <grp.h>
int initgroups(user, basegid)
const char *user; gid_t basegid;

@initialization
initialization -- Definition


@ino.h
ino.h -- Constants and structures for disk i-nodes

#include <sys/inode.h>

@inode.h
inode.h -- Constants and structures for memory-resident i-nodes

#include <sys/inode.h>

@install
install -- Install a software update onto COHERENT

/etc/install [-c] id device ndisks

Option:
     -c        Uncompress compressed files.
Arguments:
     id        String that identifies the release; e.g., coh.301 identifies
                release version 3.0.1.
     device    The physical device from which the installation takes place;
               e.g., /dev/fha0 identifies floppy-disk drive 0 (drive A), where
               it is a high-density, 5.25-inch disk.
     ndisks    Number of floppy disks in the release.
@int
int -- Data type


@interrupt
interrupt -- Definition


@io.h
io.h -- Constants and structures used by I/O

#include <sys/io.h>

@ioctl
ioctl() -- Device-dependent control

#include <termio.h>
ioctl(fd, command, arg)
int fd, command; char *arg;

@ipc.h
ipc.h -- Definitions for interprocess communications

#include <sys/ipc.h>

@ipcrm
ipcrm -- Remove an interprocess-communication memory item

ipcrm [-mqs id] [-MQS key]

Options:
     m id      Remove the shared memory segment with an identifier of id.
     q id      Remove the message queue with an identifier of id.
     s id      Remove the semaphore set with an identifier of id.
     M key     Remove the shared memory segment with a key of key.
     Q key     Remove the message queue with a key of key.
     S key     Remove the semaphore set with a key of key.
@ipcs
ipcs -- Display a snapshot of interprocess communications

ipcs [-abcmopst] [-N kernel]

Options:
     -a        Use all print options
     -b        Display the biggest size that the kernel allows for each kind of
               IPC object
     -c        Display login name and group name of the user who created each
               IPC object
     -m        Display information about shared-memory segments
     -N kernel Read kernel-specific information from kernel instead of from the
               default kernel /autoboot
     -o        Display ``outstanding usage''
     -p        Display process identifiers
     -q        Display information about message queues
     -s        Display information about sets of semaphores
     -t        Display the times that each IPC was last used and modified
@isalnum
isalnum() -- Check if a character is a number or letter

#include <ctype.h>
int isalnum(c) int c;

@isalpha
isalpha() -- Check if a character is a letter

#include <ctype.h>
int isalpha(c) int c;

@isascii
isascii() -- Check if a character is an ASCII character

#include <ctype.h>
int isascii(c) int c;

@isatty
isatty() -- Check if a device is a terminal

#include <unistd.h>
int isatty(fd) int fd;

@iscntrl
iscntrl() -- Check if a character is a control character

#include <ctype.h>
int iscntrl(c) int c;

@isdigit
isdigit() -- Check if a character is a numeral

#include <ctype.h>
int isdigit(c) int c;

@isgraph
isgraph() -- Check if a character is printable

#include <ctype.h>
int isgraph(int c);

@islower
islower() -- Check if a character is a lower-case letter

#include <ctype.h>
int islower(c) int c;

@ispos
ispos() -- Return if variable is positive or negative

#include <mprec.h>
int ispos(a)
mint *a;

@isprint
isprint() -- Check if a character is printable

#include <ctype.h>
int isprint(c) int c;

@ispunct
ispunct() -- Check if a character is a punctuation mark

#include <ctype.h>
int ispunct(c) int c;

@isspace
isspace() -- Check if a character prints white space

#include <ctype.h>
int isspace(c) int c;

@isupper
isupper() -- Check if a character is an upper-case letter

#include <ctype.h>
int isupper(c) int c;

@isxdigit
isxdigit() -- Check if a character is a hexadecimal numeral

#include <ctype.h>
int isxdigit(c)
int c;

@itom
itom() -- Create a multiple-precision integer

#include <mprec.h>
mint *itom(n)
int n;

@j0
j0() -- Compute Bessel function

#include <math.h>
double j0(z)
double z;

@j1
j1() -- Compute Bessel function

#include <math.h>
double j1(z) double z;

@jn
jn() -- Compute Bessel function

#include <math.h>
double jn(n, z) int n; double z;

@jobs
jobs -- Print information about jobs

jobs

ksh only.
@join
join -- Join two data bases

join [-a [n] ] [-e string ] [-j[n] keyf] [-o n.m ...] [-tc] file1 file2

Options:
     -a[n]     Print unpaired records from file n
     -e s      Replace empty fields on output with string s
     -j[n] key Use key of file n for comparison
     -o [n.]m ..
               Subsequent arguments list fields to output; each has file n and
               field number m
     -tc       Field separator is character c

If either file1 or file2 is `-', stdin is used.  The optional file n may be
either 1 or 2; if omitted, both 1 and 2 are assumed.
@kb
kb -- Non-configurable keyboard driver


@kb.h
kb.h -- Define keys for loadable keyboard driver

#include <sys/kb.h>

@kernel
kernel -- Master program of the COHERENT system


@keyboard
keyboard -- How COHERENT handles the console keyboard


@kill
kill -- Signal a process

kill [- signal ] pid ...

@kill
kill() -- Kill a system process

#include <signal.h>
kill(pid, sig)
int pid, sig;

@ksh
ksh -- The Korn shell

ksh token ...

@KSH_VERSION
KSH_VERSION -- List current version of Korn shell


@.kshrc
.kshrc -- Set personal environment for Korn shell


@ktty.h
ktty.h -- Kernel portion of tty structure

#include <sys/ktty.h>

@l
l -- List directory's contents in long format

l [file ...]

@l.out.h
l.out.h -- Format for COHERENT 286 objects

#include <l.out.h>

@l3tol
l3tol() -- Convert file system block number to long integer

l3tol(lp, l3p, n)
long *lp;
char *l3p;
unsigned n;

@LASTERROR
LASTERROR -- Program that last generated an error

LASTERROR=program name

@.lastlogin
.lastlogin -- Record of last login

$HOME/.lastlogin

@lc
lc -- List directory's contents in columnar format

lc [ -1abcdfp ] [ directory ...]

Options:
     -1        List files one per line instead of in columns
     -a        List all files in directory (including `.' and `..')
     -b        List block-special files only
     -c        List character-special files only
     -d        List directories only
     -f        List regular files only
     -p        List pipe files only

Options can be combined.  If no directory is specified, the current directory
is used.
@lcasep
lcasep -- Convert text to lower case

lcasep [-f inputfile] [-o outputfile]

@ld
ld -- Link relocatable object modules

ld [option ...] file ...

Options:
     -e ent    Set entry point to symbol or octal number
     -f        (Force) Force link even if there are errors
     -i        Bind output sepid
     -G        Suppress the common/global warning
     -K        Rebuilt a new kernel.
     -Ldirectory
               Search directory for libraries and objects before searching the
               directories named in the environmental variable LIBPATH
     -llib     Use standard library lib
     -o file   Write output into file (default, l.out)
     -q        (Quiet) Suppress all warning messages
     -Q        Quiet: Suppress all error messages
     -r        Retain relocation information
     -s        Discard symbol table
     -u sym    Undefine sym (force library search)
     -x        Discard all local symbols
     -X        Discard C internal local symbols
@ldexp
ldexp() -- Combine fraction and exponent

#include <math.h>
double ldexp(f, e)
double f; int e;

@LDHEAD
LDHEAD -- Append options to beginning of ld command line

export LDHEAD=options

@ldiv
ldiv() -- Perform long integer division

#include <stdlib.h>
ldiv_t ldiv(numerator, denominator)
long numerator, denominator;

@LDTAIL
LDTAIL -- Append options to end of ld command line

export LDTAIL=options

@let
let -- Evaluate an expression

let [expression]

ksh only.
@lex
lex -- Lexical analyzer generator

lex [-t][-v][file]
cc lex.yy.c -ll

Options:
     -t        Write to standard output instead of lex.yy.c
     -v        Give statistics about generated tables
@lf
lf -- List directory's contents in columnar format

lf [file ...]

@libc
libc -- Standard C library

/lib/libc.a

@libcurses
libcurses -- Library of screen-handling functions


@libedit
libedit -- Routines to gather and edit user input

/usr/lib/libedit.a

@libm
libm --  mathematics library

/lib/libm.a

@libmisc
libmisc -- Library of miscellaneous functions


@libmp
libmp -- Library for multiple-precision mathematics

/usr/lib/libmp.a

@LIBPATH
LIBPATH -- Directories that hold compiler phases and libraries


@libraries
libraries -- Overview


@libsocket
libsocket -- Library of communications routines


@libterm
libterm -- Functions to read termcap descriptions


@limits.h
limits.h -- Define numerical limits

#include <limits.h>

@lines
lines -- Highly amusing board game

/usr/games/lines

@link
link() -- Create a link

#include <unistd.h>
link(old, new)
char *old, *new;

@listen
listen() -- Listen for a connection on a socket

#include <sys/socket.h>
int listen(socket, backlog)
int socket, int backlog;

@ln
ln -- Create a link to a file

ln [-f] oldfile newfile
ln [-f] oldfile ... directory

Option:
     -f        Force link even if newfile exists
@localtime
localtime() -- Convert system time to calendar structure

#include <time.h>
#include <sys/types.h>
tm *localtime(timep)
time_t *timep;

@lockf
lockf() -- Lock a file or a section of a file

#include <unistd.h>
int
lockf(fd, cmd, size)
int fd, cmd; long size;

@log
log() -- Compute natural logarithm

#include <math.h>
double log(z) double z;

@log10
log10() -- Compute common logarithm

#include <math.h>
double log10(z) double z;

@login
login -- Log in a user

login [-p] [login_id [environ_var[=value] ...] ]

Options:
     -p        Preserve the current environment.
     login_id  The user's login identifier.
     environ_var
               An environment variable to set upon logging in.
@login
login -- Set default values for logging in

/etc/default/login

@loginlog
loginlog -- Log of failed login attempts

/usr/adm/loginlog

@logmsg
logmsg -- Hold  Login Message

/etc/logmsg

@LOGNAME
LOGNAME -- Name user's identifier

LOGNAME=user_identifier

@long
long -- Data type


@longjmp
longjmp() -- Perform a non-local goto

#include <setjmp.h>
int longjmp(env, rval)
jmp_buf env; int rval;

@look
look -- Find matching lines in a sorted file

look [-df] string [file]

Options:
     -d        Dictionary ordering
     -f        Fold cases for comparison

If no file, look uses /usr/dict/words with -df option.
@lp
lp -- Spool a file for printing

lp [-dprinter] [-t title] [-ncopies] [-R page [page]] [-Smws] file ...

Options:
     -R request
               Print a job beginning from the first page and continuing either
               to the second page or to the end of the document (if no second
               page is specified)
     -S        Shut down the spooler daemon lpsched
     -dprinter Print file1 through fileN on printer
     -m        Send mail to the user when the spooled job is printed
     -ncopies  Print copies copies of file1 through fileN
     -s        Silent -- do not acknowlege submissions
     -t title  Give this job title
     -w        Write to the user when the request is printed
@lp
lp -- Driver for parallel ports

/dev/lptN

@lpadmin
lpadmin -- Administer the lp print-spooler system

lpadmin [-dprinter] [-mscript] [-vdevice] [-xprinter]

Options:
     -dprinter Name printer for use with -v option, below
     -Dprinter Make printer the default system printer
     -mscript  Use script to preprocess text to be printed on printer
     -vdevice  Associate device (a serial or parallel port) with the printer
               with -d, above
     -xprinter Remove printer from the system
@lpd
lpd -- Spooler daemon for line printer

/usr/lib/lpd

@lpioctl.h
lpioctl.h -- Definitions for line-printer I/O control

#include <sys/lpioctl.h>

@lpr
lpr -- Spool a job for printing on the line printer

lpr [-cmnr] [-b banner] [file ...]

Options:
     -B        Suppress printing of a banner.  This option must be used with
               PostScript printers.
     -b        Next argument is the banner
     -c        Copy each file in spool area
     -m        Send a message when listing is complete
     -n        No message (default)
     -r        Remove files when they have been spooled
@lpsched
lpsched -- Print jobs spooled with command lp; turn on printer daemon

lpsched

@lpshut
lpshut -- Turn off the printer daemon despooler

lpshut [-d]

Option -d tells lpshut to finish currently printing jobs
@lpskip
lpskip -- Abort/restart current job on line printer

lpskip [-r]

Option:
     -r        Restart current job

With no argument, terminate current job.
@lpstat
lpstat -- Give status of printer or job

lpstat [-pprinter] [-dorqstv]

Options
     -p printer
               Give the status of printer
     -d        Name the system default destination printer
     -o        Status of all printing and pending requests
     -r        Give the status of the daemon lpsched
     -q        Give a detailed report of jobs in the queue
     -s        Summarize status of each request and status of each printer
     -t        Like option -s, but in somewhat more detail
     -v        List all available printers and the devices associated with them
@lr
lr -- List subdirectories' contents in columnar format

lr [file ...]

@ls
ls -- List directory's contents

ls [-abCcdFfgilmnopqRrstux] [file ... ]

Options:
     -a        List all files (including `.' and `..')
     -b        Print non-graphic characters in octal
     -C        Print output in multi-column format, sorted down the columns
     -c        Use attribute change instead of modified time for -l and -t
     -d        Treat directories like files
     -F        Print `/' after directories and `*' after executables
     -f        Treat file as a directory even if it is not
     -i        Print the i-number as well
     -l        Long format: show file type, permissions, size
     -m        Output file names separated by commas
     -n        Same as -l
     -p        Print `/' after directory names
     -q        Print non-graphic characters as `?'
     -R        Recursively display directories
     -r        Reverse the order of all sorting
     -s        Print the file size in blocks as well
     -t        Sort by times, newest first
     -u        Use accessed rather than modified time
     -x        Print multicolumn output, sorted across the columns
@lseek
lseek() -- Set read/write position

#include <unistd.h>
long lseek(fd, where, how)
int fd, how; long where;

@ltol3
ltol3() -- Convert long integer to file system block number

ltol3(l3p, lp, n)
char *l3p;
long *lp;
unsigned n;

@lvalue
lvalue -- Definition


@lx
lx -- List directory's contents in columnar format

lx [file ...]

@m4
m4 -- Macro processor

m4 [file ...]

If file is `-' or omitted, m4 reads the standard input.
@machine.h
machine.h -- Machine-dependent definitions

#include <sys/machine.h>

@macro
macro -- Definition


@madd
madd() -- Add multiple-precision integers

#include <mprec.h>
void madd(a, b, c)
mint *a, *b, *c;

@mail
mail -- Electronic mail system


@mail
mail -- Send or read mail

mail [-mpqrv] [-f file] [user ...]

Options:
     -f file   Print mail from file instead of default
     -m        Notify each logged-in recipient when mail is sent
     -p        Print mail non-interactively
     -q        Exit on interrupt, leaving mail unchanged
     -r        Print mail in reverse order
     -v        Verbose mode: show version and expanded aliases

If user is present, send each a mail message read from standard input.  Mail
message ends with EOF, a line containing only `.', or a line containing only
`?'; the last moves the message into editor for further editing processing
before transmission.
Commands:
     d         Delete current message; print the next
     m [user ...]
               Mail current message to each user
     p         Print this message again
     q         Quit and update mailbox
     r         Reverse direction of scan through mailbox
     s [file ...]
               Save current message with header in each file
     t [user ...]
               Send message from stdin to each user
     w  [file ...]
               Write current message without header in each file
     x         Exit without updating mailbox
     <newline> Print the next message
     -         Print the previous message
     EOF       Quit and update mailbox; same as q command
     ?         Print a command summary
     !command  Pass command to the shell for execution
@main
main() -- Introduce program's main function


@major number
major number -- Device numbering


@make
make -- Program-building discipline

make [option ...] [argument ...] [target ...]

Options:
     -d        Debug mode
     -e        Macro definitions in environment override those in makefile
     -f file   Instructions are in file (default, [mM]akefile)
     -i        Ignore command error returns
     -k        Continue to update other targets that do not depend upon the
               current target if a non-ignored error occurs while executing the
               commands to bring a target up to date
     -n        Test: do all but execute commands
     -p        Print macro definitions and target descriptions
     -q        Only return exit status (zero if files up to date)
     -r        Ignore built-in rules
     -S        Terminate make if an error occurs while executing the commands
               to bring a target up to date
     -s        Do not print command lines when executed
     -t        Update times of files without regenerating
@malloc
malloc() -- Allocate dynamic memory

#include <stdlib.h>
char *malloc(size) unsigned size;

@malloc.h
malloc.h -- Definitions for memory-allocation functions

#include <sys/malloc.h>

@man
man -- Manual macro package

nroff -man file ...

.HS     Help start.
.I      Italic font.
.IB     Italic/bold alternating fonts.
.IP     Indented paragraph.
.IR     Italic/Roman alternating fonts.
.LP     Paragraph, flush left.
.PD     Paragraph distance.
.PP     Paragraph, indented.
.RB     Roman/bold alternating fonts.
.RE     Relative indent end.
.RI     Roman/italic alternating fonts.
.RS     Relative indent start.
.SH     Subheader.
.SM     Smaller size.
.TH     Define header.
.TH     Define header.
.TP     Tagged paragraph.
.TP     Tagged paragraph.
Files
Files /usr/lib/tmac.an -- Macro package /usr/lib/tmac.an -- Macro package
See Also
See Also ms, ms, nroff, nroff, troff, troff, Using COHERENT Using COHERENT
nroff, The Text Processing Language, tutorial nroff, The Text Processing
Language, tutorial
@man
man -- Print Lexicon entries

man [-w] [topic ...]

Options:
     -w        Print only file name where document resides

With no arguments, list available topics.
@manifest constant
manifest constant -- Overview


@math.h
math.h -- Declare mathematics functions

#include <math.h>

@MB_CUR_MAX
MB_CUR_MAX -- Largest size of a multibyte character in current locale

#include <stdlib.h>

@mboot
mboot -- Master boot block for hard disk


@mcmp
mcmp() -- Compare multiple-precision integers

#include <mprec.h>
int mcmp(a, b)
mint *a, *b;

@mcopy
mcopy() -- Copy a multiple-precision integer

#include <mprec.h>
void mcopy(a, b)
mint *a, *b;

@mdevice
mdevice -- Describe drivers that can be linked into kernel

/etc/conf/mdevice

@mdiv
mdiv() -- Divide multiple-precision integers

#include <mprec.h>
void mdiv(a, b, q, r)
mint *a, *b, *q, *r;

@me
me --  screen editor

me [-e errorfile] [-f bindfile] [textfile ...]

Options:
     -e errorfile
               Error-handling mode; read error messages from errorfile
     -f bindfile
               Read keyboard bindings from bindfile
@mem
mem -- Physical memory file


@memccpy
memccpy() -- Copy a region of memory up to a set character

#include <string.h>
char *memccpy(dest, src, c, n)
char *dest, *src; unsigned int c, n;

@memchr
memchr() -- Search a region of memory for a character

#include <string.h>
char *memchr(region, character, n)
char *region; int character; unsigned int n;

@memcmp
memcmp() -- Compare two regions

#include <string.h>
int memcmp(region1, region2, count)
char *region1; char *region2; unsigned int count;

@memcpy
memcpy() -- Copy one region of memory into another

#include <string.h>
char *memcpy(region1, region2, n)
vaddr_t region1;
vaddr_t region2;
unsigned int n;

@memmove
memmove() -- Copy region of memory into area it overlaps

#include <string.h>
char *memmove(region1, region2, count)
char *region1, char *region2, unsigned int count;

@memok
memok() -- Test if the arena is corrupted

int
memok();

@memset
memset() -- Fill an area with a character

#include <string.h>
char *memset(buffer, character, n)
char *buffer; int character; unsigned int n;

@mesg
mesg -- Permit/deny messages from other users

mesg [ny]

Options:
     n         Disallow messages
     y         Allow messages

With no arguments, mesg prints the state.
@min
min() -- Read multiple-precision integer from stdin

#include <mprec.h>
void min(a)
mint *a;

@minit
minit() -- Condition global or auto multiple-precision integer

#include <mprec.h>
void minit(a)
mint *a;

@minor number
minor number -- Device numbering


@mintfr
mintfr() -- Free a multiple-precision integer

#include <mprec.h>
void mintfr(a)
mint *a;

@mitom
mitom() -- Reinitialize a multiple-precision integer

#include <mprec.h>
void mitom(n, a)
mint *a; int n;

@mkbt3.5
mkbt3.5 -- Make a bootable 3.5-inch floppy disk

mkbt3.5

@mkbt5.25
mkbt5.25 -- Make a bootable 5.25-inch floppy disk

mkbt5.25

@mkdir
mkdir -- Create a directory

mkdir [ -rp ] directory

Option:
     -r        Make parent directories recursively as required
     -p        Same as -r; included for reasons of compatibility
@mkdir
mkdir() -- Create a directory

#include <sys/types.h>
#include <sys/stat.h>
int mkdir(path, mode)
char *path;
int mode;

@mkfifo
mkfifo() -- Create a FIFO

#include <sys/types.h>
#include <unistd.h>
int mkfifo(path, mode)
const char *path; mode_t mode;

@mkfnames
mkfnames -- Generate data base of user names

mkfnames [namefile  ...]

@mkfs
mkfs -- Make a new file system

/etc/mkfs [-b boot] [-d] [-f name] [-i inodes] [-m arg] [-n arg] [-p pack] filesystem proto

Options:
     -b boot   Specifies the file to use as the ``bootstrap'' for the file
               system.
     -d        Preserve file dates and times.
     -f name   Label the file system with the given name.  name must be less
               than seven characters in length.
     -i inodes Use inodes as the number of i-nodes for the file system.
     -m arg    Number of blocks to skip when incrementing virtual block number
     -n arg    Size of a ``virtual cylinder''
     -p pack   Set the file system ``pack name'' to pack.  pack must be less
               than seven characters in length.

If proto is a number, it is the size in blocks of an empty file system;
otherwise, it names a prototype description file, as created by the command
badscan.
@mklost+found
mklost+found -- Make an enlarged lost+found directory

/etc/mklost+found directory [slots]

@mknod
mknod -- Make a special file or named pipe

/etc/mknod [ -f ] filename type major minor
/etc/mknod [ -f ] filename p

Option
     -f        Forces creation of a new node, even if one of same name already
               exists

In first form of the command, type is `b' for block special or `c' for
character special; major and minor are numbers.  The second form creates a
named pipe with the given filename.
@mknod
mknod() -- Create a special file

#include <sys/ino.h>
#include <sys/stat.h>
mknod(name, mode, addr)
char *name; int mode, addr;

@mktemp
mktemp() -- Generate a temporary file name

char *mktemp(pattern) char *pattern;

@mktime
mktime() -- Turn broken-down time into calendar time

#include <time.h>
time_t mktime(timeptr)
struct tm *timeptr;

@MLP_COPIES
MLP_COPIES -- Set default number of copies to print


@MLP_FORMLEN
MLP_FORMLEN -- Set default page length


@MLP_LIFE
MLP_LIFE -- Set default life for print jobs


@MLP_PRIORITY
MLP_PRIORITY -- Set default priority for print spooling


@MLP_SPOOL
MLP_SPOOL -- Pass user-specific information to print spooler


@mmu.h
mmu.h -- Definitions for memory-management unit

#include <sys/mmu.h>

@mneg
mneg() -- Negate multiple-precision integer

#include <mprec.h>
void mneg(a, b)
mint *a, *b;

@mnttab
mnttab -- Mount table

/etc/mnttab

@mnttab.h
mnttab.h -- Structure for mount table

#include <mnttab.h>

@modem
modem -- Technical Information


@modf
modf() -- Separate integral part and fraction

#include <math.h>
double modf(real, ip)
double real, *ip;

@modulus
modulus -- Definition


@mon.h
mon.h -- Read profile output files

#include <mon.h>

@moo
moo -- Greatly amusing numeric guessing game

/usr/games/moo [ numdigits ]

@more
more -- Display text one page at a time

more [ -cdflsu ] [ -window_size ] [ +line_number ] [ +/pattern ] [ file ... ] [ - ]

Options:
     -         Read/display stdin
     -c        Paint screen from top down
     -d        Prompt user to quit after each screenful of text
     -f        Count lines from file rather than screen-display lines
     -l        Do not treat <ctrl-L> as special
     -s        Squeeze consecutive blank lines into one
     -u        Display backspaces as control characters
     +line_number
               Begin display at line_number
     +/pattern Begin display at first line to contain pattern
@motd
motd -- File that holds message of the day

/etc/motd

@mount
mount() -- Mount a file system

#include <sys/mount.h>
#include <sys/filsys.h>
int mount (device, name, flag)
char *device, *name; int flag;

@mount.all
mount.all -- Mount file systems at boot time

/etc/mount.all

@mount
mount -- Mount a file system

/etc/mount [ device directory [ -ru ] ]

Options:
     -r        Mount device read-only
     -u        Update /etc/mtab entry but do not mount device

With no arguments, print devices currently mounted.  device names a device-
special file; directory names the directory on which to mount it.  File
/bin/mount contains useful abbreviations for invoking /etc/mount.
@mount.h
mount.h -- Define the mount table

#include <sys/mount.h>

@mout
mout() -- Write multiple-precision integer to stdout

#include <mprec.h>
void mout(a)
mint *a;

@mprec.h
mprec.h -- Multiple-precision arithmetic

#include <mprec.h>

@ms
ms -- Manuscript macro package

nroff -ms file ...

@MS-DOS
MS-DOS -- That other operating system


@msg
msg -- Kernel module for messages


@msg
msg -- Send a brief message to other users

msg user
message

@msg.h
msg.h -- Definitions for message facility

#include <sys/msg.h>

@msgctl
msgctl() -- Message control operations

#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/msg.h>
int msgctl(id, command, buffer)
int id; int command; struct msqid_ds *buffer;

@msgget
msgget() -- Create or get a message queue

#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/msg.h>
msgget(key, flag)
key_t key; int flag;

@msgrcv
msgrcv() -- Receive a message

#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/msg.h>
msgrcv(id, buffer, size, type, flag)
int id, size, flag; long *buffer; long type;

@msgs
msgs -- Read messages intended for all  users

msgs [-q] [number]

Options:
     -q        Query if new message is waiting to be read
     number    Print message titled with given number

To submit a message to msgs, mail it to user msgs.
@msgsnd
msgsnd() -- Send a message

#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/msg.h>
msgsnd(id, buffer, size, flag)
int id, size, flag; long *buffer;

@msig.h
msig.h -- Machine-dependent signals

#include <signal.h>

@msqrt
msqrt() -- Compute square root of multiple-precision integer

#include <mprec.h>
void msqrt(a, b, r)
mint *a, *b, *r;

@msub
msub() -- Subtract multiple-precision integers

#include <mprec.h>
void msub(a, b, c)
mint *a, *b, *c;

@mtab.h
mtab.h -- Currently mounted file systems

#include <mtab.h>

@mtioctl.h
mtioctl.h -- Magnetic-tape I/O control

#include <sys/mtioctl.h>

@mtoi
mtoi() -- Convert multiple-precision integer to integer

#include <mprec.h>
int mtoi(a)
mint *a;

@mtos
mtos() -- Convert multiple-precision integer to string

#include <mprec.h>
char *mtos(a) mint *a;

@mtune
mtune -- Define tunable kernel variables

/etc/conf/mtune

@mtype
mtype() -- Return symbolic machine type

#include <mtype.h>
char *mtype(type)
int type;

@mtype.h
mtype.h -- List processor code numbers

#include <mtype.h>

@mult
mult() -- Multiply multiple-precision integers

#include <mprec.h>
void mult(a, b, c)
mint *a, *b, *c;

@mv
mv -- Rename files or directories

mv [-f] oldfile [newfile]
mv [-f] file ... directory

Option:
     -f        Force: remove newfile even if unwritable
@mvdir
mvdir -- Rename a directory

/etc/mvdir olddir newdir

@mvfree
mvfree() -- Free multiple-precision integer

#include <mprec.h>
void mvfree(a)
mint *a;

@mwcbbs
mwcbbs -- Download files from the Mark Williams bulletin board

mwcbbs [-cp] [-dpath] directory

Options:
     -c        Force uucp to telephone the Mark Williams bulletin board
               immediately
     -dpath    Use path in place of the default receive path
     -p        Print the Contents file
@n.out.h
n.out.h -- Define n.out file structure

#include <n.out.h>

@named pipe
named pipe -- Definition


@name space
name space -- C name-space rules


@nap
nap() -- Sleep briefly

long nap(interval)
long interval;

@ncheck
ncheck -- Print file names corresponding to i-node

ncheck [ -i number ... ] [ -as ] filesystem ...

Options:
     -a        Print file names including `.' and `..'
     -i n...   Print file names only for listed i-numbers n...
     -s        Print only special files and files with setuid mode
@netdb.h
netdb.h -- Define structures used to describe networks

#include <netdb.h>

@newgrp
newgrp -- Change to a new group

newgrp group

@newusr
newusr -- Add new user to  system

/etc/newusr login "User Name" parentdir [ shell ]

@nkb
nkb -- Configurable device driver for console keyboard


@nm
nm -- Print a program's symbol table

nm [ -adgnopru ] file ...

Options:
     -a        Print all symbols
     -d        Print only definitions
     -g        Print only global symbols
     -n        Sort numerically (default, sort by name)
     -o        Prepend file or member name to each line
     -p        Print in symbol table order (no sort)
     -r        Reverse order of sort
     -u        Print undefined symbols

file may be an object file or an archive.
@nohup
nohup -- Run a command immune to hangups and quits

nohup command [arguments]

@nologin
nologin -- Lock out logins

/etc/nologin

@notmem
notmem() -- Check whether memory is allocated

int notmem(ptr);
char *ptr;

@nptx
nptx -- Generate permutations of users' full names

nptx

@nroff
nroff -- Text-formatting language

nroff [option ...] [file ...]

Options:
     -d        Debug: print each request before executing
     -f name   Write temporary file in file name
     -i        Read stdin after each file has been read
     -k        Keep temporary file
     -mname    Read macro package /usr/lib/tmac.name
     -nN       Number first page of output N (default, 1)
     -raN      Set number register a to value N
     -rabN     Set number register ab to value N; for obvious reasons, ab
               cannot contain a digit
     -x        Do not eject to bottom of final page
@NUL
NUL -- Definition


@NULL
NULL -- Manifest Constant


@null
null -- The bit bucket


@nybble
nybble -- Definition


@object format
object format -- Definition


@od
od -- Print an octal dump of a file

od [-bcdox] [file] [ [+] offset[.][b] ]

Options:
     -b        Dump bytes in the default base
     -c        Dump bytes as ASCII characters
     -d        Dump words in decimal
     -o        Dump words in octal
     -x        Dump words in hexadecimal

Default base is octal on the PDP-11; hexadecimal on the i80286, Z-8001, and
M68000.  offset must be preceded by `+' if file is omitted.  offset is decimal
if `.' is present; `b' implies 512-byte blocks instead of bytes.
@open
open() -- Open a file

#include <fcntl.h>
int open(file, type[, mode])
char *file; int type; [int mode;]

@opendir
opendir() -- Open a directory stream

#include <sys/types.h>
#include <dirent.h>
DIR *opendir (dirname)
char *dirname;

@operator
operator -- Definition


@PAGER
PAGER -- Specify Output Filter

PAGER=command options

@param.h
param.h -- Define machine-specific parameters

#include <sys/param.h>

@passwd
passwd -- Set/change login password

passwd [user]

@passwd
passwd -- Define system users


@paste
paste -- Merge lines of files

paste [-s] [-d list] file ...

Options:
     -s        Display lines of input files sequentially across page
     -d list   Use list as delimiters for output fields
@patch
patch -- Patch a variable or flag within the kernel

/conf/patch [-k] image symbol=value ...

Options:
     -k        Patch the kernel's data memory of the running system via device
               /dev/kmem
     -K        Patch /dev/kmem only
     -p        ``Peek'' -- display current values
     -v        Verbose output -- display values before and after patching
@path
path() -- Path name for a file

#include <path.h>
#include <stdio.h>
char *path(path, filename, mode);
char *path, *filename;
int mode;

@PATH
PATH -- Directories that hold executable files


@path.h
path.h -- Define/declare constants and functions used with PATH

#include <path.h>

@pathconf
pathconf() -- Get a file variable by path name

#include <unistd.h>
long pathconf(path, name)
const char *path; int name;

@paths
paths -- Routing data base for mail

/usr/lib/mail/paths

@pattern
pattern -- Definition


@pause
pause() -- Wait for signal

#include <unistd.h>
int pause()

@pclfont
pclfont -- Prepare a PCL font for downloading via MLP

pclfont [-f n] font [... font] > outputfile

@pclose
pclose() -- Close a pipe

#include <stdio.h>
int pclose(fp)
FILE *fp;

@perror
perror() -- System call error messages

#include <errno.h>
perror(string)
char *string; extern int sys_nerr; extern char *sys_errlist[];

@phone
phone -- Print numbers and addresses from phone directory

phone person ...

@pipe
pipe -- Definition


@pipe
pipe() -- Open a pipe

#include <unistd.h>
int pipe(fd)
int fd[2];

@pnmatch
pnmatch() -- Match string pattern

int pnmatch(string, pattern, flag)
char *string, *pattern; int flag;

@pointer
pointer -- C Language


@poll
poll() -- Query several I/O devices

#include <poll.h>
int poll(fds, nfds, timeout)
struct pollfd fds[]; unsigned long nfds; int timeout;

@poll.h
poll.h -- Define structures/constants used with polling devices

#include <poll.h>

@popd
popd -- Pop an item from the directory stack

popd [item ... ]

sh only.
@popen
popen() -- Open a pipe

#include <stdio.h>
FILE *popen(command, how)
char *command, *how;

@port
port -- File that links serial ports with dialers

/usr/lib/uucp/port

@portability
portability -- Definition


@POSIX Standard
POSIX Standard -- Definition


@pow
pow() -- Raise multiple-precision integer to power

#include <mprec.h>
void pow(a, b, m, c)
mint *a, *b, *m, *c;

@pow
pow() -- Compute a power of a number

#include <math.h>
double pow(z, x)
double z, x;

@pr
pr -- Paginate and print files

pr [ options ] [ file ...]

Options:
     +skip     Skip the first skip pages of input before printing
     -cols     Print the input in cols columns
     -h        The next argument is the header (replaces file name)
     -ln       Set page size to n lines (default, 66)
     -m        Print each input file in a separate column
     -n        Number the output lines
     -sc       Separate each column with character c
     -t        Suppress top and bottom margins and header
     -wn       Page width is set to n columns (default, 80)

A file named `-' means stdin.
@prep
prep -- Produce a word list

prep [ -dfp ] [ -i ifile ] [ -o ofile ] [ file ... ]

Options:
     -d        Print number of each word output
     -f        Fold upper case to lower case
     -i file   Ignore all words in file on output
     -o file   Output only words from file
     -p        Print punctuation marks on separate lines (not numbered)

Text is taken from each input file or stdin if none.  Words consist of
alphabetic characters and apostrophes.
@print
print -- Echo text onto the standard output

print [-enrun] [argument ...]

Options:
     -e        Re-enable expansion of C escape sequences
     -n        Don't print newline after list of arguments
     -r        Suppress expansion of C escape sequences
     -un       Redirect output file descriptor n

ksh only.
@printer
printer -- How to attach and run a printer


@printf
printf() -- Print formatted text

#include <stdio.h>
int printf(format [,arg1, .... argN])
char *format; [data type] arg1, ... argN;

@proc.h
proc.h -- Define structures/constants used with processes

#include <sys/proc.h>

@process
process -- Definition


@prof
prof -- Print execution profile of a C program

prof [ -abcs ][ progfile [ monfile ] ]

Options:
     -a        Use all symbols, not just externals
     -b        Print all bin information
     -c        Print all call information
     -s        Report stack usage high water mark

The default progfile is l.out; the default monfile, mon.out.
@profile
profile -- Set default environment at login

/etc/profile

@.profile
.profile -- Execute commands at login

$HOME/.profile

@Programming COHERENT
Programming COHERENT -- Overview


@prps
prps -- Prepare files for PostScript-compatible printer

prps [options] [file ... ]

Options:
     -ptsize   Use ptsize as the point size (default, 10)
     -b        Suppress the box around the page text
     -ffont    Use the given font name (default, Courier)
     -FX       Use font X, which must be [ABHNPST]
     -Fsfx     Use sfx as suffix for font X, which must be [RBI].  Default
               suffixes are "" (R), -Bold (B), -Oblique (I)
     -h        Suppress the header line
     -l        Landscape mode (default, portrait)
     -l2       Landscape mode, two pages per output page
     -nhead    Use head in header line
     -pN       Print N lines of text per output page
     -tN       Set tab stops to every N characters (default, 8)
     +N        Skip first N output pages
@ps
ps -- Print process status

ps [-][adefglmnrtwx] [-c sys] [mem] [-ppid,pid,...,pid]

Options:
     -a        Print all terminals' processes
     -c sys    This option does nothing; it is included to preserve the
               integrity of some shell scripts
     -d        Print status of loadable drivers
     -e        Same as -a; included for compatibility
     -f        Put `-' in null fields for placeholders
     -g        Give group leader for this process
     -k mem    Next argument is memory image (default, /dev/mem)
     -l        Print long format
     -m        This option does nothing; it is included to preserve the
               integrity of some shell scripts
     -n        No header line
     -ppid,pid,...,pid
               Print information for each pid in the list
     -r        Give the real size of the process
     -t        Print CPU times
     -w        Wide column format (132 columns instead of default 80)
     -x        Print processes with no controlling tty
@ps
ps -- Driver to return information about processes

/dev/ps

@PS1
PS1 -- User's default prompt

PS1=prompt

@PS2
PS2 -- Prompt when user continues command onto additional lines

PS2=prompt

@PSfont
PSfont -- Cook an Adobe font into PostScript format

PSfont [-qs] [ infile.pfb [ outfile ] ]

Options:
     -q        Quiet: Suppress warning messages
     -s        Suppress serverdict header line; to be used when cooking a font
               to be included within troff output
@ptrace
ptrace() -- Trace process execution

#include <signal.h>
int ptrace(command, pid, location, value)
int command, pid, *location, value;

@ptrace.h
ptrace.h -- Perform process tracing

#include <sys/ptrace.h>

@pty
pty -- Device driver for pseudoterminals


@pushd
pushd -- Push an item onto the directory stack

pushd [directory0 ... directoryN]

sh only.
@putc
putc() -- Write character into stream

#include <stdio.h>
int putc(c, fp) char c; FILE *fp;

@putchar
putchar() -- Write a character onto the standard output

#include <stdio.h>
int putchar(c)
char c;

@putenv
putenv() -- Add a string to the environment

#include <stdlib.h>
int putenv (envstring)
char *envstring;

@putmsg
putmsg() -- Place a message onto a stream

#include <stropts.h>
int putmsg (fd, ctlptr, dataptr, flags)
int fd, flags; const struct strbuf *ctlptr, *dataptr;

@putp
putp() -- Write a string into the standard window

#include <curses.h>
putp(string)
char *string;

@puts
puts() -- Write string onto standard output

#include <stdio.h>
int puts(string)
char *string

@putw
putw() -- Write word into stream

#include <stdio.h>
int putw(word, fp)
int word; FILE *fp;

@pwd
pwd -- Print the name of the current directory

pwd

@pwd.h
pwd.h -- Define password structure

#include <pwd.h>

@qfind
qfind -- Quickly find all files with a given name

qfind [-adpv] name ...
qfind [-bv] [-sdirectory]

Options:
     -a        All: search for files or directories
     -b        Build file data base
     -d        Search for directories only
     -p        Partial name matching
     -sdirectory
               Suppress the reading of directory and its children when building
               the data base
     -v        Give verbose output

Run as root when using -b to find everything.
@qpac
qpac -- Map the file system

qpac raw_device

@qsort
qsort() -- Sort arrays in memory

#include <stdlib.h>
void qsort(data, n, size, comp)
char *data; int n, size; int (*comp)();

@quot
quot -- Summarize file-system usage

quot [ -c ] [ -f ] [ -n ] [ -t ] filesystem

Options:
     -c        Print file size, number of files of size, and cumulative total
               blocks up to size
     -f        Print number of files plus number of blocks per user
     -n        Input (i-number, file system) pairs one per line; output owners
               and file names (e.g.: ncheck fs | sort +0n | quot -n fs)
     -t        Print totals (where applicable)

Options -c and -n are disjoint from other options.  Only the superuser root can
run quot.
@raise
raise() -- Let a process send a signal to itself

#include <signal.h>
int raise(signal)
int signal;

@ram
ram -- Driver for manipulating RAM


@ramdisk
ramdisk -- Script to create a RAM-disk

/usr/bin/ramdisk

@rand
rand() -- Generate pseudo-random numbers

#include <stdlib.h>
int rand()

@RAND_MAX
RAND_MAX -- Largest size of a pseudo-random number

#include <stdlib.h>

@random access
random access -- Definition


@ranlib
ranlib -- Create index for object library

ranlib library ...

@rc
rc -- Perform standard maintenance chores

/etc/rc

@read
read -- Assign values to shell variables

read name ...

Reads a line from stdin and assign each token to corresponding shell variable
name.  The shell executes read directly.
@read
read() -- Read from a file

#include <unistd.h>
int read(fd, buffer, n)
int fd; char *buffer; int n;

@readdir
readdir() -- Read a directory stream

#include <sys/types.h>
#include <dirent.h>
struct dirent *readdir(dirp)
DIR *dirp;

@readline
readline() -- Read and edit a line of input

char *readline(prompt)
char *prompt;

@readonly
readonly -- Mark a shell variable as read only

readonly

@readonly
readonly -- Storage class


@read-only memory
read-only memory -- Definition


@realloc
realloc() -- Reallocate dynamic memory

#include <stdlib.h>
char *realloc(ptr, size)
char *ptr; unsigned size;

@reboot
reboot -- Reboot the  system

/etc/reboot [ -p ]

Option:
     -p        Prompt user if she really wishes to reboot
@ref
ref -- Display a C function header

ref function

@register
register -- Storage class


@register variable
register variable -- Definition


@remove
remove() -- Remove a file

#include <stdio.h>
int
remove(filename)
const char *filename;

@rename
rename() -- Rename a file

#include <stdio.h>
int rename(old; new)
char *old, *new;

@reprint
reprint -- Reprint a spooled print job

reprint job [page [page]]

@resetterm
resetterm() -- Reset the terminal to its previous settings

#include <curses.h>
resetterm()

@restor
restor -- Restore file system

restor command [dump_device] [filesystem] [file ...]

Options:
     f         Next argument names the dump device
     r         Mass restore (also R)
     t         Print taken and since dates of the dump
     v         Verbose (print commentary during mass restore)
     x         Selective extract of argument files (also `X')
@return
return -- Return a value and control to calling function


@rev
rev -- Print text backwards

rev [file ...]

@rewind
rewind() -- Reset file pointer

#include <stdio.h>
void rewind(fp)
FILE *fp;

@rewinddir
rewinddir() -- Rewind a directory stream

#include <dirent.h>
void rewinddir(dirp)
DIR *dirp;

@rindex
rindex() -- Find rightmost occurrence of a character in a string

#include <string.h>
char *rindex(string, c) char *string; char c;

@rm
rm -- Remove files

rm [ -firtv ] file ...

Options:
     -f        Force: remove unwritable files, suppress error messages and
               prompts
     -i        Ask before removing each file
     -r        Recursively remove entire directory structure
     -t        Test: perform all checks but do not remove files
     -v        Verbose: report the disposition of each file
@rmail
rmail -- Receive  mail

rmail [-LlRr] -q num -u uuxflags address ...

Options:
     -L        Send all addresses to the local mailer for processing
     -l        Send a domain address to the local mailer for processing
     -q num    Reset the queueing threshold to num
     -R        Reroute  paths
     -r        Route the first component of a  path in addition to routing
               domain addresses
     -u uuxflags
               Pass uuxflags to uux
@rmdir
rmdir -- Remove directories

rmdir [ -f ] directory ...

Option:
     -f        Force: remove a file without interactive checking
@rmdir
rmdir() -- Remove a directory

#include <unistd.h>
int rmdir(path)
char *path;

@root
root -- Definition


@route
route -- Show or reset a user's default printer

route [printer]

@rpow
rpow() -- Raise multiple-precision integer to power

#include <mprec.h>
void rpow(a, b, c)
mint *a, *b, *c;

@RS-232
RS-232 -- Serial port wiring


@rubik
rubik -- Play Rubik's cube

/usr/games/rubik

@rvalue
rvalue -- Definition


@sa
sa -- Print a summary of process accounting

sa [-abcjlmnrstu] [-v N] [file]

Options:
     -a        Commands seen once or unprintable called ***other
     -b        Sort by average CPU time per call
     -c        Print CPU time as percentage of all CPU time used
     -j        Print average times per call, not totals
     -l        Separate user and system times
     -m        Information per user, not per command
     -n        Sort by number of calls
     -r        Reverse sort
     -s        Condense the information
     -t        Print CPU time as percentage of real time
     -u        Print user and command directly from raw file
     -vN       If called no more than N times, put it into **junk**

The default file is /usr/adm/acct.
@sbrk
sbrk() -- Increase a program's data space

#include <unistd.h>
char *sbrk(increment) unsigned int increment;

@scanf
scanf() -- Accept and format input

#include <stdio.h>
int scanf(format, arg1, ... argN)
char *format; [data type] *arg1, ... *argN;

@scat
scat -- Print text files one screenful at a time

scat [ [option ...] [file ... ] ] ...

Options:
     -1        Do not stop at EOF if exactly one file specified
     -bn       Begin output at line n
     -c        Mark control characters (overrides -t)
     -cs       Like -c, but map space to underscore `_', and prefix underscore
               with `\'
     -ct       Like -c, but map tabs to spaces
     -in       Skip n columns on output
     -ln       Set screen length to n lines
     -n        Number input lines
     -r        Remote; no paging
     -s        Squash empty lines
     -Sn       Seek n bytes into input before processing
     -t        Truncate lines to line length (default, wraparound)
     -wn       Set screen width to n columns
     -x        Expand tabs
Commands:
     <return>  Next page
     <space>   Next line
     /         Next half page
     f         Print file names and line number
     n         Next file
     q         Quit
@sched.h
sched.h -- Define constants used with scheduling

#include <sys/sched.h>

@script
script -- Capture a terminal session into a file

script [-l logfile] [command]

Options:
     -l        Name logfile as the output file
@sdevice
sdevice -- Configure drivers included within kernel

/etc/conf/sdevice

@sdiv
sdiv() -- Divide multiple-precision integers

#include <mprec.h>
void sdiv(a, n, q, ip)
mint *a, *q; int n, *ip;

@SECONDS
SECONDS -- Number of seconds since current shell started


@security
security -- System Administration


@sed
sed -- Stream editor

sed [ -n ] [-e command] [-f script] ... file ...

Options:
     -e        Direct command follows
     -f        File name of command script follows
     -n        No implicit output
@seekdir
seekdir() -- Reset the position within a directory stream

void seekdir (dirp, loc)
DIR *dirp;
off_t loc;

@seg.h
seg.h -- Definitions used with segmentation

#include <seg.h>

@select
select() -- Synchronous I/O multiplexing

#include <unistd.h>
#include <sys/types.h>
#include <sys/time.h>
int select(nfds, readfds, writefds, exceptfds, timeout)
int nfds; fd_set *readfds, *writefds, *exceptfds; struct timeval *timeout;

@sem
sem -- Kernel module for semaphores


@sem.h
sem.h -- Definitions used by semaphore facility

#include <sys/sem.h>

@semctl
semctl() -- Control semaphore operations

#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/sem.h>
int semctl(id, number, command, arg)
int id, command, number;
union semun {
        int value;
        struct semid_ds *buffer;
        unsigned short array[];
} arg;

@semget
semget() -- Create or get a set of semaphores

#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/sem.h>
semget(semkey, number, flag)
key_t semkey; int number, flag;

@semop
semop() -- Perform semaphore operations

#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/sem.h>
int semop(id, operation, nops)
int id, nops; struct sembuf operation[];

@serialno
serialno -- Hold the serial number of your system

/etc/serialno

@set
set -- Set shell option flags and positional parameters

set [-ceiknstuvx [name ...] ] (Bourne shell)
set [[+-]aefhkmnuvx] [[+-]o name] (Korn shell)

Options:
     -a        Automatically export all new variables (ksh)
     -c string Read commands from string (sh)
     -e        Exit on any error
     -f        Noglob:  Don't expand file names (ksh)
     -h        Automatically add all commands to hash table (ksh)
     -i        Shell is always interactive (sh)
     -k        Place all keyword arguments into environment (sh)
     -k        Recognize variables anywhere in command (ksh)
     -m        Enable job control (ksh)
     -n        Read commands but do not execute
     -o option Set option (ksh)
     -s        Read commands from stdin; write to stderr (sh)
     -t        Read one command rather than entire file (sh)
     -u        If variable is blank, report error
     -v        Print each line as it is read
     -x        Print each command as it's executed
     -         Cancel -v and -x options (sh)

With ksh, prefixing an option with `+' turns it on; prefixing it with `-' turns
it off.
@setbuf
setbuf() -- Set alternative stream buffer

#include <stdio.h>
void setbuf(fp, buffer)
FILE *fp; char *buffer;

@setgid
setgid() -- Set group id and user id

#include <unistd.h>
int setgid(id) int id;

@setgrent
setgrent() -- Rewind group file

#include <grp.h>
void setgrent();

@setgroups
setgroups() -- Set the supplemental group-access list

#include <unistd.h>
int setgroups(ngroups, grouplist)
int ngroups; const gid_t *grouplist;

@setjmp
setjmp() -- Save machine state for non-local goto

#include <setjmp.h>
int setjmp(env) jmp_buf env;

@setjmp.h
setjmp.h -- Define setjmp() and longjmp()

#include <setjmp.h>

@setnetent
setnetent() -- Open a networks file


@setpgid
setpgid() -- Set the process-group identifier

#include <sys/types.h>
#include <unistd.h>
int setpgid(pid, pgid)
pid_t pid, pgid;

@setpgrp
setpgrp() -- Make a process a process-group leader

int setpgrp()

@setprotoent
setprotoent() -- Open the protocols file


@setpwent
setpwent() -- Rewind password file

#include <pwd.h>
setpwent()

@setservent
setservent() -- Open the services file


@setsid
setsid() -- Set session identifier

#include <sys/types.h>
#include <unistd.h>
pid_t setsid ();

@setsockopt
setsockopt() -- Set an option on a socket

#include <sys/types.h>
#include <sys/socket.h>
int setsockopt(socket, level, optname, optval, optlen)
int socket, level, optname, optlen; const void *optval;

@setuid
setuid() -- Set user identifier

#include <unistd.h>
int setuid(id)
int id;

@setupterm
setupterm() -- Initialize a terminal

#include <curses.h>
setupterm(term,fd,errret)
char *term;
int fd, *errret;

@setvbuf
setvbuf() -- Set alternative file-stream buffer

#include <stdio.h>
int setvbuf(fp, buffer, mode, size)
FILE *fp; char *buffer; int mode; size_t size;

@sgtty
sgtty -- General terminal interface


@sgtty.h
sgtty.h -- Definitions used to control terminal I/O

#include <sgtty.h>

@sh
sh -- The Bourne shell

sh [-ceiknstuvx] token ...

Options:
     -c cmds   Read commands from cmds
     -e        Exit on any error if noninteractive
     -i        Interactive even if no tty attached
     -k        Place all keyword args into global environment
     -n        Read commands but do not execute them
     -s        Read commands from stdin, write output to stderr
     -t        Read and execute one command only
     -u        Report error if actual value of shell variable is null
     -v        Print each line as read
     -x        Print each command and argument as executed
     -         Cancel -v and -x options

The following reserved tokens may not be used in the first position of the
command unless quoted:

        case do done elif else fi for in then until while { } ( )

If the first token is not reserved, it is treated as the name of a command.
The remaining tokens are treated as arguments.  The characters * ? [ ] specify
patterns that match file names.  To quote characters or strings, these escape
characters are provided:

        '...' "..." \

Each token, unless quoted, is checked for substitutions.
@shadow
shadow -- File that holds restricted passwords

/etc/shadow

@SHELL
SHELL -- Name the default shell

SHELL=shell

@shellsort
shellsort() -- Sort arrays in memory

void shellsort(data, n, size, comp)
char *data; int n, size; int (*comp)();

@shift
shift -- Shift positional parameters

shift

The shell executes shift directly.
@shm
shm -- Kernel module for shared memory


@shm.h
shm.h -- Definitions used with shared memory

#include <sys/shm.h>

@shmat
shmat() -- Attach a shared-memory segment to a process

#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/shm.h>
char *shmat (shmid, shmaddr, shmflg)
int shmid, shmflag; char *shmaddr;

@shmctl
shmctl() -- Manipulate shared memory

#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/shm.h>
shmctl(shmid, command, buf)
int shmid, command; struct shmid_ds *buf;

@shmdt
shmdt() -- Detach a shared-memory segment from a process

#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/shm.h>
char *shmdt (shmaddr)
char *shmaddr;

@shmget
shmget() -- Create or get shared-memory segment

#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/shm.h>
int shmget(memkey, size, flag)
key_t memkey; int size, flag;

@short
short -- Data type


@shutdown
shutdown -- Shut down the  system

/etc/shutdown [ boot | halt | single | powerfail ] time

@sigaction
sigaction() -- Perform detailed signal management

#include <signal.h>
int sigaction (signal, action, old_action)
int signal; const struct sigaction *action; struct sigaction *old_action;

@sighold
sighold() -- Place a signal on hold

#include <signal.h>
int sighold (sigtype)
int sigtype;

@sigignore
sigignore() -- Tell the system to ignore a signal

#include <signal.h>
int sigignore (sigtype)
int sigtype;

@siglongjmp
siglongjmp() -- Perform a non-local goto and restore signal mask

#include <setjmp.h>
void siglongjmp(environ, value)
sigjmp_buf environ; int val;

@signal
signal() -- Specify action to take upon receipt of a given signal

#include <signal.h>
int (*signal(sigtype, function))()
int sigtype, (*function)();

@signal.h
signal.h -- Define signals

#include <signal.h>

@signame
signame -- Array of names of signals

#include <signal.h>
extern char *signame[_SIGNAL_MAX];

@sigpause
sigpause() -- Pause until a given signal is received

#include <signal.h>
int sigpause (sigtype)
int sigtype;

@sigpending
sigpending() -- Examine signals that are blocked and pending

#include <signal.h>
int sigpending(stash)
sigset_t *stash;

@sigprocmask
sigprocmask() -- Examine or change the signal mask

#include <signal.h>
int sigprocmask(how, set, old_set)
int how; const sigset_t *set; sigset_t *old_set;

@sigrelse
sigrelse() -- Release a signal for processing

#include <signal.h>
int sigrelse (sigtype)
int sigtype;

@sigset
sigset() -- Specify action to take upon receipt of a given signal

#include <signal.h>
void (*sigset (sigtype, function))()
int sigtype;
void (*function)();

@sigsetjmp
sigsetjmp() -- Save machine state and signal mask for non-local jump

#include <setjmp.h>
int sigsetjmp(environ, savemask)
sigjmp_buf environ;
int savemask;

@sigsuspend
sigsuspend() -- Install a signal mask and suspend process

#include <signal.h>
int sigsuspend(set)
const sigset_t *set;

@sin
sin() -- Calculate sine

#include <math.h>
double sin(radian) double radian;

@sinh
sinh() -- Calculate hyperbolic sine

#include <math.h>
double sinh(radian) double radian;

@size
size -- Print size of an object file

size [file ...]

@sizeof
sizeof -- Return size of a data element


@sleep
sleep -- Stop executing for a specified time

sleep seconds

@sleep
sleep() -- Suspend execution for interval

#include <unistd.h>
sleep(seconds)
unsigned seconds;

@smail
smail -- Send  mail

smail [-AcdLlRrv] -a aliasfile -F address -H [hostdomain] \
        -h [host] -m num -n [namelist] -p pathfile \
        -q num -u uuxflags address ...

Options:
     -A        Print the resolved  addresses; do not collect mail
     -a aliasfile
               Read aliasfile
     -c        Check /usr/lib/mail/paths for the cost of mailing a message to a
               given host
     -d        Give a verbose description; do not invoke other mailers
     -F address
               Use address on the From: line
     -H hostdomain
               Set the host's domain
     -h hostname
               Set a hostname
     -L        Send all addresses to the local mailer for processing
     -l        Send a domain address to the local mailer for processing
     -m num    Send no more than num jobs to uux
     -n [namelist]
               Use name-list style aliasing
     -p pathfile
               Read pathfile instead of /usr/lib/mail/paths
     -q num    Set the queuing threshold to num
     -R        Reroute  paths
     -r        Route the first component of a  path in addition to routing
               domain addresses
     -u uuxflags
               Pass uuxflags to uux
     -v        Give verbose description, but invoke other mailers
@smult
smult() -- Multiply multiple-precision integers

#include <mprec.h>
void smult(a, n, c)
mint *a, *c; int n;

@socket
socket() -- Create a socket

#include <sys/types.h>
#include <sys/socket.h>
int socket(domain, type, protocol)
int domain, type, protocol;

@socket.h
socket.h -- Define constants and structures with sockets

#include <sys/socket.h>

@sort
sort -- Sort lines of text

sort [-bcdfimnru] [-t c] [-o outfile] [-T dir] [+beg[-end]][file ...]

Options:
     -c        Check if input is already ordered
     -m        Merge already-sorted input files
     -o name   Place output in name, not stdout
     -tc       Tab character is c
     -T dir    Use dir for temporary files
     -u        Output only records with unique keys
Key options:
     -b        Skip leading blanks in fields
     -d        Dictionary ordering for keys
     -f        Fold upper case into lower case in key comparison
     -i        Ignore control characters in key comparison
     -n        Numeric comparison
     -r        Reverse sort ordering
Position:
     +m.nf     Key starts m fields into record and n characters into that
               field; f may contain optional flags from key options above which
               apply only to that positional
     -m.nf     Optional ending position of key (same form as above)

If no file is given, sort stdin.
@spac
spac -- Sort a file system

spac raw_device

@spell
spell -- Find spelling errors

spell [-a][-b][file ...]

Options:
     -a        Use American variant of the dictionary (default)
     -b        Use British variant of the dictionary
@split
split -- Split a text file into smaller files

split [-lines][-ccount][infile [outfile] ]

If infile is `-' or no infile, stdin is read.  outfile defaults to x.  lines is
number of lines for text files, count is the character count for binary files.
@spow
spow() -- Raise multiple-precision integer to power

#include <mprec.h>
void spow(a, n, b)
mint *a, *b; int n;

@sprintf
sprintf() -- Format output

#include <stdio.h>
int sprintf(string, format [ , arg ] ...)
char *string, *format;

@sqrt
sqrt() -- Compute square root

#include <math.h>
double sqrt(z) double z;

@srand
srand() -- Seed random number generator

#include <stdlib.h>
void srand(seed) int seed;

@srcpath
srcpath -- Find source files

srcpath [-aw] [-p path] filename pattern ...

Options:
     -a        Disable shadowing: print all instances of file it finds along
               SRCPATH, not just first
     -p path   Use path instead of SRCPATH
     -w        Print warning when you lack permission to read file or directory
@sscanf
sscanf() -- Format a string

#include <stdio.h>
int sscanf(string, format [, arg ] ...)
char *string; char *format;

@stack
stack -- Definition


@standard error
standard error -- Definition


@standard input
standard input -- Definition


@standard output
standard output -- Definition


@stat
stat() -- Find file attributes

#include <sys/stat.h>
int stat(file, statptr)
char *file; struct stat *statptr;

@stat.h
stat.h -- Definitions and declarations used to obtain file status

#include <sys/stat.h>

@statfs
statfs() -- Get information about a file system

#include <sys/types.h>
#include <sys/statfs.h>
int statfs (path, buffer, length, fstype)
char *path;
struct statfs *buffer;
int length, fstype;

@static
static -- Declare storage class


@stdarg.h
stdarg.h -- Header for variable numbers of arguments

#include <stdarg.h>

@stddef.h
stddef.h -- Header for standard definitions

#include <stddef.h>

@stderr
stderr -- Definition


@stdin
stdin -- Definition


@STDIO
STDIO -- Definition


@stdio.h
stdio.h -- Declarations and definitions for I/O


@stdlib.h
stdlib.h -- Declare/define general functions

#include <stdlib.h>

@stdout
stdout -- Definition


@sticky bit
sticky bit -- Definition


@stime
stime() -- Set the time

#include
int stime(timep)
time_t *timep;

@storage class
storage class -- Definition


@strcat
strcat() -- Concatenate two strings

#include <string.h>
char *strcat(string1, string2)
char *string1, *string2;

@strchr
strchr() -- Find a character in a string

#include <string.h>
char *strchr(string, character)
char *string; int character;

@strcmp
strcmp() -- Compare two strings

#include <string.h>
int strcmp(string1, string2)
char *string1, *string2;

@strcoll
strcoll() -- Compare two strings, using locale-specific information

#include <string.h>
int strcoll(string1, string2)
char *string1; char *string2;

@strcpy
strcpy() -- Copy one string into another

#include <string.h>
char *strcpy(string1, string2)
char *string1, *string2;

@strcspn
strcspn() -- Return length a string excludes characters in another

#include <string.h>
unsigned int strcspn(string1, string2)
char *string1, *string2;

@strdup
strdup() -- Duplicate a string

#include <string.h>
char *strdup(string)
char *string;

@stream
stream -- Definition


@stream.h
stream.h -- Definitions for message facility

#include <stream.h>

@STREAMS
STREAMS -- COHERENT implementation of STREAMS


@strerror
strerror() -- Translate an error number into a string

#include <string.h>
char *strerror(error)
int error;

@strftime
strftime() -- Format locale-specific time

#include <time.h>
size_t strftime(string, maximum, format, brokentime)
char *string; size_t maximum; const char *format;
        const struct tm *brokentime;

@string.h
string.h -- Declarations for string library

#include <string.h>

@strings
strings -- Print all character strings from a file

strings [-dopx] [-length] [file ... ]

Options:
     -d        Print offset of each string in decimal
     -o        Print offset of each string in octal
     -p        Mask out the parity bit
     -x        Print offset of each string in hexadecimal
@strip
strip -- Strip tables from executable file

strip file [...]

@strlen
strlen() -- Measure a string

#include <string.h>
int strlen(string)
char *string;

@strncat
strncat() -- Append one string onto another

#include <string.h>
char *strncat(string1, string2, n)
char *string1, *string2; unsigned n;

@strncmp
strncmp() -- Compare two strings

#include <string.h>
int strncmp(string1, string2, n)
char *string1, *string2; unsigned n;

@strncpy
strncpy() -- Copy one string into another

#include <string.h>
char *strncpy(string1, string2, n)
char *string1, *string2; unsigned n;

@stropts.h
stropts.h -- User-level STREAMS routines

#include <stropts.h>

@strpbrk
strpbrk() -- Find first occurrence of a character from another string

#include <string.h>
char *strpbrk(string1, string2)
char *string1, *string2;

@strrchr
strrchr() -- Search for rightmost occurrence of a character in a string

#include <string.h>
char *strrchr(string, character)
char *string; int character;

@strspn
strspn() -- Return length a string includes characters in another

#include <string.h>
unsigned int strspn(string1, string2)
char *string1; char *string2;

@strstr
strstr() -- Find one string within another

#include <string.h>
char *strstr(string1, string2)
char *string1, *string2;

@strtod
strtod() -- Convert string to floating-point number

#include <stdlib.h>
double strtod(string, tailptr)
char *string; char **tailptr;

@strtok
strtok() -- Break a string into tokens

#include <string.h>
char *strtok(string1, string2)
char *string1, *string2;

@strtol
strtol() -- Convert string to long integer

#include <stdlib.h>
long strtol(string, tailptr, base)
char *string; char **tailptr; int base;

@strtoul
strtoul() -- Convert string to unsigned long integer

#include <stdlib.h>
unsigned long strtoul(string, tailptr, base)
char *string; char **tailptr; int base;

@struct
struct -- Data type


@structure
structure -- Definition


@structure assignment
structure assignment -- Definition


@strxfrm
strxfrm() -- Transform a string

#include <string.h>
unsigned int strxfrm(string1, string2, n)
char *string1, *string2; unsigned int n;

@stty
stty -- Set/print terminal modes

stty
stty -a
stty -g
stty x:x: ... :x
stty arglist ...

Common Options:
     cooked    Insert device into cooked mode
     eof c     Set the end-of-file character to c
     eol c     Set the end-of-line character to c
     erase c   Set the erase character to c
     evenp     Turn on even parity
     intr c    Set the interrupt character to c
     kill c    Set the kill character to c
     lcase     Map upper-case characters to lower case
     -lcase    Turn off mapping of upper-case characters to lower case
     oddp      Turn on odd parity.
     parity    Turn on even parity
     -parity   Turn off parity
     quit c    Set the quit character to c
     raw       Insert device into raw mode
     sane      Restore a device to sanity, e.g., after an editor or
               communications program died unexpectedly

If no option is specified, stty prints the modes of the standard-input device
on stderr.
@stty
stty() -- Set terminal modes

#include <sgtty.h>
int stty(fd, sgp)
int fd;
struct sgttyb *sgp;

@stune
stune -- Set values of tunable kernel variables

/etc/conf/stune

@su
su -- Substitute user id, become superuser

su [user [command] ]

@sum
sum -- Print checksum of a file

sum [file ...]

@superuser
superuser -- Definition


@swab
swab() -- Swap a pair of bytes

void swab(src, dest, nb) char *src, *dest; unsigned nb;

@switch
switch -- Test a variable against a table


@sync
sync -- Flush system buffers

sync

@sync
sync() -- Flush system buffers

sync()

@sys
sys -- Data base for  connections

/usr/lib/uucp/sys

@sysconf
sysconf() -- Get configurable system variables

#include <unistd.h>
long sysconf(name)
int name;

@sysi86
sysi86() -- Identify parts within Intel-based machines

#include <sys/sysi86.h>
int sysi86(hardware, type)
int hardware, *type;

@system
system() -- Pass a command to the shell for execution

#include <stdlib.h>
int system(commandline) char *commandline;

@tail
tail -- Print the end of a file

tail [+n[bcfl]] [file]
tail [-n[bcfl]] [file]

Options:
     +n        n counts from beginning of file
     -n        n counts from end of file
     b         n is in blocks
     c         n is in characters (bytes)
     f         Open tail of file, then display new material as it is added to
               the file.  File remains open until you type interrupt (usually
               <ctrl-C>).
     l         n is in lines (default)
@tan
tan() -- Calculate tangent

#include <math.h>
double tan(radian) double radian;

@tanh
tanh() -- Calculate hyperbolic cosine

#include <math.h>
double tanh(radian) double radian;

@tape
tape -- Magnetic-tape devices


@tape
tape -- Manipulate a tape device

tape command [count] [device]

Commands:
     erase     Erase the tape.
     format    Format the tape.  This applies only to floppy-tape devices.
     position  Skip count files forward on the tape (default, one).
     reset     Reset the tape device.
     retension Retension the tape.
     rewind    Rewind the tape.
     rfm       Move the tape forward to the next file mark; in effect, skip the
               current file.
     status    Read the status of the tape device.
@tar
tar -- Archiving/backup utility

tar [options] file ...

tar is now a link to the command gtar.  See its Lexicon entry for details.
@tboot
tboot -- Describe the tertiary bootstrap


@tee
tee -- Copy input to multiple output streams

tee [ -a ] [ -i ] [ file ...]

Options:
     -a        Append to each output file
     -i        Ignore interrupts
@telldir
telldir() -- Return the current position within a directory stream

off_t telldir (dirp)
DIR *dirp;

@tempnam
tempnam() -- Generate a unique name for a temporary file

#include <stdio.h>
char *tempnam(directory, name);
char *directory, *name;

@TERM
TERM -- Name the default terminal type

TERM=terminal type

@term
term -- Format of compiled terminfo file


@termcap
termcap -- Terminal-description language

/etc/termcap

@terminal
terminal -- Technical Information


@terminfo
terminfo -- Terminal-description language

/usr/lib/terminfo

@termio
termio -- General terminal interface


@termio.h
termio.h -- Definitions used with terminal input and output

#include <termio.h>

@test
test -- Evaluate conditional expression

test expression ...

Options:
     ! exp     Negate logical value of exp
     string1 != string2
               string1 does not equal string2
     string1 < string2
               string1 is lexicographically less than string2 (sh only)
     string1 = string2
               string1 equals string2
     string1 > string2
               string1 is lexicographically greater than string2 (sh only)
     (exp)     Parentheses group expressions
     exp1 -a exp2
               Both expressions are true
     -b file   file is block-special
     -c file   file is character-special
     -d file   file is a directory
     -e file   file exists (sh only)
     file1 -ef file2
               Files are identical
     n1 -eq n2 Numbers are equal
     -f file   file exists and is an ordinary file
     -g file   file has setgid bit set
     n1 -ge n2 n1 is greater than or equal to n2
     n1 -gt n2 n1 greater than n2
     -k file   file has sticky bit set
     -L file   file is a symbolic link
     n1 -le n2 n1 is less than or equal to n2
     n1 -lt n2 n1 is less than n2
     -n string string has non-zero length
     n1 -ne n2 n1 does not equal n2
     f1 -nt f2 f1 is newer than f2
     exp1 -o exp2
               Either exp1 or exp2 is true
     f1 -ot f2 f1 is older than f2
     -p file   file is a named pipe
     -r file   file is readable
     -s file   file exists and has nonzero length
     -t [fd]   fd describes a terminal
     -u file   file has setuid set
     -w file   file is writable
     -x file   file is executable
     -z string string has zero length
     string    string has non-zero length
@tgetent
tgetent() -- Read termcap entry

int tgetent(bp, name)
char *bp, *name;

@tgetflag
tgetflag() -- Get termcap Boolean entry

int tgetflag(name)
char *name;

@tgetnum
tgetnum() -- Get termcap numeric feature

int tgetnum(name)
char *name;

@tgetstr
tgetstr() -- Get termcap string entry

char *tgetstr(name, area)
char *name, **area;

@tgoto
tgoto() -- Read/interpret termcap cursor-addressing string

char *tgoto(cm, destcol, destline)
char *cm; int scrcol, scrline;

@tic
tic -- Compile a terminfo description

tic [-v[n]] sourcefile

Option:
     -v        Verbose: Include debugging and tracing information.
@time
time -- Overview


@time
time -- Time the execution of a command

time [command]

@time.h
time.h -- Give time-description structure

#include <time.h>

@time
time() -- Get current system time

#include <time.h>
time_t time(tp)
time_t *tp;

@timeb.h
timeb.h -- Define timeb structure

#include <sys/timeb.h>

@timeout.h
timeout.h -- Define the timer queue

#include <timeout.h>

@times
times -- Print total user and system times

times

@times.h
times.h -- Definitions used with times() system call

#include <times.h>

@times
times() -- Obtain process execution times

#include <sys/times.h>
#include <time.h>
int times(tbp)
struct tms *tbp;

@TIMEZONE
TIMEZONE -- Time zone information

TIMEZONE=standard:offset[:daylight: date:date:hour:minutes]

@TMPDIR
TMPDIR -- Directory that holds temporary files


@tmpfile
tmpfile() -- Create a temporary file

#include <stdio.h>
FILE *tmpfile(void);

@tmpnam
tmpnam() -- Generate a unique name for a temporary file

#include <stdio.h>
char *tmpnam(name);
char *name;

@toascii
toascii() -- Convert characters to ASCII

#include <ctype.h>
int toascii(c) int c;

@tolower
tolower() -- Convert characters to lower case

#include <ctype.h>
int tolower(c) int c;

@touch
touch -- Update modification time of a file

touch [ -c ] file ...

Option:
     -c        Do not create file if it does not exist

The shell executes touch directly.
@toupper
toupper() -- Convert characters to upper case

#include <ctype.h>
int toupper(c) int c;

@tparm
tparm() -- Output a parameterized string

#include <curses.h>
tparm(string,p1...p9)
char *string, parm1 ... par9;

@tputs
tputs() -- Read/decode leading padding information

tputs(cp, affcnt, outc)
char *cp; int affcnt; int (*outc)();

@tr
tr -- Translate characters

tr [-cds] string1 [string2]

Options:
     -c        Complement the characters in string1
     -d        Delete characters found in string1 (no string2 needed)
     -s        Squeeze multiple output mappings onto one character

Both strings may contain ranges.  Characters may have form \nnn.
@trap
trap -- Execute command on receipt of signal

trap [command] [n ...]

The shell executes command on receipt of signal n ....  If command omitted, the
shell resets traps on given signals to original values.  If command is a null
string, given signals are ignored.  If n is zero, the shell executes command
when it exits.  With no arguments, it prints currently set traps.  The shell
executes trap directly.
@trigraph
trigraph -- C Language


@troff
troff -- Extended text-formatting language

troff [option ...] [file ...]

Options:
     -D        Display available fonts
     -f name   Write temporary file in file name
     -i        Read stdin after each file has been read
     -k        Keep temporary file
     -l        Landscape mode
     -mname    Read macro package /usr/lib/tmac.name
     -nN       Number first page of output N (default, one)
     -p        Produce PostScript output
     -raN      Set number register a to value N
     -rabN     Set number register ab to value N; for obvious reasons, ab
               cannot contain a digit
     -x        Do not eject to bottom of final page
@true
true -- Unconditional success

true

@trustme
trustme -- List of trusted users

/etc/trustme

@tsort
tsort -- Topological sort

tsort [file]

@ttt
ttt -- Play 3-D tic-tac-toe

/usr/games/ttt

@tty
tty -- Print the user's terminal name

tty

@tty.h
tty.h -- Define flags used with tty processing

#include <sys/tty.h>

@ttyname
ttyname() -- Identify a terminal

#include <unistd.h>
char *ttyname(fd)
int fd;

@ttys
ttys -- Describe terminal ports


@ttyslot
ttyslot() -- Return a terminal's line number

int ttyslot()

@ttystat
ttystat -- Get terminal status

/etc/ttystat [ -d ] port

Option:
     -d        Print status of port

Returns exit status 1 if specified port is enabled, 0 if disabled.  Prints
nothing unless -d option specified.
@ttytype
ttytype -- Select a default terminal type for a port

ttytype

@type checking
type checking -- Definition


@typedef
typedef -- Define a new data type


@type promotion
type promotion -- Definition


@types.h
types.h -- Define system-specific data types

#include <sys/types.h>

@typeset
typeset -- Set/list variables and their attributes

typeset
typeset [+-]fr
typeset [ irx ] variable=value


First form: List all variables and their attributes
Second form:
     +f        List functions
     -f        List functions plus values
     +r        List read-only variables
     -r        List read-only variables plus values

Third form: Set variable to equal value
     i         Store value as an integer
     r         List read-only variables
     x         Export variable=fR to environment

ksh only.
@typo
typo -- Detect possible typographical and spelling errors

typo [-nrs][file ...]

Options:
     -n        Do not use built-in English statistics or dictionary
     -r        Raw; do not remove nroff commands from the input
     -s        Produce digrams and trigrams files (maintenance only)
@tzset
tzset() -- Set local time zone

#include <time.h>
#include <sys/types.h>
void tzset()
extern long timezone; char *tzname[2][16];

@ulimit
ulimit() -- Get/set limits for a process

#include <ulimit.h>
long ulimit (command [, blocks^])
int command, blocks^;

@ulimit.h
ulimit.h -- Define manifest constants used by system call ulimit()

#include <ulimit.h>

@umask
umask -- Set the file-creation mask

umask [OOO]

OOO are three octal digits that describe file permissions.  The shell executes
umask directly.
@umask
umask() -- Set file-creation mask

#include <sys/stat.h>
int umask(mask)
int mask;

@umount
umount -- Unmount file system

/etc/umount special

@umount
umount() -- Unmount a file system

#include <sys/mount.h>
umount(filesystem)
char *filesystem;

@unalias
unalias -- Remove an alias

unalias alias ...
ksh only.  ksh only.

@uname
uname() -- Get the name and version of

#include <sys/utsname.h>
int uname(name)
struct utsname *name;

@uname
uname -- Print information about

uname [ -amnrsv ]
uname [ -S systemname ]

@uncompress
uncompress -- Uncompress a compressed file

uncompress [ file ... ]

@unctrl.h
unctrl.h -- Define macro unctrl()

#include <unctrl.h>

@ungetc
ungetc() -- Return character to input stream

#include <stdio.h>
int ungetc (c, fp)
int c; FILE *fp;

@union
union -- Multiply declare a variable


@uniq
uniq -- Remove/count repeated lines in a sorted file

uniq [-cdu] [-n] [+n] [infile[outfile]]

Options:
     -c        Print duplication count with lines
     -d        Print only duplicated lines
     -n        Skip n fields during comparison
     +n        Skip n characters (after skipping fields)
     -u        Print only non-repeated lines
@unistd.h
unistd.h -- Define constants for file-handling routines

#include <unistd.h>

@units
units -- Convert measurements

units [ -u ]

Option:
     -u        Update binary file only

units works interactively.
@unlink
unlink() -- Remove a file

#include <unistd.h>
int unlink(name) char *name;

@unmkfs
unmkfs -- Construct a prototype file system

unmkfs [-prefix] directory nblocks [file]

@unpack
unpack -- GNU utility to uncompress files

unpack [-cfhLrtvV ] [ file ... ]

Options:
     -c        Write output to the standard output
     -f        Force: decompress a file even if its has multiple links or the
               corresponding file already exists
     -h        Help: display a screenful of information about how to use this
               command
     -L        Display licensing information
     -r        Recurse: if a file is a directory, attempt to uncompress all
               files within it
     -t        Test the integrity of a compressed file
     -v        Give a verbose description of each action
     -V        Print the current version of this command
@unset
unset -- Unset an environment variable or shell function

unset environmental_variable
unset -f shell_function

@unsigned
unsigned -- Data type


@until
until -- Execute commands repeatedly

until sequence1 [ do sequence2 ] done

Both do and done must be the first token on a line or preceded by `;'.  The
shell executes until directly.
@upac
upac -- De-fragment a file system without sorting

upac raw_device

@update
update -- Update file systems periodically

/etc/update

@uproc.h
uproc.h -- Definitions used with user processes

#include <sys/uproc.h>

@USER
USER -- Name user's identifier

USER=user_identifier

@Using COHERENT
Using COHERENT -- Overview


@usrtime
usrtime -- Times each user is permitted to log in

/etc/usrtime

@ustat
ustat() -- Get statistics on a file system

#include <sys/types.h>
#include <ustat.h>
int ustat (device, buffer)
dev_t device;
struct ustat *buffer;

@utime
utime() -- Change file access and modification times

#include <sys/types.h>
#include <utime.h>
int utime(file, times)
char *file;
time_t times[2];

@utmp.h
utmp.h -- Login accounting information

#include <utmp.h>

@utsname.h
utsname.h -- Define utsname structure

#include <sys/utsname.h>

@uucheck
uucheck -- Check  configuation

uucheck [-svf]

Options:
     -s        Silent: do not output any error messages
     -v        Verbose: give verbose error messages
     -f        Fix: Interactively repair detected problems
@uucico
uucico -- Communicate with a remote site

/usr/lib/uucp/uucico [-D] [-csite] [-Ifile] [-pport] [-r0] [-r1] [-ssite] [-Ssite] [-xlevel]

Options:
     -csite    Poll site only if a file is queued for transmission to it
     -D        Do not detach from the device until the contact with the remote
               system concludes
     -I file   Read configuration information from file, instead of from the
               default file /usr/lib/uucp/sys
     -pport    Use port.  When used with the options -s or -S, dial out on
               port.
     -q        Quiet: do not invoke daemon uuxqt on the remote system
     -r0       Act as slave in polling process
     -r1       Act as master in polling process; default
     -ssite    Name site as a place to be polled
     -Ssite    Force the system to poll site immediately
     -xactivity
               Log a given activity, for debugging purposes
@UUCP
UUCP -- Unattended communication with remote systems


@uucp
uucp -- Spool files for transmission to other systems

uucp [ -cCdfmr ] [-nuser] [-xactivity] source ... dest

Options:
     -c        Do not copy source to spool directory; rather use the file
               itself
     -C        Copy source file to spool directory (default; same as -p)
     -d        Create directories as required on destination
     -f        Do not make intermediate directories; fail if they do not exist
     -I file   Use file as configuration file
     -j        Report job's process identifier
     -m        Send mail to requester when file is sent
     -nuser    Notify user (on destination system) when file received
     -p        Copy source file to spool directory (default; same as -C)
     -R        Copy directories recursively
     -r        Spool transfer request, do not initiate uucico
     -s file   Write status upon completion of job into file
     -u user   Set user name to user
     -W        Do not add the current directory to file names on the remote
               system
     -xactivity
               Log a given  activity, for debugging purposes
@uucpname
uucpname -- Set the system's  name

/etc/uucpname

@uudecode
uudecode -- Decode a binary file sent from a remote system

uudecode [ file ]

@uuencode
uuencode -- Encode a binary file for transmission

uuencode [ source ] file_label [ < source ] > output

@uuinstall
uuinstall -- Install or modify

uuinstall

@uulog
uulog -- Read a  log

uulog [-fsystem] [-ssystem] [-nnumber] [-x]

Options:
     -fsystem  Show  activity as it is logged; like tail -f
     -nnumber  Display number lines from the end of the log
     -ssystem  Display the  log for system
     -x        Display logs for uuxqt instead of uucico
@uumvlog
uumvlog -- Archive  log files

uumvlog days

Options:
     days      Number of days for which logs should be kept
@uuname
uuname -- List  names of known systems

uuname [ -l ]

Option:
     -l        Print name of the local system
@uurmlock
uurmlock -- Remove  lock files

uurmlock

@uutouch
uutouch -- Touch a file to trigger  poll

uutouch system

@uutry
uutry -- Debugging script for

uutry remotesystem [-xdebuglevel]"

@uux
uux -- Execute a command on a remote system

uux [-a user] [-rnpz] command-string

Options:
     -a user   Name user as requester
     -g l      Set importance of transmission; l is a single ASCII character
     -n        Suppress notification of command completion
     -p        Input to uux is a pipe or input redirection
     -r        Queue uux request; do not invoke uucico
     -z        Notify requestor when command-line succeeds
@uuxqt
uuxqt -- Execute commands requested by a remote system

uuxqt

@va_arg
va_arg() -- Return pointer to next argument in argument list

#include <stdarg.h>
typename *va_arg(listptr, typename)
va_list listptr, typename;
#include <varargs.h>
typename *va_arg(listptr, typename)
va_list listptr, typename;

@va_end
va_end() -- Tidy up after traversal of argument list

#include <stdarg.h>
void va_end(listptr)
va_list listptr;
#include <varargs.h>
void va_end(listptr)
va_list listptr;

@va_start
va_start() -- Point to beginning of argument list

#include <varargs.h>
void va_start(listptr)
va_list listptr;
#include <stdarg.h>
void va_start(listptr, rightparm)
va_list listptr, type rightparm;

@varargs.h
varargs.h -- Declare/define routines for variable arguments

#include <varargs.h>

@vfprintf
vfprintf() -- Print formatted text into stream

#include <stdarg.h>
#include <stdio.h>
int
vfprintf(fp, format, arguments)
FILE*fp; char *format; va_list arguments;

@vi
vi -- Clone of Berkeley-style screen editor

vi [ options ] [ +cmd ] [ file1 ... file27 ]

Options:
     -e        Begin in colon-command mode
     -i        Begin in input mode
     -r        Recover a previous edit
     -R        Read-only mode
     -t tag    Begin editing at tag
     -m        Use in error-handling mode
     -v        Begin in visual-command mode
     +command  Execute command before editing
@vidattr
vidattr() -- Set the terminal's video attributes

#include <curses.h>
vidattr(newmode)
int newmode;

@vidputs
vidputs() -- Write video attributes into a function

#include <curses.h>
vidputs(newmode,outc)
int newmode;
int (*outc)();

@view
view -- Screen-oriented viewing utility

view file1 ... file27

@virec
virec -- Recover the modified version of a file after a crash

virec [-d tmpdir] textfilename...
virec </tmp/elvXXX

@virtual console
virtual console --  system of multiple virtual consoles


@void
void -- Data type


@volatile
volatile -- Qualify an identifier as frequently changing


@vprintf
vprintf() -- Print formatted text into standard output stream

#include <stdarg.h>
#include <stdio.h>
int
vprintf(format, arguments)
char *format; va_list arguments;

@vsh
vsh -- Interactive graphical shell

vsh [-ddirectory] [-eirt]

Options:
     -ddirectory
               Begin work directory rather than in the directory from which you
               exited vsh; if no directory named, begin work in the current
               directory
     -e        Do not use VT-100 graphics-character set
     -i        Restrict the use of the Install menu
     -r        Restrict user's ability to customize vsh or access a shell
     -t        Use full VT-100 graphics mapping
@vsprintf
vsprintf() -- Print formatted text into string

#include <stdarg.h>
#include <stdio.h>
int
vsprintf(string, format, arguments)
char *string, *format; va_list arguments;

@vtkb
vtkb -- Non-configurable keyboard driver, virtual consoles


@vtnkb
vtnkb -- Configurable keyboard driver, virtual consoles


@wait
wait -- Await completion of background process

wait [pid]

pid identifies the process whose completion is awaited.  If no pid is given,
wait awaits completion of all background processes.  The shell executes wait
directly.
@wait.h
wait.h -- Define wait routines

#include <sys/wait.h>

@wait
wait() -- Await completion of a child process

#include <sys/wait.h>
wait(statp)
int *statp;

@waitpid
waitpid() -- Wait for a process to terminate

#include <sys/types.h>
#include <sys/wait.h>
pid_t waitpid(pid,status, flags)
pid_t pid; int *status, flags;

@wall
wall -- Send a message to all logged-in users

/etc/wall

@wc
wc -- Count words, lines, and characters in text files

wc [-clw] [file...]

Options:
     -c        Print count of characters
     -l        Print count of lines
     -w        Print count of words

If no file is given, wc reads stdin; if more than one file is given, it also
prints a total.
@welcome
welcome -- Welcome a new user

/etc/default/welcome

@whence
whence -- List a command's type

whence [-v] command ...

ksh only.
@whereis
whereis -- Locate source, binary, and manual files

whereis [-bmrsu] [-BMS dir ... -f] name ...

Options:
     -b        Search only for for binary files
     -m        Search only for manual pages
     -r        Search each dir downwardly recursively
     -s        Search only for source files
     -u        Search for unusual files
     -B        Search each dir for binary files
     -M        Search each dir for manual pages
     -R        Search each dir downwardly recursively
     -S        Search each dir for source files
     -f        Terminate directory list begun by -BMRS options
@which
which -- Locate executable files

which command ...

@while
while -- Execute commands repeatedly

while sequence1 [do sequence2] done

Both do and done must be the first token on a line or preceded by `;'.  The
shell executes while directly.
@while
while -- Introduce a loop

while(condition)

@who
who -- Print who is logged in

who [file] [am i]

@wildcards
wildcards -- Definition


@write
write -- Converse with another user

write user [ tty ]

Name the tty if user is logged in on more than one port.
@write
write() -- Write to a file

#include <unistd.h>
int write(fd, buffer, n)
int fd; char *buffer; int n;

@xargs
xargs -- Execute a command with many arguments

xargs command argument ... argument

@xgcd
xgcd() -- Extended greatest-common-divisor function

#include <mprec.h>
void xgcd(a, b, r, s, g)
mint *a, *b, *r, *s, *g;

@yacc
yacc -- Parser generator

yacc [option ...] file
cc y.tab.c [-ly]

Options:
     -d        Enable debugging output (implies -v)
     -hdr      Next argument is name of header file (default, y.tab.h)
     -items    Allow N items per state.
     -l        Next argument is name of listfile (default, y.output)
     sprod N   Allow N symbols per production (default, 20)
     -st       Print statistics on standard output
     -v        Verbose (extra output in listfile)

After each of the following, the next argument is a number to reset table size:
     -nterms   Nonterminal symbols (default, 100)
     -prods    Productions or rules (default, 350)
     -states   States (default, 300)
     -terms    Terminal symbols (default, 300)
     -types    Types (default, 10)
@yes
yes -- Print infinitely many responses

yes [ string ]

@zcat
zcat -- Concatenate a compressed file

zcat [ file.Z ... ]

@zerop
zerop() -- Indicate if multi-precision integer is zero

#include <mprec.h>
int zerop(a)
mint *a;

